[{"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\index.js":"1","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\App.js":"2","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\PageIndex.js":"4","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\RegisterPage\\Register.js":"5","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\OtherPage\\NotFound.jsx":"6","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\TopPage\\Top.jsx":"7","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\HomePage\\Home.jsx":"8","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\LogInPage\\Login.jsx":"9","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\InputModePage\\Input_mode.jsx":"10","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInputPage\\Pre_Input.jsx":"11","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoTournamentNamber\\TournamentNamber.jsx":"12","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoStartingMember\\StartingMember.js":"13","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\InputSchool.jsx":"14","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoMakegamePage\\Sokuho_Input_Makegame.jsx":"15","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputTournamentPage\\Input_Tournament.jsx":"16","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\InputMember.jsx":"17","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\Member.js":"18","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\Schools.js":"19","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\Venues.js":"20","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\Position.js":"21","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\freeWrite.jsx":"22","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\outCount.jsx":"23","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\baseballButton.jsx":"24","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreBoard.jsx":"25","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\CheckBoxList1.jsx":"26","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\Hyoji.jsx":"27","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\myIndexOf.js":"28","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\Score.js":"29","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\OtherPage\\Option.jsx":"30","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\InputPlayGame.jsx":"31","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\OutPutGame\\OutPutGame.js":"32","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\PullDown\\PullDown.js":"33","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\ballPositionDB.js":"34","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\updateButton.jsx":"35","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\onisi_popup\\onisi_popup.jsx":"36","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\index.js":"37","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\App.js":"38","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\reportWebVitals.js":"39","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\PageIndex.js":"40","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutGame\\OutPutGame.js":"41","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\RegisterPage\\Register.js":"42","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\TopPage\\Top.jsx":"43","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\LogInPage\\Login.jsx":"44","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\HomePage\\Home.jsx":"45","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\NotFound.jsx":"46","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\InputPlayGame.jsx":"47","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoStartingMember\\StartingMember.js":"48","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoMakegamePage\\Sokuho_Input_Makegame.jsx":"49","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\InputSchool.jsx":"50","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\InputMember.jsx":"51","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputTournamentPage\\Input_Tournament.jsx":"52","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Score.js":"53","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Member.js":"54","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Venues.js":"55","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Schools.js":"56","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\baseballButton.jsx":"57","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\outCount.jsx":"58","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreBoard.jsx":"59","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\freeWrite.jsx":"60","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\PullDown\\PullDown.js":"61","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\updateButton.jsx":"62","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\myIndexOf.js":"63","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\onisi_popup\\onisi_popup.jsx":"64","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\Hyoji.jsx":"65","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\CheckBoxList1.jsx":"66","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\ballPositionDB.js":"67","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Position.js":"68","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\PullDown\\PullDownMember.js":"69","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Member2.js":"70","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\PositionDB.js":"71","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoSelectTournament\\SokuhoSelectTournament.jsx":"72","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\runnerCount.jsx":"73","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Position9DB.js":"74","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\optionFunc\\optionButton.jsx":"75","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\optionFunc\\OptionButton.jsx":"76","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\GameEndPopup\\GameEndPopup.jsx":"77","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreCorrection\\EditPoint.jsx":"78","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreCorrection\\Outputpoint.jsx":"79","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\TitleBar\\TitleBar.jsx":"80","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\communication.js":"81","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\MemberPopup\\MemberPopup.jsx":"82","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputTournamentPage\\com\\EditTournamentPopup\\EditTournamentPopup.jsx":"83","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\comCanvas\\Ground.jsx":"84","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\comCanvas\\battedBall.jsx":"85","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\EditSchoolPopup\\EditSchoolPopup.jsx":"86","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\EditMemberPopup\\EditMemberPopup.jsx":"87","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\Functions\\IsEnpty.js":"88","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoMakegamePage\\EditMakeGamePopup\\EditMakegamePopup.jsx":"89","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\optionFunc\\MenuBar.jsx":"90","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutGame\\StartingMemberList.jsx":"91","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutGame\\StartingMember.jsx":"92","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutGame\\DasekiHistoryList.jsx":"93","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutGame\\DasekiHistory.jsx":"94","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\PageIndex.js":"95","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\HomePage\\Home.jsx":"96","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\GameList\\GameList.jsx":"97","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\Bulletin\\Bulletin.js":"98","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\Bulletin\\DasekiHistoryList.jsx":"99","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\Bulletin\\StartingMemberList.jsx":"100","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\Bulletin\\DasekiHistory.jsx":"101","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\Bulletin\\StartingMember.jsx":"102","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\TournamentList\\SelectTournament.jsx":"103","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\RefHistoricalData\\TournamentBase\\TournamentList\\SelectTournament.jsx":"104","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\RefHistoricalData\\WholePlayer\\RefSchool.js":"105","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\RefHistoricalData\\WholePlayer\\MemberList.jsx":"106","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\RefHistoricalData\\WholePlayer\\Member.jsx":"107","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\index.js":"108","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\App.js":"109","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\reportWebVitals.js":"110","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\communication.js":"111","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\PageIndex.js":"112","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\RegisterPage\\Register.js":"113","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\HomePage\\Home.jsx":"114","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\NotFound.jsx":"115","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\LogInPage\\Login.jsx":"116","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\TopPage\\Top.jsx":"117","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoSelectTournament\\SokuhoSelectTournament.jsx":"118","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoStartingMember\\StartingMember.js":"119","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoMakegamePage\\Sokuho_Input_Makegame.jsx":"120","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\InputPlayGame.jsx":"121","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\InputSchool.jsx":"122","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputTournamentPage\\Input_Tournament.jsx":"123","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\InputMember.jsx":"124","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\Member2.js":"125","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\PositionDB.js":"126","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\Member.js":"127","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\Position9DB.js":"128","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\Score.js":"129","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\TitleBar\\TitleBar.jsx":"130","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\runnerCount.jsx":"131","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreBoard.jsx":"132","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\outCount.jsx":"133","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\freeWrite.jsx":"134","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\PullDown\\PullDownMember.js":"135","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\baseballButton.jsx":"136","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\PullDown\\PullDown.js":"137","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\optionFunc\\OptionButton.jsx":"138","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\optionFunc\\MenuBar.jsx":"139","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoMakegamePage\\EditMakeGamePopup\\EditMakegamePopup.jsx":"140","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\Hyoji.jsx":"141","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreCorrection\\EditPoint.jsx":"142","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\onisi_popup\\onisi_popup.jsx":"143","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\GameEndPopup\\GameEndPopup.jsx":"144","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\CheckBoxList1.jsx":"145","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\comCanvas\\Ground.jsx":"146","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\comCanvas\\battedBall.jsx":"147","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\EditSchoolPopup\\EditSchoolPopup.jsx":"148","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputTournamentPage\\com\\EditTournamentPopup\\EditTournamentPopup.jsx":"149","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\EditMemberPopup\\EditMemberPopup.jsx":"150","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\MemberPopup\\MemberPopup.jsx":"151","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\Position.js":"152","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\ballPositionDB.js":"153","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\Functions\\IsEnpty.js":"154","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreCorrection\\Outputpoint.jsx":"155","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoGameStartPage\\SokuhoGameStartPage.jsx":"156","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\RegisterVenue\\RegisterVenue.jsx":"157","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\RegisterVenue\\com\\EditVenuePopup\\EditVenuePopup.jsx":"158","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\InputPastGame.jsx":"159"},{"size":535,"mtime":1667623628427,"results":"160","hashOfConfig":"161"},{"size":2618,"mtime":1667822128593,"results":"162","hashOfConfig":"161"},{"size":362,"mtime":1667623628500,"results":"163","hashOfConfig":"161"},{"size":1087,"mtime":1667635307519,"results":"164","hashOfConfig":"161"},{"size":2802,"mtime":1667633445920,"results":"165","hashOfConfig":"161"},{"size":598,"mtime":1664850316407,"results":"166","hashOfConfig":"161"},{"size":3839,"mtime":1669096447953,"results":"167","hashOfConfig":"161"},{"size":1452,"mtime":1669276315494,"results":"168","hashOfConfig":"161"},{"size":3286,"mtime":1668586351029,"results":"169","hashOfConfig":"161"},{"size":629,"mtime":1665210486296,"results":"170","hashOfConfig":"161"},{"size":759,"mtime":1665382004654,"results":"171","hashOfConfig":"161"},{"size":2274,"mtime":1667634709597,"results":"172","hashOfConfig":"161"},{"size":28768,"mtime":1668497636433,"results":"173","hashOfConfig":"161"},{"size":3333,"mtime":1669104261821,"results":"174","hashOfConfig":"161"},{"size":6582,"mtime":1669266041085,"results":"175","hashOfConfig":"161"},{"size":5018,"mtime":1669362554245,"results":"176","hashOfConfig":"161"},{"size":9390,"mtime":1669279278272,"results":"177","hashOfConfig":"161"},{"size":5336,"mtime":1665552475477,"results":"178","hashOfConfig":"161"},{"size":1735,"mtime":1669191924316,"results":"179","hashOfConfig":"161"},{"size":964,"mtime":1665550205960,"results":"180","hashOfConfig":"161"},{"size":1096,"mtime":1667975250562,"results":"181","hashOfConfig":"161"},{"size":313,"mtime":1667976395126,"results":"182","hashOfConfig":"161"},{"size":3439,"mtime":1668771653342,"results":"183","hashOfConfig":"161"},{"size":716,"mtime":1668765451768,"results":"184","hashOfConfig":"161"},{"size":1544,"mtime":1668767732379,"results":"185","hashOfConfig":"161"},{"size":1736,"mtime":1669100250983,"results":"186","hashOfConfig":"161"},{"size":1024,"mtime":1669099759221,"results":"187","hashOfConfig":"161"},{"size":697,"mtime":1665649564510,"results":"188","hashOfConfig":"161"},{"size":174,"mtime":1668148626043,"results":"189","hashOfConfig":"161"},{"size":1146,"mtime":1669178420123,"results":"190","hashOfConfig":"161"},{"size":9061,"mtime":1668771578821,"results":"191","hashOfConfig":"161"},{"size":4710,"mtime":1667822258264,"results":"192","hashOfConfig":"161"},{"size":5878,"mtime":1668688792242,"results":"193","hashOfConfig":"161"},{"size":1559,"mtime":1667977085988,"results":"194","hashOfConfig":"161"},{"size":287,"mtime":1668067552264,"results":"195","hashOfConfig":"161"},{"size":3733,"mtime":1668771480100,"results":"196","hashOfConfig":"161"},{"size":648,"mtime":1670649243039,"results":"197","hashOfConfig":"198"},{"size":3644,"mtime":1674208683246,"results":"199","hashOfConfig":"198"},{"size":362,"mtime":1667623628500,"results":"200","hashOfConfig":"198"},{"size":952,"mtime":1671455910090,"results":"201","hashOfConfig":"198"},{"size":22062,"mtime":1674191992830,"results":"202","hashOfConfig":"198"},{"size":2802,"mtime":1667633445920,"results":"203","hashOfConfig":"198"},{"size":36793,"mtime":1672119333939,"results":"204","hashOfConfig":"198"},{"size":3216,"mtime":1672930524889,"results":"205","hashOfConfig":"198"},{"size":1958,"mtime":1674193344275,"results":"206","hashOfConfig":"198"},{"size":598,"mtime":1664850316407,"results":"207","hashOfConfig":"198"},{"size":55297,"mtime":1674703918403,"results":"208","hashOfConfig":"198"},{"size":20122,"mtime":1674634484033,"results":"209","hashOfConfig":"198"},{"size":15327,"mtime":1674633823286,"results":"210","hashOfConfig":"198"},{"size":11977,"mtime":1674469648668,"results":"211","hashOfConfig":"198"},{"size":30313,"mtime":1673521087247,"results":"212","hashOfConfig":"198"},{"size":11869,"mtime":1673167068442,"results":"213","hashOfConfig":"198"},{"size":394,"mtime":1670586763604,"results":"214","hashOfConfig":"198"},{"size":5336,"mtime":1665552475477,"results":"215","hashOfConfig":"198"},{"size":964,"mtime":1665550205960,"results":"216","hashOfConfig":"198"},{"size":1735,"mtime":1669191924316,"results":"217","hashOfConfig":"198"},{"size":753,"mtime":1670047113180,"results":"218","hashOfConfig":"198"},{"size":3377,"mtime":1673423512840,"results":"219","hashOfConfig":"198"},{"size":1648,"mtime":1673423390668,"results":"220","hashOfConfig":"198"},{"size":808,"mtime":1671709190813,"results":"221","hashOfConfig":"198"},{"size":11159,"mtime":1674289368575,"results":"222","hashOfConfig":"198"},{"size":287,"mtime":1668067552264,"results":"223","hashOfConfig":"198"},{"size":697,"mtime":1665649564510,"results":"224","hashOfConfig":"198"},{"size":8360,"mtime":1674645893633,"results":"225","hashOfConfig":"198"},{"size":2964,"mtime":1673579047991,"results":"226","hashOfConfig":"198"},{"size":1864,"mtime":1671866621794,"results":"227","hashOfConfig":"198"},{"size":1868,"mtime":1672916840533,"results":"228","hashOfConfig":"198"},{"size":1096,"mtime":1669805180943,"results":"229","hashOfConfig":"198"},{"size":9639,"mtime":1674118753761,"results":"230","hashOfConfig":"198"},{"size":5341,"mtime":1669795527054,"results":"231","hashOfConfig":"198"},{"size":1100,"mtime":1669805634900,"results":"232","hashOfConfig":"198"},{"size":3620,"mtime":1672992210227,"results":"233","hashOfConfig":"198"},{"size":2769,"mtime":1673424545440,"results":"234","hashOfConfig":"198"},{"size":646,"mtime":1670148696840,"results":"235","hashOfConfig":"198"},{"size":1067,"mtime":1670581746895,"results":"236","hashOfConfig":"198"},{"size":1747,"mtime":1673577907656,"results":"237","hashOfConfig":"198"},{"size":2991,"mtime":1674289270699,"results":"238","hashOfConfig":"198"},{"size":1379,"mtime":1671182825528,"results":"239","hashOfConfig":"198"},{"size":695,"mtime":1671182825560,"results":"240","hashOfConfig":"198"},{"size":517,"mtime":1671527844950,"results":"241","hashOfConfig":"198"},{"size":226,"mtime":1673581158465,"results":"242","hashOfConfig":"198"},{"size":2590,"mtime":1673170765577,"results":"243","hashOfConfig":"198"},{"size":7517,"mtime":1674636707521,"results":"244","hashOfConfig":"198"},{"size":4542,"mtime":1672908349868,"results":"245","hashOfConfig":"198"},{"size":4749,"mtime":1674698174432,"results":"246","hashOfConfig":"198"},{"size":6764,"mtime":1674469693888,"results":"247","hashOfConfig":"198"},{"size":17175,"mtime":1673520913927,"results":"248","hashOfConfig":"198"},{"size":245,"mtime":1673167707555,"results":"249","hashOfConfig":"198"},{"size":10550,"mtime":1674634103206,"results":"250","hashOfConfig":"198"},{"size":4909,"mtime":1674188731247,"results":"251","hashOfConfig":"198"},{"size":272,"mtime":1674191284644,"results":"252","hashOfConfig":"198"},{"size":672,"mtime":1674191284629,"results":"253","hashOfConfig":"198"},{"size":934,"mtime":1674191284596,"results":"254","hashOfConfig":"198"},{"size":7462,"mtime":1674191284580,"results":"255","hashOfConfig":"198"},{"size":564,"mtime":1674208373226,"results":"256","hashOfConfig":"198"},{"size":1995,"mtime":1674454554030,"results":"257","hashOfConfig":"198"},{"size":10314,"mtime":1674295678664,"results":"258","hashOfConfig":"198"},{"size":22058,"mtime":1674197138935,"results":"259","hashOfConfig":"198"},{"size":934,"mtime":1674191284596,"results":"260","hashOfConfig":"198"},{"size":272,"mtime":1674191284644,"results":"261","hashOfConfig":"198"},{"size":7462,"mtime":1674191284580,"results":"262","hashOfConfig":"198"},{"size":672,"mtime":1674191284629,"results":"263","hashOfConfig":"198"},{"size":3770,"mtime":1674454522456,"results":"264","hashOfConfig":"198"},{"size":3638,"mtime":1674206971294,"results":"265","hashOfConfig":"198"},{"size":10858,"mtime":1674193667537,"results":"266","hashOfConfig":"198"},{"size":192,"mtime":1674193667521,"results":"267","hashOfConfig":"198"},{"size":948,"mtime":1674193667499,"results":"268","hashOfConfig":"198"},{"size":648,"mtime":1670649243039,"results":"269","hashOfConfig":"270"},{"size":2898,"mtime":1675141684751,"results":"271","hashOfConfig":"270"},{"size":362,"mtime":1667623628500,"results":"272","hashOfConfig":"270"},{"size":240,"mtime":1675143599345,"results":"273","hashOfConfig":"270"},{"size":1225,"mtime":1675062330688,"results":"274","hashOfConfig":"270"},{"size":2802,"mtime":1667633445920,"results":"275","hashOfConfig":"270"},{"size":1958,"mtime":1674969985388,"results":"276","hashOfConfig":"270"},{"size":598,"mtime":1664850316407,"results":"277","hashOfConfig":"270"},{"size":3216,"mtime":1672930524889,"results":"278","hashOfConfig":"270"},{"size":36793,"mtime":1672119333939,"results":"279","hashOfConfig":"270"},{"size":3620,"mtime":1672992210227,"results":"280","hashOfConfig":"270"},{"size":20497,"mtime":1675056896405,"results":"281","hashOfConfig":"270"},{"size":15474,"mtime":1674973865421,"results":"282","hashOfConfig":"270"},{"size":57394,"mtime":1675138569210,"results":"283","hashOfConfig":"270"},{"size":11977,"mtime":1674469648668,"results":"284","hashOfConfig":"270"},{"size":12665,"mtime":1674977453605,"results":"285","hashOfConfig":"270"},{"size":30313,"mtime":1673521087247,"results":"286","hashOfConfig":"270"},{"size":5341,"mtime":1669795527054,"results":"287","hashOfConfig":"270"},{"size":1100,"mtime":1669805634900,"results":"288","hashOfConfig":"270"},{"size":5336,"mtime":1665552475477,"results":"289","hashOfConfig":"270"},{"size":646,"mtime":1670148696840,"results":"290","hashOfConfig":"270"},{"size":394,"mtime":1670586763604,"results":"291","hashOfConfig":"270"},{"size":517,"mtime":1671527844950,"results":"292","hashOfConfig":"270"},{"size":2769,"mtime":1675137047122,"results":"293","hashOfConfig":"270"},{"size":1648,"mtime":1673423390668,"results":"294","hashOfConfig":"270"},{"size":3377,"mtime":1673423512840,"results":"295","hashOfConfig":"270"},{"size":808,"mtime":1671709190813,"results":"296","hashOfConfig":"270"},{"size":9639,"mtime":1674118753761,"results":"297","hashOfConfig":"270"},{"size":783,"mtime":1675137069771,"results":"298","hashOfConfig":"270"},{"size":11159,"mtime":1674897541708,"results":"299","hashOfConfig":"270"},{"size":1747,"mtime":1673577907656,"results":"300","hashOfConfig":"270"},{"size":4909,"mtime":1674188731247,"results":"301","hashOfConfig":"270"},{"size":10550,"mtime":1674634103206,"results":"302","hashOfConfig":"270"},{"size":2964,"mtime":1673579047991,"results":"303","hashOfConfig":"270"},{"size":1379,"mtime":1671182825528,"results":"304","hashOfConfig":"270"},{"size":8693,"mtime":1675063994353,"results":"305","hashOfConfig":"270"},{"size":3078,"mtime":1675139749477,"results":"306","hashOfConfig":"270"},{"size":1864,"mtime":1671866621794,"results":"307","hashOfConfig":"270"},{"size":4542,"mtime":1672908349868,"results":"308","hashOfConfig":"270"},{"size":4853,"mtime":1675137930900,"results":"309","hashOfConfig":"270"},{"size":6764,"mtime":1674469693888,"results":"310","hashOfConfig":"270"},{"size":8508,"mtime":1674977021849,"results":"311","hashOfConfig":"270"},{"size":17175,"mtime":1673520913927,"results":"312","hashOfConfig":"270"},{"size":2590,"mtime":1673170765577,"results":"313","hashOfConfig":"270"},{"size":1096,"mtime":1669805180943,"results":"314","hashOfConfig":"270"},{"size":1868,"mtime":1672916840533,"results":"315","hashOfConfig":"270"},{"size":245,"mtime":1673167707555,"results":"316","hashOfConfig":"270"},{"size":695,"mtime":1671182825560,"results":"317","hashOfConfig":"270"},{"size":5922,"mtime":1675066522144,"results":"318","hashOfConfig":"270"},{"size":5128,"mtime":1674973425080,"results":"319","hashOfConfig":"270"},{"size":5672,"mtime":1674973560025,"results":"320","hashOfConfig":"270"},{"size":57323,"mtime":1675138636558,"results":"321","hashOfConfig":"270"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8cukje",{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","suppressedMessages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},"1opevd9",{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"443","messages":"444","suppressedMessages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","suppressedMessages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"449","messages":"450","suppressedMessages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"433"},{"filePath":"453","messages":"454","suppressedMessages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"456","messages":"457","suppressedMessages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","suppressedMessages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"468","messages":"469","suppressedMessages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"471","messages":"472","suppressedMessages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","suppressedMessages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","suppressedMessages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"481"},{"filePath":"482","messages":"483","suppressedMessages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"485","messages":"486","suppressedMessages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"488","messages":"489","suppressedMessages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","suppressedMessages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"494","messages":"495","suppressedMessages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","suppressedMessages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"433"},{"filePath":"507","messages":"508","suppressedMessages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","suppressedMessages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","suppressedMessages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"433"},{"filePath":"517","messages":"518","suppressedMessages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","suppressedMessages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"523","messages":"524","suppressedMessages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"433"},{"filePath":"527","messages":"528","suppressedMessages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","suppressedMessages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"533","messages":"534","suppressedMessages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","suppressedMessages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"539","messages":"540","suppressedMessages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"542","messages":"543","suppressedMessages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"563","messages":"564","suppressedMessages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"566","messages":"567","suppressedMessages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"569","messages":"570","suppressedMessages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","suppressedMessages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"481"},{"filePath":"575","messages":"576","suppressedMessages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","suppressedMessages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"587","messages":"588","suppressedMessages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","suppressedMessages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"593","messages":"594","suppressedMessages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"596","messages":"597","suppressedMessages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","suppressedMessages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"605","messages":"606","suppressedMessages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","suppressedMessages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"611","messages":"612","suppressedMessages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","suppressedMessages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"617","messages":"618","suppressedMessages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"620","messages":"621","suppressedMessages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"623","messages":"624","suppressedMessages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","suppressedMessages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"629","messages":"630","suppressedMessages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"632","messages":"633","suppressedMessages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","suppressedMessages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"638","messages":"639","suppressedMessages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"641","messages":"642","suppressedMessages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"644","messages":"645","suppressedMessages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","suppressedMessages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ybljwt",{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"657"},{"filePath":"658","messages":"659","suppressedMessages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"661","messages":"662","suppressedMessages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","suppressedMessages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"667","messages":"668","suppressedMessages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"670","messages":"671","suppressedMessages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673"},{"filePath":"674","messages":"675","suppressedMessages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","suppressedMessages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680"},{"filePath":"681","messages":"682","suppressedMessages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452"},{"filePath":"684","messages":"685","suppressedMessages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687"},{"filePath":"688","messages":"689","suppressedMessages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691"},{"filePath":"692","messages":"693","suppressedMessages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695"},{"filePath":"696","messages":"697","suppressedMessages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699"},{"filePath":"700","messages":"701","suppressedMessages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703"},{"filePath":"704","messages":"705","suppressedMessages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"707"},{"filePath":"708","messages":"709","suppressedMessages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711"},{"filePath":"712","messages":"713","suppressedMessages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","suppressedMessages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"718","messages":"719","suppressedMessages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","suppressedMessages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"724","messages":"725","suppressedMessages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"727","messages":"728","suppressedMessages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"730","messages":"731","suppressedMessages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733"},{"filePath":"734","messages":"735","suppressedMessages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","suppressedMessages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"740","messages":"741","suppressedMessages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506"},{"filePath":"743","messages":"744","suppressedMessages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746"},{"filePath":"747","messages":"748","suppressedMessages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"750","messages":"751","suppressedMessages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753"},{"filePath":"754","messages":"755","suppressedMessages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757"},{"filePath":"758","messages":"759","suppressedMessages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761"},{"filePath":"762","messages":"763","suppressedMessages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765"},{"filePath":"766","messages":"767","suppressedMessages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769"},{"filePath":"770","messages":"771","suppressedMessages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"773","messages":"774","suppressedMessages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776"},{"filePath":"777","messages":"778","suppressedMessages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780"},{"filePath":"781","messages":"782","suppressedMessages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526"},{"filePath":"784","messages":"785","suppressedMessages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"787","messages":"788","suppressedMessages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"790","messages":"791","suppressedMessages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"793"},{"filePath":"794","messages":"795","suppressedMessages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"797","messages":"798","suppressedMessages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"800","messages":"801","suppressedMessages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"803","messages":"804","suppressedMessages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"806","messages":"807","suppressedMessages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"809","messages":"810","suppressedMessages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812"},{"filePath":"813","messages":"814","suppressedMessages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","suppressedMessages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819"},{"filePath":"820","messages":"821","suppressedMessages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"823"},{"filePath":"824","messages":"825","suppressedMessages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"827","messages":"828","suppressedMessages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"830"},"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\index.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\App.js",["831","832","833","834","835","836"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\PageIndex.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\RegisterPage\\Register.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\OtherPage\\NotFound.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\TopPage\\Top.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\HomePage\\Home.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\LogInPage\\Login.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\InputModePage\\Input_mode.jsx",["837","838","839","840"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInputPage\\Pre_Input.jsx",["841","842","843","844"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoTournamentNamber\\TournamentNamber.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoStartingMember\\StartingMember.js",["845","846","847"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\InputSchool.jsx",["848","849","850","851"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoMakegamePage\\Sokuho_Input_Makegame.jsx",["852","853","854"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputTournamentPage\\Input_Tournament.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\InputMember.jsx",["855","856","857","858","859","860"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\Member.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\Schools.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\Venues.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\Position.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\freeWrite.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\outCount.jsx",["861"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\baseballButton.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreBoard.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\CheckBoxList1.jsx",["862","863"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\Hyoji.jsx",["864"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\myIndexOf.js",["865","866","867"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\Score.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\OtherPage\\Option.jsx",["868","869"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\InputPlayGame.jsx",["870","871","872","873","874","875"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\OutPutGame\\OutPutGame.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\PullDown\\PullDown.js",["876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\DB\\ballPositionDB.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\updateButton.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\mein\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\onisi_popup\\onisi_popup.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\index.js",[],[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\App.js",["923","924","925"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\PageIndex.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutGame\\OutPutGame.js",["926","927","928","929","930","931","932","933","934","935","936","937","938","939"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\RegisterPage\\Register.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\TopPage\\Top.jsx",["940"],[],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst { Member } = require(\"../../DB/Member\");\r\nconst { Member2 } = require(\"../../DB/Member2\");\r\nconst { PositionDB } = require(\"../../DB/PositionDB\");\r\n\r\n\r\nconst loadMember = () => {\r\n  fetch(\"http://localhost:5000/member/tournament_member_call\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n          \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ tournament_id: 1, school_id: 1 }),\r\n  })\r\n      .then((response) => response.json())\r\n      .then((data) => { console.log(data); })\r\n}\r\n\r\n\r\n\r\nconst tableStyle = {\r\n    border: '1px solid black',\r\n    borderCollapse: 'collapse',\r\n    textAlign: 'center'\r\n}\r\n\r\nconst tdStyle = {\r\n    border: '1px solid #85C1E9',\r\n    background: 'white',\r\n    padding: '5px'\r\n};\r\n\r\nconst thStyle = {\r\n    border: '1px solid #3498DB',\r\n    background: '#3498DB',\r\n    color: 'white',\r\n    padding: '2px'\r\n};\r\n\r\nconst thStyle_shimei = {\r\n    border: '1px solid #3498DB',\r\n    background: '#3498DB',\r\n    color: 'white',\r\n    padding: '2px'\r\n}\r\n\r\n\r\nconst tdStyle2 = {\r\n    border: '1px solid #F5494F',\r\n    background: 'white',\r\n    padding: '5px'\r\n};\r\n\r\nconst thStyle2 = {\r\n    border: '1px solid #F62E36',\r\n    background: '#F62E36',\r\n    color: 'white',\r\n    padding: '2px'\r\n};\r\n\r\nconst Top = () => {\r\n\r\n    //ページ遷移用\r\n    const navigate = useNavigate()\r\n    const PageTransition = (url) => {\r\n        navigate(url)\r\n    }\r\n\r\n   \r\n\r\n\r\n    //守備位置\r\n\r\n    const PositionRef1 = useRef(null)\r\n    const PositionRef2 = useRef(null)\r\n    const PositionRef3 = useRef(null)\r\n    const PositionRef4 = useRef(null)\r\n    const PositionRef5 = useRef(null)\r\n    const PositionRef6 = useRef(null)\r\n    const PositionRef7 = useRef(null)\r\n    const PositionRef8 = useRef(null)\r\n    const PositionRef9 = useRef(null)\r\n\r\n    const PositionRef1_team2 = useRef(null)\r\n    const PositionRef2_team2 = useRef(null)\r\n    const PositionRef3_team2 = useRef(null)\r\n    const PositionRef4_team2 = useRef(null)\r\n    const PositionRef5_team2 = useRef(null)\r\n    const PositionRef6_team2 = useRef(null)\r\n    const PositionRef7_team2 = useRef(null)\r\n    const PositionRef8_team2 = useRef(null)\r\n    const PositionRef9_team2 = useRef(null)\r\n\r\n    let initialValues = [{ position: \"\", name: \"\" }]\r\n    for (let i = 0; i < 9 - 1; i++) {\r\n        initialValues = [...initialValues, { position: \"\", name: \"\" }]\r\n    }\r\n\r\n    let initialValues_team2 = [{ position: \"\", name: \"\" }]\r\n    for (let i = 0; i < 9 - 1; i++) {\r\n        initialValues_team2 = [...initialValues_team2, { position: \"\", name: \"\" }]\r\n    }\r\n\r\n    const [Position, setPosition] = useState(initialValues)\r\n    const [Position_team2, setPosition_team2] = useState(initialValues_team2)\r\n\r\n\r\n    //動的にポジションの関数を指定\r\n    const doPositionDitect = {\r\n        \"1\": function (option) { PositionRef1.current.appendChild(option); },\r\n        \"2\": function (option) { PositionRef2.current.appendChild(option); },\r\n        \"3\": function (option) { PositionRef3.current.appendChild(option); },\r\n        \"4\": function (option) { PositionRef4.current.appendChild(option); },\r\n        \"5\": function (option) { PositionRef5.current.appendChild(option); },\r\n        \"6\": function (option) { PositionRef6.current.appendChild(option); },\r\n        \"7\": function (option) { PositionRef7.current.appendChild(option); },\r\n        \"8\": function (option) { PositionRef8.current.appendChild(option); },\r\n        \"9\": function (option) { PositionRef9.current.appendChild(option); },\r\n    };\r\n\r\n    const doPositionDitect_team2 = {\r\n        \"1\": function (option) { PositionRef1_team2.current.appendChild(option); },\r\n        \"2\": function (option) { PositionRef2_team2.current.appendChild(option); },\r\n        \"3\": function (option) { PositionRef3_team2.current.appendChild(option); },\r\n        \"4\": function (option) { PositionRef4_team2.current.appendChild(option); },\r\n        \"5\": function (option) { PositionRef5_team2.current.appendChild(option); },\r\n        \"6\": function (option) { PositionRef6_team2.current.appendChild(option); },\r\n        \"7\": function (option) { PositionRef7_team2.current.appendChild(option); },\r\n        \"8\": function (option) { PositionRef8_team2.current.appendChild(option); },\r\n        \"9\": function (option) { PositionRef9_team2.current.appendChild(option); },\r\n    };\r\n\r\n\r\n    const setPositionNo = () => {\r\n        for (let i = 1; i <= 9; i++) {\r\n            for (let j = 1; j <= 9; j++) {\r\n                const option = document.createElement('option')\r\n                option.value = j\r\n                option.text = PositionDB[j-1].kata\r\n                doPositionDitect[i](option)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setPositionNo_team2 = () => {\r\n        for (let i = 1; i <= 9; i++) {\r\n            for (let j = 1; j <= 9; j++) {\r\n                const option = document.createElement('option')\r\n                option.value = j\r\n                option.text = PositionDB[j-1].kata\r\n                doPositionDitect_team2[i](option)\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectPosition = (e, id) => {\r\n        let copyPosition = Position.slice(0, Position.length); // stateの配列をコピー(値渡し)\r\n        copyPosition[id - 1].position = e.target.value\r\n        setPosition(copyPosition)\r\n        console.log(copyPosition)\r\n    }\r\n\r\n    const selectPosition_team2 = (e, id) => {\r\n        let copyPosition_team2 = Position_team2.slice(0, Position_team2.length); // stateの配列をコピー(値渡し)\r\n        copyPosition_team2[id - 1].position = e.target.value\r\n        setPosition_team2(copyPosition_team2)\r\n        console.log(copyPosition_team2)\r\n    }\r\n\r\n    //選手氏名\r\n    const memberNameRef1 = useRef(null)  //useref(refarenceで値を参照するという意味)を定義する\r\n    const memberNameRef2 = useRef(null)\r\n    const memberNameRef3 = useRef(null)\r\n    const memberNameRef4 = useRef(null)\r\n    const memberNameRef5 = useRef(null)\r\n    const memberNameRef6 = useRef(null)\r\n    const memberNameRef7 = useRef(null)\r\n    const memberNameRef8 = useRef(null)\r\n    const memberNameRef9 = useRef(null)\r\n\r\n    const memberNameRef1_team2 = useRef(null)  //useref(refarenceで値を参照するという意味)を定義する\r\n    const memberNameRef2_team2 = useRef(null)\r\n    const memberNameRef3_team2 = useRef(null)\r\n    const memberNameRef4_team2 = useRef(null)\r\n    const memberNameRef5_team2 = useRef(null)\r\n    const memberNameRef6_team2 = useRef(null)\r\n    const memberNameRef7_team2 = useRef(null)\r\n    const memberNameRef8_team2 = useRef(null)\r\n    const memberNameRef9_team2 = useRef(null)\r\n\r\n    const doMemberDitect = {\r\n        \"1\": function (option) { memberNameRef1.current.appendChild(option); },\r\n        \"2\": function (option) { memberNameRef2.current.appendChild(option); },\r\n        \"3\": function (option) { memberNameRef3.current.appendChild(option); },\r\n        \"4\": function (option) { memberNameRef4.current.appendChild(option); },\r\n        \"5\": function (option) { memberNameRef5.current.appendChild(option); },\r\n        \"6\": function (option) { memberNameRef6.current.appendChild(option); },\r\n        \"7\": function (option) { memberNameRef7.current.appendChild(option); },\r\n        \"8\": function (option) { memberNameRef8.current.appendChild(option); },\r\n        \"9\": function (option) { memberNameRef9.current.appendChild(option); },\r\n    };\r\n\r\n    const doMemberDitect_team2 = {\r\n        \"1\": function (option) { memberNameRef1_team2.current.appendChild(option); },\r\n        \"2\": function (option) { memberNameRef2_team2.current.appendChild(option); },\r\n        \"3\": function (option) { memberNameRef3_team2.current.appendChild(option); },\r\n        \"4\": function (option) { memberNameRef4_team2.current.appendChild(option); },\r\n        \"5\": function (option) { memberNameRef5_team2.current.appendChild(option); },\r\n        \"6\": function (option) { memberNameRef6_team2.current.appendChild(option); },\r\n        \"7\": function (option) { memberNameRef7_team2.current.appendChild(option); },\r\n        \"8\": function (option) { memberNameRef8_team2.current.appendChild(option); },\r\n        \"9\": function (option) { memberNameRef9_team2.current.appendChild(option); },\r\n    };\r\n\r\n    const doKakikaeDitect = {\r\n        \"1\": function () { kakikae1(); },\r\n        \"2\": function () { kakikae2(); },\r\n        \"3\": function () { kakikae3(); },\r\n        \"4\": function () { kakikae4(); },\r\n        \"5\": function () { kakikae5(); },\r\n        \"6\": function () { kakikae6(); },\r\n        \"7\": function () { kakikae7(); },\r\n        \"8\": function () { kakikae8(); },\r\n        \"9\": function () { kakikae9(); },\r\n    }\r\n\r\n    const doKakikaeDitect_team2 = {\r\n        \"1\": function () { kakikae1_team2(); },\r\n        \"2\": function () { kakikae2_team2(); },\r\n        \"3\": function () { kakikae3_team2(); },\r\n        \"4\": function () { kakikae4_team2(); },\r\n        \"5\": function () { kakikae5_team2(); },\r\n        \"6\": function () { kakikae6_team2(); },\r\n        \"7\": function () { kakikae7_team2(); },\r\n        \"8\": function () { kakikae8_team2(); },\r\n        \"9\": function () { kakikae9_team2(); },\r\n    }\r\n\r\n    const initialSetMember = () => {\r\n        for (let i = 1; i <= 9; i++) {\r\n            for (let j = 1; j <= Member.length; j++) {\r\n                const option = document.createElement('option')\r\n                option.value = Member[j - 1].player_name_kanji //なぜ\"vulue\"と\"text\"の両方に値を入れているのかは分かりません\r\n                option.text = Member[j - 1].player_name_kanji\r\n                doMemberDitect[i](option)\r\n            }\r\n            for(let k = 1; k <= 9; k++){\r\n              doKakikaeDitect[k]()\r\n            }    \r\n        }\r\n    }\r\n\r\n    const initialSetMember_team2 = () => {\r\n        for (let i = 1; i <= 9; i++) {\r\n            for (let j = 1; j <= Member2.length; j++) {\r\n                const option = document.createElement('option')\r\n                option.value = Member2[j - 1].player_name_kanji //なぜ\"vulue\"と\"text\"の両方に値を入れているのかは分かりません\r\n                option.text = Member2[j - 1].player_name_kanji\r\n                doMemberDitect_team2[i](option)\r\n            }\r\n            for(let k = 1; k <= 9; k++){\r\n              doKakikaeDitect_team2[k]()\r\n            }    \r\n        }\r\n    }\r\n\r\n    const selectMember = (e, id) => {\r\n      let copyPosition = Position.slice(0, Position.length); // stateの配列をコピー(値渡し)\r\n      copyPosition[id - 1].name = e.target.value\r\n      setPosition(copyPosition)\r\n      console.log(copyPosition)\r\n\r\n      const kanji_num1 = Member.findIndex((name) => { return name.player_name_kanji === memberNameRef1.current.value })\r\n      kakikae1(kanji_num1)\r\n      const kanji_num2 = Member.findIndex((name) => { return name.player_name_kanji === memberNameRef2.current.value })\r\n      kakikae2(kanji_num2)\r\n      const kanji_num3 = Member.findIndex((name) => { return name.player_name_kanji === memberNameRef3.current.value })\r\n      kakikae3(kanji_num3)\r\n      const kanji_num4 = Member.findIndex((name) => { return name.player_name_kanji === memberNameRef4.current.value })\r\n      kakikae4(kanji_num4)\r\n      const kanji_num5 = Member.findIndex((name) => { return name.player_name_kanji === memberNameRef5.current.value })\r\n      kakikae5(kanji_num5)\r\n      const kanji_num6 = Member.findIndex((name) => { return name.player_name_kanji === memberNameRef6.current.value })\r\n      kakikae6(kanji_num6)\r\n      const kanji_num7 = Member.findIndex((name) => { return name.player_name_kanji === memberNameRef7.current.value })\r\n      kakikae7(kanji_num7)\r\n      const kanji_num8 = Member.findIndex((name) => { return name.player_name_kanji === memberNameRef8.current.value })\r\n      kakikae8(kanji_num8)\r\n      const kanji_num9 = Member.findIndex((name) => { return name.player_name_kanji === memberNameRef9.current.value })\r\n      kakikae9(kanji_num9)\r\n    }\r\n\r\n    const selectMember_team2 = (e, id) => {\r\n        let copyPosition_team2 = Position_team2.slice(0, Position_team2.length); // stateの配列をコピー(値渡し)\r\n        copyPosition_team2[id - 1].name = e.target.value\r\n        setPosition_team2(copyPosition_team2)\r\n        console.log(copyPosition_team2)\r\n  \r\n        const kanji_num1_team2 = Member2.findIndex((name) => { return name.player_name_kanji === memberNameRef1_team2.current.value })\r\n        kakikae1_team2(kanji_num1_team2)\r\n        const kanji_num2_team2 = Member2.findIndex((name) => { return name.player_name_kanji === memberNameRef2_team2.current.value })\r\n        kakikae2_team2(kanji_num2_team2)\r\n        const kanji_num3_team2 = Member2.findIndex((name) => { return name.player_name_kanji === memberNameRef3_team2.current.value })\r\n        kakikae3_team2(kanji_num3_team2)\r\n        const kanji_num4_team2 = Member2.findIndex((name) => { return name.player_name_kanji === memberNameRef4_team2.current.value })\r\n        kakikae4_team2(kanji_num4_team2)\r\n        const kanji_num5_team2 = Member2.findIndex((name) => { return name.player_name_kanji === memberNameRef5_team2.current.value })\r\n        kakikae5_team2(kanji_num5_team2)\r\n        const kanji_num6_team2 = Member2.findIndex((name) => { return name.player_name_kanji === memberNameRef6_team2.current.value })\r\n        kakikae6_team2(kanji_num6_team2)\r\n        const kanji_num7_team2 = Member2.findIndex((name) => { return name.player_name_kanji === memberNameRef7_team2.current.value })\r\n        kakikae7_team2(kanji_num7_team2)\r\n        const kanji_num8_team2 = Member2.findIndex((name) => { return name.player_name_kanji === memberNameRef8_team2.current.value })\r\n        kakikae8_team2(kanji_num8_team2)\r\n        const kanji_num9_team2 = Member2.findIndex((name) => { return name.player_name_kanji === memberNameRef9_team2.current.value })\r\n        kakikae9_team2(kanji_num9_team2)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPositionNo()\r\n        initialSetMember()\r\n        setPositionNo_team2()\r\n        initialSetMember_team2()\r\n        loadMember()\r\n    }, []);\r\n\r\n   \r\n\r\n    const kakikae1 = (x = 0) => {\r\n        document.getElementById(\"uniform_number\"+1).innerHTML = Member[x].uniform_number\r\n        document.getElementById(\"grade\"+1).innerHTML = Member[x].grade\r\n        document.getElementById(\"player_name_hira\"+1).innerHTML = Member[x].player_name_hira\r\n    }\r\n    const kakikae2 = (x = 0) => {\r\n        document.getElementById(\"uniform_number2\").innerHTML = Member[x].uniform_number\r\n        document.getElementById(\"grade2\").innerHTML = Member[x].grade\r\n        document.getElementById(\"player_name_hira2\").innerHTML = Member[x].player_name_hira\r\n    }\r\n    const kakikae3 = (x = 0) => {\r\n        document.getElementById(\"uniform_number3\").innerHTML = Member[x].uniform_number\r\n        document.getElementById(\"grade3\").innerHTML = Member[x].grade\r\n        document.getElementById(\"player_name_hira3\").innerHTML = Member[x].player_name_hira\r\n    }\r\n    const kakikae4 = (x = 0) => {\r\n        document.getElementById(\"uniform_number4\").innerHTML = Member[x].uniform_number\r\n        document.getElementById(\"grade4\").innerHTML = Member[x].grade\r\n        document.getElementById(\"player_name_hira4\").innerHTML = Member[x].player_name_hira\r\n    }\r\n    const kakikae5 = (x = 0) => {\r\n        document.getElementById(\"uniform_number5\").innerHTML = Member[x].uniform_number\r\n        document.getElementById(\"grade5\").innerHTML = Member[x].grade\r\n        document.getElementById(\"player_name_hira5\").innerHTML = Member[x].player_name_hira\r\n    }\r\n    const kakikae6 = (x = 0) => {\r\n        document.getElementById(\"uniform_number6\").innerHTML = Member[x].uniform_number\r\n        document.getElementById(\"grade6\").innerHTML = Member[x].grade\r\n        document.getElementById(\"player_name_hira6\").innerHTML = Member[x].player_name_hira\r\n    }\r\n    const kakikae7 = (x = 0) => {\r\n        document.getElementById(\"uniform_number7\").innerHTML = Member[x].uniform_number\r\n        document.getElementById(\"grade7\").innerHTML = Member[x].grade\r\n        document.getElementById(\"player_name_hira7\").innerHTML = Member[x].player_name_hira\r\n    }\r\n    const kakikae8 = (x = 0) => {\r\n        document.getElementById(\"uniform_number8\").innerHTML = Member[x].uniform_number\r\n        document.getElementById(\"grade8\").innerHTML = Member[x].grade\r\n        document.getElementById(\"player_name_hira8\").innerHTML = Member[x].player_name_hira\r\n    }\r\n    const kakikae9 = (x = 0) => {\r\n        document.getElementById(\"uniform_number9\").innerHTML = Member[x].uniform_number\r\n        document.getElementById(\"grade9\").innerHTML = Member[x].grade\r\n        document.getElementById(\"player_name_hira9\").innerHTML = Member[x].player_name_hira\r\n    }\r\n\r\n\r\n    const kakikae1_team2 = (x = 0) => {\r\n        document.getElementById(\"uniform_number1_team2\").innerHTML = Member2[x].uniform_number\r\n        document.getElementById(\"grade1_team2\").innerHTML = Member2[x].grade\r\n        document.getElementById(\"player_name_hira1_team2\").innerHTML = Member2[x].player_name_hira\r\n    }\r\n    const kakikae2_team2 = (x = 0) => {\r\n        document.getElementById(\"uniform_number2_team2\").innerHTML = Member2[x].uniform_number\r\n        document.getElementById(\"grade2_team2\").innerHTML = Member2[x].grade\r\n        document.getElementById(\"player_name_hira2_team2\").innerHTML = Member2[x].player_name_hira\r\n    }\r\n    const kakikae3_team2 = (x = 0) => {\r\n        document.getElementById(\"uniform_number3_team2\").innerHTML = Member2[x].uniform_number\r\n        document.getElementById(\"grade3_team2\").innerHTML = Member2[x].grade\r\n        document.getElementById(\"player_name_hira3_team2\").innerHTML = Member2[x].player_name_hira\r\n    }\r\n    const kakikae4_team2 = (x = 0) => {\r\n        document.getElementById(\"uniform_number4_team2\").innerHTML = Member2[x].uniform_number\r\n        document.getElementById(\"grade4_team2\").innerHTML = Member2[x].grade\r\n        document.getElementById(\"player_name_hira4_team2\").innerHTML = Member2[x].player_name_hira\r\n    }\r\n    const kakikae5_team2 = (x = 0) => {\r\n        document.getElementById(\"uniform_number5_team2\").innerHTML = Member2[x].uniform_number\r\n        document.getElementById(\"grade5_team2\").innerHTML = Member2[x].grade\r\n        document.getElementById(\"player_name_hira5_team2\").innerHTML = Member2[x].player_name_hira\r\n    }\r\n    const kakikae6_team2 = (x = 0) => {\r\n        document.getElementById(\"uniform_number6_team2\").innerHTML = Member2[x].uniform_number\r\n        document.getElementById(\"grade6_team2\").innerHTML = Member2[x].grade\r\n        document.getElementById(\"player_name_hira6_team2\").innerHTML = Member2[x].player_name_hira\r\n    }\r\n    const kakikae7_team2 = (x = 0) => {\r\n        document.getElementById(\"uniform_number7_team2\").innerHTML = Member2[x].uniform_number\r\n        document.getElementById(\"grade7_team2\").innerHTML = Member2[x].grade\r\n        document.getElementById(\"player_name_hira7_team2\").innerHTML = Member2[x].player_name_hira\r\n    }\r\n    const kakikae8_team2 = (x = 0) => {\r\n        document.getElementById(\"uniform_number8_team2\").innerHTML = Member2[x].uniform_number\r\n        document.getElementById(\"grade8_team2\").innerHTML = Member2[x].grade\r\n        document.getElementById(\"player_name_hira8_team2\").innerHTML = Member2[x].player_name_hira\r\n    }\r\n    const kakikae9_team2 = (x = 0) => {\r\n        document.getElementById(\"uniform_number9_team2\").innerHTML = Member2[x].uniform_number\r\n        document.getElementById(\"grade9_team2\").innerHTML = Member2[x].grade\r\n        document.getElementById(\"player_name_hira9_team2\").innerHTML = Member2[x].player_name_hira\r\n    }\r\n\r\n    const tyouhuku = () => {\r\n      //守備位置重複確認\r\n      for(let i=1; i<=9; i++){\r\n        for(let j=i+1; j<=9; j++){\r\n          if(Position[i-1].position === Position[j-1].position){\r\n            alert(\"チーム１の\" + i + \"番打者と\" + j + \"番打者の守備位置が重複しています\")\r\n            break;\r\n          }\r\n          if(Position_team2[i-1].position === Position_team2[j-1].position){\r\n            alert(\"チーム２の\" + i + \"番打者と\" + j + \"番打者の守備位置が重複しています\")\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      //選手氏名重複確認\r\n      for(let i=1; i<=9; i++){\r\n        for(let j=i+1; j<=9; j++){\r\n          if(Position[i-1].name === Position[j-1].name){\r\n            alert(\"チーム１の\" + i + \"番打者と\" + j + \"番打者の選手氏名が重複しています\")\r\n            break;\r\n          }\r\n          if(Position_team2[i-1].name === Position_team2[j-1].name){\r\n            alert(\"チーム２の\" + i + \"番打者と\" + j + \"番打者の選手氏名が重複しています\")\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        PageTransition(\"home\")\r\n    })\r\n\r\n\r\n    return (\r\n        <div align='center'>  \r\n            <h2>選手登録画面</h2>\r\n            <div id=\"error\"></div>\r\n            <table style={tableStyle}>\r\n                <tbody>\r\n                    <tr><th>う高校</th></tr>\r\n                    <tr>\r\n                        <th style={thStyle} rowSpan=\"2\">打順</th>\r\n                        <th style={thStyle} rowSpan=\"2\">位置</th>\r\n                        <th style={thStyle}>ふりがな</th>\r\n                        <th style={thStyle} rowSpan=\"2\">背番号</th>\r\n                        <th style={thStyle} rowSpan=\"2\">学年</th>\r\n                    </tr>\r\n                    <tr><th style={thStyle_shimei}>選手氏名</th></tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle} rowSpan=\"2\">1</td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><select ref={PositionRef1} value={Position[1 - 1].position} onChange={(e) => selectPosition(e, 1)}></select></td>\r\n                        <td style={tdStyle}><div id=\"player_name_hira1\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"uniform_number1\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"grade1\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle}><select ref={memberNameRef1} value={Position[1 - 1].name} onChange={(e) => selectMember(e, 1)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle} rowSpan=\"2\">2</td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><select ref={PositionRef2} value={Position[2 - 1].position} onChange={(e) => selectPosition(e, 2)}></select></td>\r\n                        <td style={tdStyle}><div id=\"player_name_hira2\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"uniform_number2\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"grade2\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle}><select ref={memberNameRef2} value={Position[2 - 1].name} onChange={(e) => selectMember(e, 2)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle} rowSpan=\"2\">3</td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><select ref={PositionRef3} value={Position[3 - 1].position} onChange={(e) => selectPosition(e, 3)}></select></td>\r\n                        <td style={tdStyle}><div id=\"player_name_hira3\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"uniform_number3\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"grade3\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle}><select ref={memberNameRef3} value={Position[3 - 1].name} onChange={(e) => selectMember(e, 3)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle} rowSpan=\"2\">4</td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><select ref={PositionRef4} value={Position[4 - 1].position} onChange={(e) => selectPosition(e, 4)}></select></td>\r\n                        <td style={tdStyle}><div id=\"player_name_hira4\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"uniform_number4\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"grade4\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle}><select ref={memberNameRef4} value={Position[4 - 1].name} onChange={(e) => selectMember(e, 4)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle} rowSpan=\"2\">5</td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><select ref={PositionRef5} value={Position[5 - 1].position} onChange={(e) => selectPosition(e, 5)}></select></td>\r\n                        <td style={tdStyle}><div id=\"player_name_hira5\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"uniform_number5\"></div></td>              \r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"grade5\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle}><select ref={memberNameRef5} value={Position[5 - 1].name} onChange={(e) => selectMember(e, 5)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle} rowSpan=\"2\">6</td>\r\n                        <td style={tdStyle} rowSpan=\"2\" ><select ref={PositionRef6} value={Position[6 - 1].position} onChange={(e) => selectPosition(e, 6)}></select></td>\r\n                        <td style={tdStyle}><div id=\"player_name_hira6\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"uniform_number6\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"grade6\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle}><select ref={memberNameRef6} value={Position[6 - 1].name} onChange={(e) => selectMember(e, 6)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle} rowSpan=\"2\">7</td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><select ref={PositionRef7} value={Position[7 - 1].position} onChange={(e) => selectPosition(e, 7)}></select></td>\r\n                        <td style={tdStyle}><div id=\"player_name_hira7\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"uniform_number7\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"grade7\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle}><select ref={memberNameRef7} value={Position[7 - 1].name} onChange={(e) => selectMember(e, 7)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle} rowSpan=\"2\">8</td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><select ref={PositionRef8} value={Position[8 - 1].position} onChange={(e) => selectPosition(e, 8)}></select></td>\r\n                        <td style={tdStyle}><div id=\"player_name_hira8\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"uniform_number8\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"grade8\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle}><select ref={memberNameRef8} value={Position[8 - 1].name} onChange={(e) => selectMember(e, 8)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle} rowSpan=\"2\">9</td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><select ref={PositionRef9} value={Position[9 - 1].position} onChange={(e) => selectPosition(e, 9)}></select></td>\r\n                        <td style={tdStyle}><div id=\"player_name_hira9\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"uniform_number9\"></div></td>\r\n                        <td style={tdStyle} rowSpan=\"2\"><div id=\"grade9\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle}><select ref={memberNameRef9} value={Position[9 - 1].name} onChange={(e) => selectMember(e, 9)}></select></td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table><br /><br />\r\n            <table style={tableStyle}>\r\n                <tbody>\r\n                    <tr><th>え高校</th></tr>\r\n                    <tr>\r\n                        <th style={thStyle2} rowSpan=\"2\">打順</th>\r\n                        <th style={thStyle2} rowSpan=\"2\">位置</th>\r\n                        <th style={thStyle2}>ふりがな</th>\r\n                        <th style={thStyle2} rowSpan=\"2\">背番号</th>\r\n                        <th style={thStyle2} rowSpan=\"2\">学年</th>\r\n                    </tr>\r\n                    <tr><th style={thStyle2}>選手氏名</th></tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle2} rowSpan=\"2\">1</td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><select ref={PositionRef1_team2} value={Position_team2[1 - 1].position} onChange={(e) => selectPosition_team2(e, 1)}></select></td>\r\n                        <td style={tdStyle2}><div id=\"player_name_hira1_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"uniform_number1_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"grade1_team2\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle2}><select ref={memberNameRef1_team2} value={Position_team2[1 - 1].name} onChange={(e) => selectMember_team2(e, 1)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle2} rowSpan=\"2\">2</td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><select ref={PositionRef2_team2} value={Position_team2[2 - 1].position} onChange={(e) => selectPosition_team2(e, 2)}></select></td>\r\n                        <td style={tdStyle2}><div id=\"player_name_hira2_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"uniform_number2_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"grade2_team2\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle2}><select ref={memberNameRef2_team2} value={Position_team2[2 - 1].name} onChange={(e) => selectMember_team2(e, 2)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle2} rowSpan=\"2\">3</td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><select ref={PositionRef3_team2} value={Position_team2[3 - 1].position} onChange={(e) => selectPosition_team2(e, 3)}></select></td>\r\n                        <td style={tdStyle2}><div id=\"player_name_hira3_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"uniform_number3_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"grade3_team2\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle2}><select ref={memberNameRef3_team2} value={Position_team2[3 - 1].name} onChange={(e) => selectMember_team2(e, 3)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle2} rowSpan=\"2\">4</td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><select ref={PositionRef4_team2} value={Position_team2[4 - 1].position} onChange={(e) => selectPosition_team2(e, 4)}></select></td>\r\n                        <td style={tdStyle2}><div id=\"player_name_hira4_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"uniform_number4_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"grade4_team2\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle2}><select ref={memberNameRef4_team2} value={Position_team2[4 - 1].name} onChange={(e) => selectMember_team2(e, 4)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle2} rowSpan=\"2\">5</td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><select ref={PositionRef5_team2} value={Position_team2[5 - 1].position} onChange={(e) => selectPosition_team2(e, 5)}></select></td>\r\n                        <td style={tdStyle2}><div id=\"player_name_hira5_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"uniform_number5_team2\"></div></td>              \r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"grade5_team2\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle2}><select ref={memberNameRef5_team2} value={Position_team2[5 - 1].name} onChange={(e) => selectMember_team2(e, 5)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle2} rowSpan=\"2\">6</td>\r\n                        <td style={tdStyle2} rowSpan=\"2\" ><select ref={PositionRef6_team2} value={Position_team2[6 - 1].position} onChange={(e) => selectPosition_team2(e, 6)}></select></td>\r\n                        <td style={tdStyle2}><div id=\"player_name_hira6_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"uniform_number6_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"grade6_team2\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle2}><select ref={memberNameRef6_team2} value={Position_team2[6 - 1].name} onChange={(e) => selectMember_team2(e, 6)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle2} rowSpan=\"2\">7</td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><select ref={PositionRef7_team2} value={Position_team2[7 - 1].position} onChange={(e) => selectPosition_team2(e, 7)}></select></td>\r\n                        <td style={tdStyle2}><div id=\"player_name_hira7_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"uniform_number7_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"grade7_team2\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle2}><select ref={memberNameRef7_team2} value={Position_team2[7 - 1].name} onChange={(e) => selectMember_team2(e, 7)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle2} rowSpan=\"2\">8</td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><select ref={PositionRef8_team2} value={Position_team2[8 - 1].position} onChange={(e) => selectPosition_team2(e, 8)}></select></td>\r\n                        <td style={tdStyle2}><div id=\"player_name_hira8_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"uniform_number8_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"grade8_team2\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle2}><select ref={memberNameRef8_team2} value={Position_team2[8 - 1].name} onChange={(e) => selectMember_team2(e, 8)}></select></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style={tdStyle2} rowSpan=\"2\">9</td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><select ref={PositionRef9_team2} value={Position_team2[9 - 1].position} onChange={(e) => selectPosition_team2(e, 9)}></select></td>\r\n                        <td style={tdStyle2}><div id=\"player_name_hira9_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"uniform_number9_team2\"></div></td>\r\n                        <td style={tdStyle2} rowSpan=\"2\"><div id=\"grade9_team2\"></div></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={tdStyle2}><select ref={memberNameRef9_team2} value={Position_team2[9 - 1].name} onChange={(e) => selectMember_team2(e, 9)}></select></td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table><br /><br />\r\n\r\n            <button onClick={tyouhuku}>登録</button><br /><br />  \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Top","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\LogInPage\\Login.jsx",["941"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\HomePage\\Home.jsx",["942"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\NotFound.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\InputPlayGame.jsx",["943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoStartingMember\\StartingMember.js",["961","962","963","964","965","966"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoMakegamePage\\Sokuho_Input_Makegame.jsx",["967","968"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\InputSchool.jsx",["969","970","971","972","973","974","975","976"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\InputMember.jsx",["977","978","979","980","981","982","983","984","985","986","987","988","989"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputTournamentPage\\Input_Tournament.jsx",["990","991"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { OptionButton } from '../../../OtherPage/optionFunc/OptionButton'\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\nimport EditTournamentPopup from \"./com/EditTournamentPopup/EditTournamentPopup\";\r\n\r\nimport \"./InputTournament.css\"\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n\r\n//送られた文字列がどれか空ならtrue\r\nconst isEnpty = (strArray) => {\r\n  let flag = false\r\n  strArray.map((str) => {\r\n    if (!str) {\r\n      flag = true\r\n    }\r\n  })\r\n  return flag\r\n}\r\n\r\n//大会を読み込む\r\nconst readTournament = (setTournamentData) => {\r\n  fetch(backendUrl + \"/tournament/tournament_call\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => setTournamentData(data))\r\n}\r\n\r\n\r\n//文字分割\r\nconst dateSplit = (nowdate) => {\r\n  console.log(nowdate)\r\n  if (nowdate !== null) {\r\n    let dateArray = nowdate.split('-');\r\n    dateArray = { \"year\": dateArray[0], \"month\": dateArray[1], \"day\": dateArray[2] }\r\n    return dateArray\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//自作プルダウン\r\nconst makePulldown = (pulldownId, ArrayList, idText, nowSelected, setNowSelected) => {\r\n  //pulldownIdは0でいいです。\r\n  //ArrayListは表示したい要素を並べた配列です、普通の配列ではなく連想配列です。\r\n  //idテキストは連想配列の属性を書きます。\r\n  //nowSelectedは今プルダウンで何が選択されているかが入ります。初期値は[0]で、これは0番目の値が選択されている状態です。\r\n  //setNowSelectedはnowSelecedの値をuseStateの機能で上書きする関数です。setNowSelected(更新値)とすれば、nowSelectedに更新値が入ります。\r\n\r\n  return (\r\n    <>\r\n      <select id=\"tekitouni\"\r\n        onChange={(e) => {\r\n          //ステイトが変化すると再描画させるための文、これがないと再描画されない\r\n          //なお、消すと再描画はされないが内部は変化する\r\n          nowSelected = nowSelected.slice(0, nowSelected.length);\r\n          nowSelected[pulldownId] = e.target.value\r\n          setNowSelected(nowSelected)\r\n          console.log(nowSelected)\r\n        }\r\n        }>\r\n        {ArrayList.map((component, ind) => (\r\n          <option value={ind}>{component[idText]}</option>\r\n        ))\r\n        }\r\n      </select>\r\n    </>\r\n  )\r\n}\r\n\r\n//追加ボタン押したとき\r\nconst handleTournament = (\r\n  setTournamentData,\r\n  yearArray,\r\n  monthArray,\r\n  dayArray,\r\n  nowOpeningDate,\r\n  nowTournamentName,\r\n  TournamentData\r\n) => {\r\n  console.log(\r\n    yearArray[nowOpeningDate[0]].year + \"-\" +\r\n    monthArray[nowOpeningDate[1]].month + \"-\" +\r\n    dayArray[nowOpeningDate[2]].day\r\n  )\r\n\r\n  //被りチェック\r\n  if (TournamentData.some((v) => v.tournament_name === nowTournamentName)) {\r\n    console.log(\"名前被ってます\")\r\n  }\r\n  else if (nowTournamentName === \"\") {\r\n    console.log(\"空白です\")\r\n  }\r\n  else {\r\n    console.log(nowTournamentName + \"を登録します\")\r\n\r\n    fetch(backendUrl + \"/tournament/tournament_register\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //body: JSON.stringify({ email:login_id , password:login_ps }),\r\n      body: JSON.stringify({\r\n        \"tournament_name\": nowTournamentName,\r\n        \"opening\":\r\n          yearArray[nowOpeningDate[0]].year + \"-\" +\r\n          monthArray[nowOpeningDate[1]].month + \"-\" +\r\n          dayArray[nowOpeningDate[2]].day\r\n      }),\r\n    })\r\n      .then(() => readTournament(setTournamentData))\r\n  }\r\n\r\n\r\n}\r\n\r\n//大会の情報を修正する\r\nconst editTournament = (urlTournamentId, newTournamentName, openingDate, TournamentData, setTournamentData) => {\r\n  if (TournamentData.some((v) => v.tournament_name === newTournamentName)) {\r\n    console.log(\"名前被ってます\")\r\n  }\r\n  else {\r\n    fetch(backendUrl + \"/tournament/tournament_edit\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\", },\r\n      body: JSON.stringify({ tournament_id: urlTournamentId, tournament_name: newTournamentName, opening: openingDate }),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => readTournament(setTournamentData))\r\n  }\r\n}\r\n\r\n//削除\r\nconst tournamentDelete = (tournamentId) => {\r\n  fetch(backendUrl + \"/tournament/tournament_edit\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: { \"Content-Type\": \"application/json\", },\r\n    body: JSON.stringify({ tournament_id: tournamentId }),\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => { if (data === \"OK\") console.log(\"削除しました\") })\r\n\r\n  // console.log(tournamentId + \"削除しました\")\r\n}\r\n\r\n\r\n\r\n\r\nexport const Input_Tournament = () => {\r\n\r\n  //プルダウンの選択肢の値\r\n  const initialYear = 2020\r\n  const endYear = 2040\r\n  const initialMonth = 1\r\n  const endMonth = 12\r\n  const initialday = 1\r\n  const endDay = 31\r\n\r\n  //プルダウンのリスト作成\r\n  let yearArray = []\r\n  for (let i = initialYear; i <= endYear; i++) { yearArray = [...yearArray, { year: i }] }\r\n\r\n  let monthArray = []\r\n  for (let i = initialMonth; i <= endMonth; i++) { monthArray = [...monthArray, { month: i }] }\r\n\r\n  let dayArray = []\r\n  for (let i = initialday; i <= endDay; i++) { dayArray = [...dayArray, { day: i }] }\r\n\r\n  //大会の日付を入力するときのステイト1:年, 2:月, 3:日\r\n  const [nowOpeningDate, setNowOpeningDate] = useState([0, 0, 0])\r\n\r\n  //大会の日付を編集するときのステイト1:年, 2:月, 3:日\r\n  const [editOpeningDate, setEditOpeningDate] = useState([0, 0, 0])\r\n\r\n  //大会名を入力する時のステイト\r\n  const [nowTournamentName, setNowTournamentName] = useState(\"\")\r\n\r\n  //削除モードを管理するステイト\r\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\r\n\r\n  //編集中の大会名を管理するステイト\r\n  const [editingTnmtName, setEditingTnmtName] = useState(\"\")\r\n\r\n  //編集するか削除するかのチェックボックスを管理するステイト,trueなら編集,falseなら削除\r\n  const [EorDcheckBox, setEorDcheckBox] = useState(true)\r\n\r\n\r\n  //文字分割のための箱を用意\r\n  let dateArray = { \"year\": \"\", \"month\": \"\", \"day\": \"\" }\r\n\r\n  //適当な初期値\r\n  let [TournamentData, setTournamentData] = useState([\r\n    { \"tournament_name\": '第31回春大会', \"tournament_id\": '55', \"opening\": \"2022-03-01\" },\r\n    { \"tournament_name\": '第9回松山大会', \"tournament_id\": '56', \"opening\": \"2022-02-01\" },\r\n    { \"tournament_name\": '第5回伊予大会', \"tournament_id\": '57', \"opening\": \"2022-01-01\" },\r\n    { \"tournament_name\": '第22回秋大会', \"tournament_id\": '58', \"opening\": \"2021-08-01\" }\r\n  ])\r\n\r\n  //ページ遷移用\r\n  const navigate = useNavigate()\r\n  const PageTransition = (url) => {\r\n    navigate(url)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    readTournament(setTournamentData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <TitleBar\r\n        TitleText={\"大会入力選択画面\"}\r\n        PageTransition={PageTransition}\r\n        valueUrl={-1}\r\n      />\r\n\r\n      <OptionButton />\r\n\r\n\r\n      <div class=\"headline\">大会作成</div>\r\n      <div class=\"whole1\">\r\n        大会名\r\n        <input type=\"text\" onChange={(e) => { setNowTournamentName(e.target.value) }} />\r\n        <br />\r\n        日付\r\n        <label>\r\n          {makePulldown(0, yearArray, \"year\", nowOpeningDate, setNowOpeningDate)}年\r\n        </label>\r\n        <label>\r\n          {makePulldown(1, monthArray, \"month\", nowOpeningDate, setNowOpeningDate)}月\r\n        </label>\r\n        <label>\r\n          {makePulldown(2, dayArray, \"day\", nowOpeningDate, setNowOpeningDate)}日\r\n        </label>\r\n        <br />\r\n\r\n        {/* 追加ボタン */}\r\n        {isEnpty([nowTournamentName]) &&\r\n          <button\r\n            class=\"btn_In_to\"\r\n            onClick={() => {}}>追加\r\n          </button>\r\n        }\r\n\r\n        {!isEnpty([nowTournamentName]) &&\r\n          <button\r\n            class=\"btn_In_to\"\r\n            onClick={() => {\r\n              handleTournament(\r\n                setTournamentData, yearArray, monthArray, dayArray, nowOpeningDate, nowTournamentName, TournamentData\r\n              )\r\n            }}>追加\r\n          </button>\r\n        }\r\n\r\n        {/* 編集・削除モードボタン */}\r\n        <button\r\n          onClick={() => { setIsDeleteMode(!isDeleteMode) }}\r\n        >{isDeleteMode && \"大会編集中\"}{!isDeleteMode && \"大会編集モード\"}</button>\r\n\r\n      </div>\r\n\r\n      <div class=\"headline\">大会選択</div>\r\n      <div class=\"whole\">\r\n        <div className=\"tournamentList\">\r\n          <div className=\"tournaments\">\r\n\r\n            {TournamentData.map((Tournament, ind) => {\r\n\r\n              if (Tournament.tournament_name !== null) {\r\n                //文字分割\r\n                dateArray = dateSplit(Tournament.opening)\r\n\r\n                return (\r\n                  <div className=\"tournament\">\r\n                    <div className=\"days\">\r\n                      <span>{dateArray.year}年{dateArray.month}月{dateArray.day}日</span>\r\n                    </div>\r\n                    <div className=\"tournamentName\">\r\n                      {isDeleteMode &&\r\n                        <>\r\n                          {/* <button\r\n                      className=\"btn_In_to1\"\r\n                      onClick={() => editTournament(EditTournamentPopup)}>\r\n                      {Tournament.tournament_name}\r\n                    </button> */}\r\n                          <EditTournamentPopup\r\n                            sendClassName=\"btn_In_to1\"\r\n                            Tournament={Tournament}\r\n                            ind={ind}\r\n                            editTournament={editTournament}\r\n                            editOpeningDate={editOpeningDate}\r\n                            setEditOpeningDate={setEditOpeningDate}\r\n                            yearArray={yearArray}\r\n                            monthArray={monthArray}\r\n                            dayArray={dayArray}\r\n                            makePulldown={makePulldown}\r\n                            TournamentData={TournamentData}\r\n                            setTournamentData={setTournamentData}\r\n                            editingTnmtName={editingTnmtName}\r\n                            setEditingTnmtName={setEditingTnmtName}\r\n                            EorDcheckBox={EorDcheckBox}\r\n                            setEorDcheckBox={setEorDcheckBox}\r\n                            tournamentDelete={tournamentDelete}\r\n                            readTournament={readTournament}\r\n                            dateSplit={dateSplit}\r\n                          />\r\n                        </>\r\n\r\n                      }\r\n                      {!isDeleteMode &&\r\n                        <button\r\n                          className=\"btn_In_to1\"\r\n                          onClick={() =>\r\n                            PageTransition(\r\n                              \"inputschool?urlTournamentId=\" +\r\n                              Tournament.tournament_id +\r\n                              \"&urlTournamentName=\" +\r\n                              Tournament.tournament_name\r\n                            )\r\n                          }>\r\n                          {Tournament.tournament_name}\r\n                        </button>\r\n                      }\r\n                      <br />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input_Tournament;",[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Score.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Member.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Venues.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Schools.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\baseballButton.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\outCount.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreBoard.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\freeWrite.jsx",["992"],[],"import './CSS/freewrite.css'\r\n\r\nconst updateFreeWrite = (e, setFreeWriteState) => {\r\n    let value = e.target.value\r\n    setFreeWriteState(value)\r\n}\r\n\r\nconst changeFreeWriteMode = (freeWriteModeFlag, setFreeWriteModeFlag) => {\r\n    setFreeWriteModeFlag(!freeWriteModeFlag)\r\n}\r\n\r\nexport const freeWrite = (freeWriteState, setFreeWriteState, freeWriteModeFlag, setFreeWriteModeFlag) => {\r\n    return (\r\n        <div>\r\n            <div className=\"freeWrite\">\r\n                {!freeWriteModeFlag &&\r\n                    <input\r\n                        className='freewriteInput'\r\n                        value={freeWriteState}\r\n                        onChange={(e) => { updateFreeWrite(e, setFreeWriteState) }}>\r\n                    </input>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\PullDown\\PullDown.js",["993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\updateButton.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\myIndexOf.js",["1040","1041","1042"],[],"//function myIndexOf(hairetu, zokusei, key, setHensuu) {\r\nexport const myIndexOf = (hairetu, zokusei, key) => {\r\n    let hensuu = -1\r\n    if (zokusei === \"kanji\") {\r\n        hairetu.map((comp, index) => {\r\n            if (comp.Kanji === key) {\r\n                hensuu = index\r\n            }\r\n        })\r\n    }\r\n\r\n    else if (zokusei === \"kata\") {\r\n        hairetu.map((comp, index) => {\r\n            if (comp.kata === key) {\r\n                hensuu = index\r\n            }\r\n        })\r\n    }\r\n\r\n    else if (zokusei === \"eng\") {\r\n        hairetu.map((comp, index) => {\r\n            if (comp.eng === key) {\r\n                hensuu = index\r\n            }\r\n        })\r\n    }\r\n    return hensuu\r\n}\r\n\r\n","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\onisi_popup\\onisi_popup.jsx",["1043","1044"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\Hyoji.jsx",["1045"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\CheckBoxList1.jsx",["1046","1047"],[],"import React, { useState, useEffect } from \"react\"\r\n//const { Schools } = require(\"../DB/Schools\"); //分割代入\r\n\r\n//checkboxコンポーネント\r\nconst CheckBox = ({ id, value, checked, onChange }) => {\r\n\r\n    console.log(\"u\")\r\n    return (\r\n        <input\r\n            id={id}\r\n            type=\"checkbox\"\r\n            name=\"inputNames\"\r\n            checked={checked}\r\n            onChange={onChange}\r\n            value={value}\r\n        />\r\n    )\r\n}\r\n\r\nexport const CheckBoxList = (useSchools, setUseSchools) => {\r\n\r\n    const handleChange = (ind) => {\r\n        let copyCheck = useSchools.slice(0, useSchools.length);\r\n        copyCheck[ind].IsCheck = !copyCheck[ind].IsCheck\r\n        console.log(copyCheck)\r\n        setUseSchools(copyCheck)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <div className=\"schools\">\r\n                    {useSchools.map((school, ind) => {\r\n                        return (\r\n                            <div className=\"School\" key={`key_${ind}`}>\r\n                                {console.log(school.school)}\r\n                                <CheckBox\r\n                                    //出力の警告文は多分ここからきてる\r\n                                    id={ind}\r\n                                    value={school.school_name}\r\n                                    onChange={() => handleChange(ind)}\r\n                                    checked={school.IsCheck}\r\n                                />\r\n\r\n                                {school.school_name}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                {/* checkedがない場合には送信ボタンを表示させない */}\r\n                {<button >決定</button>}\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CheckBoxList","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\ballPositionDB.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Position.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\PullDown\\PullDownMember.js",["1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Member2.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\PositionDB.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoSelectTournament\\SokuhoSelectTournament.jsx",["1066","1067","1068","1069","1070","1071","1072"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\runnerCount.jsx",["1073"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\Position9DB.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\optionFunc\\optionButton.jsx",["1074","1075"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\optionFunc\\OptionButton.jsx",["1076","1077"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\GameEndPopup\\GameEndPopup.jsx",["1078","1079"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreCorrection\\EditPoint.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreCorrection\\Outputpoint.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\TitleBar\\TitleBar.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\DB\\communication.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\MemberPopup\\MemberPopup.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputTournamentPage\\com\\EditTournamentPopup\\EditTournamentPopup.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\comCanvas\\Ground.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\comCanvas\\battedBall.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\EditSchoolPopup\\EditSchoolPopup.jsx",["1080"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\EditMemberPopup\\EditMemberPopup.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\Functions\\IsEnpty.js",["1081"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoMakegamePage\\EditMakeGamePopup\\EditMakegamePopup.jsx",["1082"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\optionFunc\\MenuBar.jsx",["1083","1084","1085","1086","1087","1088"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutGame\\StartingMemberList.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutGame\\StartingMember.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutGame\\DasekiHistoryList.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutGame\\DasekiHistory.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\PageIndex.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\HomePage\\Home.jsx",["1089"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\GameList\\GameList.jsx",["1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\Bulletin\\Bulletin.js",["1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\Bulletin\\DasekiHistoryList.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\Bulletin\\StartingMemberList.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\Bulletin\\DasekiHistory.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\Bulletin\\StartingMember.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\PreliminaryReport\\TournamentList\\SelectTournament.jsx",["1115","1116","1117","1118","1119","1120","1121"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\RefHistoricalData\\TournamentBase\\TournamentList\\SelectTournament.jsx",["1122","1123","1124","1125","1126","1127","1128"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\RefHistoricalData\\WholePlayer\\RefSchool.js",["1129","1130"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\RefHistoricalData\\WholePlayer\\MemberList.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project\\frontend\\src\\AllPage\\OutPutPage\\OutPutAllPage\\RefHistoricalData\\WholePlayer\\Member.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\index.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\App.js",["1131","1132","1133"],[],"\n//各種ページのインポート\nimport {\n  Top, Login, Home,\n  InputSchool, Input_Tournament, InputMember, Sokuho_Input_Makegame, SokuhoGameStart, InputPlayGame, InputPastGame, \n  NotFound, Register, StartingMember, RegisterVenue,\n  SokuhoSelectTournament,\n} from './AllPage/PageIndex';\n\nimport { routeUrl } from './DB/communication';\n\nimport React from 'react'\nimport { BrowserRouter, Route, Routes, Link } from 'react-router-dom'\nimport './App.css';\n\n//今回の開発で使えるサーバのurlを入力してください、「https: ~~~ ac.jp/ここのルートを指定する/」\n//package.jsonも編集すること\n\n// const routeUrl = \"/j_R4_team_b/frontend\"\n// const routeUrl = \"/team-b-project/frontend\"\n// const routeUrl = \"\"\n\n\nconst App = () => {\n  // const routeUrl = require(\"./DB/communication\")\n\n  return (\n    <div>\n      <BrowserRouter>\n        <Routes>\n          <Route path={routeUrl + '/'} element={<Top />} />\n          <Route path={routeUrl + '/login'} element={<Login />} />\n          <Route path={routeUrl + '/home/'} element={<Home />} />\n\n          {/* 事前入力 */}\n          <Route path={routeUrl + '/home/pre_input/input_tournament/'} element={<Input_Tournament />} />\n          <Route path={routeUrl + '/home/pre_input/input_tournament/inputschool/'} element={<InputSchool />} />\n          <Route path={routeUrl + '/home/pre_input/input_tournament/inputschool/InputMember/'} element={<InputMember />} />\n\n\n          {/* 速報入力 */}\n          <Route path={routeUrl + '/home/sokuho/sokuho_select_tournament/'} element={< SokuhoSelectTournament />} />\n          <Route path={routeUrl + '/home/sokuho/sokuho_select_tournament/sokuho_input_makegame/'} element={<Sokuho_Input_Makegame />} />\n          <Route path={routeUrl + '/home/sokuho/sokuho_select_tournament/sokuho_input_makegame/starting_member'} element={<StartingMember />} />\n          <Route path={routeUrl + '/home/sokuho/sokuho_select_tournament/sokuho_input_makegame/starting_member/SokuhoGameStart/'} element={<SokuhoGameStart />} />\n          <Route path={routeUrl + '/home/sokuho/sokuho_select_tournament/sokuho_input_makegame/starting_member/SokuhoGameStart/InputPlayGame/'} element={<InputPlayGame />} />\n          <Route path={routeUrl + '/home/sokuho/sokuho_select_tournament/sokuho_input_makegame/starting_member/SokuhoGameStart/InputPastGame/'} element={<InputPastGame />} />\n\n          <Route path={routeUrl + '/home/InputPlayGame/'} element={<InputPlayGame />} />\n\n          {/* アカウント登録 */}\n          <Route path={routeUrl + '/home/acount_register'} element={<Register />} />\n\n          {/* 会場登録&編集 */}\n          <Route path={routeUrl + '/home/RegisterVenue/'} element={< RegisterVenue />} />\n\n          <Route path={'*'} element={<NotFound />} />\n        </Routes>\n      </BrowserRouter>\n\n      {console.log(routeUrl)}\n    </div>\n  );\n};\n\nexport default App;",[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\communication.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\PageIndex.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\RegisterPage\\Register.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\HomePage\\Home.jsx",["1134"],[],"import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { TitleBar } from '../OtherPage/TitleBar/TitleBar'\r\nimport './home.css'\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../DB/communication\").backendUrl;\r\n\r\n\r\nconst Home = () => {\r\n\r\n    //ページ遷移用\r\n    const navigate = useNavigate()\r\n    const PageTransition = (url) => {\r\n        navigate(url)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <header className='homeHeader'>\r\n                <div class=\"heading\">HOME</div>\r\n                <div class=\"logout\">\r\n                    <button><i\r\n                        class=\"fa-solid fa-arrow-right-from-bracket\"\r\n                        onClick={() => {\r\n                            fetch(backendUrl + \"/auth/check_sess\", {\r\n                                method: \"GET\",\r\n                                mode: \"cors\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\",\r\n                                },\r\n                            })\r\n                                .then((response) => response.text())\r\n                                .then((data) => { console.log(data) })\r\n                            PageTransition(-1)\r\n                        }}\r\n                    ></i></button>\r\n                </div>\r\n            </header>\r\n\r\n\r\n\r\n            <div class=\"whole\">\r\n                <button class=\"btn\" onClick={() => PageTransition('pre_input/input_tournament')}>事前入力</button>\r\n                <button class=\"btn\" onClick={() => PageTransition('sokuho/sokuho_select_tournament')}>速報入力</button>\r\n                <button class=\"btn\" onClick={() => PageTransition('acount_register')}>アカウント登録</button>\r\n                <button class=\"btn\" onClick={() => PageTransition(\"RegisterVenue\")}>会場登録</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\NotFound.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\LogInPage\\Login.jsx",["1135"],[],"import React, { useState } from 'react';\r\n\r\nconst Login = () => {\r\n  //バックエンドのurlを取得\r\n  const backendUrl = require(\"../../DB/communication\").backendUrl;\r\n\r\n  const initialValues = { loginID: \"test\", password: \"123456789\" };\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n  const handleChande = (e) => {\r\n    //console.log(e.target.value);\r\n    const { name, value } = e.target;\r\n    setFormValues({ ...formValues, [name]: value });\r\n    //console.log(formValues);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //ログイン情報を送信する\r\n    //バリデーションチェック\r\n    setFormErrors(validate(formValues));\r\n    setIsSubmit(true);\r\n    console.log(formValues);\r\n  };\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.loginID) {\r\n      errors.loginID = \"ログイン名を入力してください。\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"パスワードを入力してください。\";\r\n    }\r\n    else if (values.password.length < 4) {\r\n      errors.password = \"4文字以上15文字以下のパスワードを入力してください\";\r\n    }\r\n    else if (values.password.length > 15) {\r\n      errors.password = \"4文字以上15文字以下のパスワードを入力してください\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleLogin = () => {\r\n\r\n    fetch(backendUrl + \"/auth/login\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ user_name: formValues.loginID, password: formValues.password }),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        console.log(data)\r\n\r\n        if (data === \"OK\") {\r\n          window.location.href = '/home'\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"formContainer\">\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n          <h1>ログイン</h1>\r\n\r\n          <div className=\"uiform\">\r\n            <div className=\"form\">\r\n              <div className=\"formField\">\r\n                <input type=\"text\"\r\n                  placeholder=\"ログイン名\"\r\n                  name=\"loginID\"\r\n                  onChange={(e) => handleChande(e)}\r\n                />\r\n                <p className=\"errorMsg\">{formErrors.loginID}</p>\r\n              </div>\r\n              <div className=\"formField\">\r\n                <input type=\"text\"\r\n                  placeholder=\"パスワード\"\r\n                  name=\"password\"\r\n                  onChange={(e) => handleChande(e)}\r\n                />\r\n                <p className=\"errorMsg\">{formErrors.password}</p>\r\n              </div>\r\n            </div>\r\n            <button className=\"submitButton\" onClick={handleLogin}>アカウント情報を送信</button>\r\n            {/* {Object.keys(formErrors).length === 0 && isSubmit && (\r\n              <div className=\"MsgOk\">照合中です</div>\r\n            )} */}\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\TopPage\\Top.jsx",["1136"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoSelectTournament\\SokuhoSelectTournament.jsx",["1137","1138","1139","1140","1141","1142","1143"],[],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { OptionButton } from '../../../OtherPage/optionFunc/OptionButton'\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\nconst readTournament = (setTournamentData) => {\r\n  fetch(backendUrl + \"/tournament/tournament_call\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => setTournamentInfo(setTournamentData, data))\r\n}\r\n\r\nconst setTournamentInfo = (setTournamentData, data) => {\r\n  console.log(data)\r\n  setTournamentData(data)\r\n}\r\n\r\n//文字分割\r\nconst dateSplit = (nowdate) => {\r\n  let dateArray = nowdate.split('-');\r\n  dateArray = { \"year\": dateArray[0], \"month\": dateArray[1], \"day\": dateArray[2] }\r\n  return dateArray\r\n}\r\n\r\n\r\nexport const Input_Tournament = () => {\r\n\r\n  const InitialYear = 2020\r\n  const InitialMonth = 1\r\n\r\n  const [birthYear, setBirthYear] = useState(InitialYear);\r\n  const [birthMonth, setBirthMonth] = useState(InitialMonth);\r\n  //文字分割のための箱を用意\r\n  let dateArray = { \"year\": \"\", \"month\": \"\", \"day\": \"\" }\r\n\r\n  let [TournamentData, setTournamentData] = useState([\r\n    { \"tournament_name\": '第31回春大会', \"tournament_id\": '55', \"opening\": \"2022-03-01\" },\r\n    { \"tournament_name\": '第9回松山大会', \"tournament_id\": '56', \"opening\": \"2022-02-01\" },\r\n    { \"tournament_name\": '第5回伊予大会', \"tournament_id\": '57', \"opening\": \"2022-01-01\" },\r\n    { \"tournament_name\": '第22回秋大会', \"tournament_id\": '58', \"opening\": \"2021-08-01\" }\r\n  ])\r\n\r\n  //ページ遷移用\r\n  const navigate = useNavigate()\r\n  const PageTransition = (url) => {\r\n    navigate(url)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    readTournament(setTournamentData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <TitleBar\r\n        TitleText={\"大会選択画面\"}\r\n        PageTransition={PageTransition}\r\n        valueUrl={-1}\r\n      />\r\n      <OptionButton />\r\n\r\n\r\n      <div class=\"headline\">大会選択</div>\r\n      <div class=\"whole\">\r\n        <div className=\"tournamentList\">\r\n          <div className=\"tournaments\">\r\n\r\n            {TournamentData.map((Tournament, ind) => {\r\n              if (Tournament.tournament_name !== null) {\r\n                //文字分割\r\n                dateArray = dateSplit(Tournament.opening)\r\n\r\n                return (\r\n                  <div className=\"tournament\">\r\n                    <div className=\"days\">\r\n                      <span>{dateArray.year}年{dateArray.month}月{dateArray.day}日</span>\r\n                    </div>\r\n                    <div className=\"tournamentName\">\r\n                      <button\r\n                        className=\"btn_In_to1\"\r\n                        onClick={() =>\r\n                          PageTransition(\r\n                            \"sokuho_input_makegame?urlTournamentId=\" +\r\n                            Tournament.tournament_id +\r\n                            \"&urlTournamentName=\" +\r\n                            Tournament.tournament_name\r\n                          )\r\n                        }>\r\n                        {Tournament.tournament_name}\r\n                      </button>\r\n                      <br />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input_Tournament;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoStartingMember\\StartingMember.js",["1144","1145","1146","1147","1148","1149","1150","1151"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\nimport { MenuBar } from \"../../../OtherPage/optionFunc/MenuBar\"\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\nconst { Member } = require(\"../../../../DB/Member\");\r\nconst { PositionDB } = require(\"../../../../DB/Position9DB\")\r\n\r\n\r\nconst tableStyle = {\r\n    border: '1px solid black',\r\n    borderCollapse: 'collapse',\r\n    textAlign: 'center'\r\n}\r\n\r\nconst tdStyle = {\r\n    border: '1px solid #85C1E9',\r\n    background: 'white',\r\n    padding: '5px'\r\n};\r\n\r\nconst thStyle = {\r\n    border: '1px solid #3498DB',\r\n    background: '#3498DB',\r\n    color: 'white'\r\n};\r\n\r\nconst thStyle2 = {\r\n    border: '1px solid #FF3347',\r\n    background: '#FF3347',\r\n    color: 'white'\r\n};\r\n\r\nconst tdStyle2 = {\r\n    border: '1px solid #FF99a3',\r\n    background: 'white',\r\n    padding: '5px'\r\n};\r\n\r\n\r\n//選手を読み込む\r\nconst loadRegisteredMember = (urlTournamentId, urlSchoolId, setRegisteredMember, isEmptyFlag, setIsEmptyFlag) => {\r\n    fetch(backendUrl + \"/member/tournament_member_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            if (data.length !== 0) { setIsEmptyFlag(!isEmptyFlag) }\r\n            setRegisteredMember(data)\r\n        })\r\n}\r\n\r\n\r\n\r\n//自作プルダウン\r\nconst makePulldown = (pulldownId, ArrayList, idText, nowSelected, setNowSelected) => {\r\n    return (\r\n        <>\r\n            <select id=\"tekitouni\"\r\n                onChange={(e) => {\r\n                    //ステイトが変化すると再描画させるための文、これがないと再描画されない\r\n                    //なお、消すと再描画はされないが内部は変化する\r\n                    nowSelected = nowSelected.slice(0, nowSelected.length);\r\n\r\n                    nowSelected[pulldownId] = e.target.value\r\n                    setNowSelected(nowSelected)\r\n                    console.log(nowSelected)\r\n                }}>\r\n                <option hidden>選択してください</option>\r\n                {ArrayList.map((component, ind) => (\r\n                    <option value={ind}>{component[idText]}</option>\r\n                ))\r\n                }\r\n            </select>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst tyouhuku = (nowSelected, urlSchoolName, nowSelected2, urlSchoolName2) => {\r\n    //守備位置重複確認\r\n    let error = 0;\r\n    for (let i = 0; i <= 8; i++) {\r\n        for (let j = i + 1; j <= 8; j++) {\r\n            if (nowSelected[i] === nowSelected[j]) {\r\n                alert(urlSchoolName + \"の\" + (i + 1) + \"番打者と\" + (j + 1) + \"番打者の守備位置が重複しています\")\r\n                error++;\r\n                break;\r\n            }\r\n            if (nowSelected2[i] === nowSelected2[j]) {\r\n                alert(urlSchoolName2 + \"の\" + (i + 1) + \"番打者と\" + (j + 1) + \"番打者の守備位置が重複しています\")\r\n                error++;\r\n                break;\r\n            }\r\n        }\r\n        if (error > 0) {\r\n            error = 0;\r\n            break;\r\n        }\r\n    }\r\n    //選手氏名重複確認\r\n    for (let i = 9; i <= 17; i++) {\r\n        for (let j = i + 1; j <= 17; j++) {\r\n            if (nowSelected[i] === nowSelected[j]) {\r\n                alert(urlSchoolName + \"の\" + (i - 8) + \"番打者と\" + (j - 8) + \"番打者の選手氏名が重複しています\")\r\n                error++;\r\n                break;\r\n            }\r\n            if (nowSelected2[i] === nowSelected2[j]) {\r\n                alert(urlSchoolName2 + \"の\" + (i - 8) + \"番打者と\" + (j - 8) + \"番打者の選手氏名が重複しています\")\r\n                error++;\r\n                break;\r\n            }\r\n        }\r\n        if (error > 0) {\r\n            error = 0;\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// 選んだ選手情報を送信する\r\nconst sendSelectedMember = async (\r\n    nowSelected,\r\n    PositionDB,\r\n    registeredMember,\r\n    urlGameId,\r\n    urlSchoolId,\r\n    setRegisteredSM,\r\n    loadStartingMember\r\n) => {\r\n\r\n    let returnValue = 1\r\n    let toSendArray = await []\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n        toSendArray = await [...toSendArray, {}]\r\n    }\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n        toSendArray[i].game_id = await urlGameId\r\n        toSendArray[i].school_id = await urlSchoolId\r\n        toSendArray[i].position = await PositionDB[nowSelected[i]].kata\r\n        toSendArray[i].player_id = await registeredMember[nowSelected[i + 9]].player_id\r\n        toSendArray[i].uniform_number = await registeredMember[nowSelected[i + 9]].uniform_number\r\n        toSendArray[i].grade = await registeredMember[nowSelected[i + 9]].grade\r\n        toSendArray[i].handed_hit = await registeredMember[nowSelected[i + 9]].handed_hit\r\n        toSendArray[i].handed_throw = await registeredMember[nowSelected[i + 9]].handed_throw\r\n        toSendArray[i].batting_order = await i + 1\r\n        toSendArray[i].BA = await registeredMember[nowSelected[i + 9]].BA\r\n    }\r\n    await console.log(toSendArray)\r\n\r\n    await deleteStartingMember(urlGameId, urlSchoolId)\r\n\r\n    const fetch1 = await fetch(backendUrl + \"/member/starting_member_register\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", }, body: JSON.stringify(toSendArray),\r\n    })\r\n    const fetch1Result = await fetch1.text()\r\n    await loadStartingMember(urlGameId, urlSchoolId, setRegisteredSM)\r\n\r\n    return returnValue\r\n}\r\n\r\n\r\n//　今のスターティングメンバーを読み込む\r\nconst loadStartingMember = (game_id, school_id, setRegisteredSM) => {\r\n    fetch(backendUrl + \"/member/starting_member_call\", {\r\n        method: \"POST\", mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", },\r\n        body: JSON.stringify({ game_id: game_id, school_id: school_id }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            data.sort((a, b) => a.batting_order - b.batting_order)\r\n            setRegisteredSM(data);\r\n        })\r\n}\r\n\r\n//  スターティングメンバーを削除\r\nconst deleteStartingMember = async (game_id, school_id) => {\r\n    await fetch(backendUrl + \"/member/starting_member_delete_batch\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: game_id, school_id: school_id }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(data) })\r\n}\r\n\r\n\r\n\r\n// 被りチェック\r\nconst isDuplicate = (nowSelected) => {\r\n    let TorF = false\r\n\r\n    let positionNo = nowSelected.slice(0, 9)\r\n    let MemberNo = nowSelected.slice(9, 18)\r\n\r\n    positionNo.map((v, ind1) => {\r\n        positionNo.map((u, ind2) => {\r\n            if (ind1 !== ind2) {\r\n                if (v === u) {\r\n                    TorF = true\r\n                }\r\n            }\r\n        })\r\n    })\r\n\r\n    MemberNo.map((v, ind1) => {\r\n        MemberNo.map((u, ind2) => {\r\n            if (ind1 !== ind2) {\r\n                if (v === u) {\r\n                    TorF = true\r\n                }\r\n            }\r\n        })\r\n    })\r\n\r\n    return TorF\r\n}\r\n\r\n\r\nconst StartingMember = () => {\r\n\r\n    //ページ遷移用\r\n    const navigate = useNavigate()\r\n    const PageTransition = (url) => {\r\n        navigate(url)\r\n    }\r\n\r\n    //プルダウンのための初期値作成\r\n    let initialPulldown = []\r\n    for (let i = 0; i < 18; i++) {\r\n        initialPulldown = [...initialPulldown, \"0\"]\r\n    }\r\n\r\n    //今選択しているものの内容を監視\r\n    const [nowSelected, setNowSelected] = useState(initialPulldown) //チーム1\r\n    const [nowSelected2, setNowSelected2] = useState(initialPulldown) //チーム2\r\n\r\n    //受け取った配列が空でないかを監視\r\n    const [isEmptyFlag, setIsEmptyFlag] = useState(false)\r\n\r\n    //既に登録されている先行チームの選手情報を管理するステイト\r\n    const [registeredSM1, setRegisteredSM1] = useState([])\r\n\r\n    //既に登録されている後攻チームの選手情報を管理するステイト\r\n    const [registeredSM2, setRegisteredSM2] = useState([])\r\n\r\n    //データを再読み込みするためのステイト\r\n    const [useEffectFlag, setUseEffectFlag] = useState(false)\r\n\r\n\r\n    //map関数を使うための空配列作成\r\n    let enptyArray = []\r\n    for (let i = 0; i < 9; i++) {\r\n        enptyArray = [...enptyArray, 0]\r\n    }\r\n\r\n    //urlから値を読み出す\r\n    const [searchParams] = useSearchParams();\r\n    const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n    const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n    const urlSchoolId = searchParams.get(\"urlSchoolId\")\r\n    const urlSchoolName = searchParams.get(\"urlSchoolName\")\r\n    const urlSchoolId2 = searchParams.get(\"urlSchoolId2\")\r\n    const urlSchoolName2 = searchParams.get(\"urlSchoolName2\")\r\n    const urlGameId = searchParams.get(\"urlGameId\")\r\n\r\n    //表示するメンバーのステイトのための初期値、これがないと最初にエラーが出る\r\n    const initialComponent = [{\r\n        BA: 0.5,\r\n        grade: 3,\r\n        handed_hit: \"右\",\r\n        handed_throw: \"右\",\r\n        player_id: 2,\r\n        player_name_hira: \"\",\r\n        player_name_kanji: \"\",\r\n        school_id: 1,\r\n        tournament_id: 1,\r\n        uniform_number: 1\r\n    }]\r\n\r\n    //表示するメンバーのステイト定義\r\n    const [registeredMember1, setRegisteredMember1] = useState(initialComponent)\r\n    const [registeredMember2, setRegisteredMember2] = useState(initialComponent)\r\n\r\n    useEffect(() => {\r\n        loadRegisteredMember(urlTournamentId, urlSchoolId, setRegisteredMember1, isEmptyFlag, setIsEmptyFlag)\r\n        loadRegisteredMember(urlTournamentId, urlSchoolId2, setRegisteredMember2, isEmptyFlag, setIsEmptyFlag)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // console.log(loadStartingMemberAsync(urlGameId, urlSchoolId))\r\n        loadStartingMember(urlGameId, urlSchoolId, setRegisteredSM1)\r\n        loadStartingMember(urlGameId, urlSchoolId2, setRegisteredSM2)\r\n    }, [useEffectFlag])\r\n\r\n    return (\r\n        <div align='center'>\r\n            <TitleBar\r\n                TitleText={\"スタメン選択画面\"}\r\n                PageTransition={PageTransition}\r\n                valueUrl={-1}\r\n            />\r\n            <MenuBar\r\n                menuArray={[\r\n                    {\r\n                        text: \"InputMember\",\r\n                        urlTournamentId: urlTournamentId,\r\n                        urlTournamentName: urlTournamentName,\r\n                        urlSchoolName: urlSchoolName,\r\n                        urlSchoolName2: urlSchoolName2,\r\n                        urlSchoolId: urlSchoolId,\r\n                        urlSchoolId2: urlSchoolId2\r\n                    },\r\n                    {\r\n                        text: \"InputSchool\",\r\n                        urlTournamentId: urlTournamentId,\r\n                        urlTournamentName: urlTournamentName\r\n                    }\r\n                ]}\r\n            />\r\n            <h3>編集中：{urlTournamentName}</h3>\r\n            <div id=\"error\"></div>\r\n            <table style={tableStyle}>\r\n                <tbody>\r\n                    <tr><th colSpan={5}><font size=\"+2\">{urlSchoolName}　</font></th></tr>\r\n                    <tr>\r\n                        <th style={thStyle} rowspan=\"2\">打順</th>\r\n                        <th style={thStyle} rowspan=\"2\">位置</th>\r\n                        <th style={thStyle}>ふりがな</th>\r\n                        <th style={thStyle} rowspan=\"2\">背番号</th>\r\n                        <th style={thStyle} rowspan=\"2\">学年</th>\r\n                        <th style={thStyle} rowspan=\"2\">既登録の選手情報</th>\r\n                    </tr>\r\n                    <tr><th style={thStyle}>選手氏名</th></tr>\r\n\r\n                    {registeredMember1.length === 0 &&\r\n                        <div>選手が登録されていません</div>\r\n                    }\r\n\r\n                    {registeredMember1.length !== 0 && enptyArray.map((component, ind) => (\r\n                        <>\r\n                            <tr>\r\n                                <td style={tdStyle} rowspan=\"2\">{ind + 1}</td>\r\n                                <td style={tdStyle} rowspan=\"2\">\r\n\r\n                                    {makePulldown(ind, PositionDB, \"kata\", nowSelected, setNowSelected)}\r\n                                </td>\r\n                                <td style={tdStyle}><div id=\"player_name_hira1\">{registeredMember1[nowSelected[ind + 9]].player_name_hira}</div></td>\r\n                                <td style={tdStyle} rowspan=\"2\"><div id=\"uniform_number1\">{registeredMember1[nowSelected[ind + 9]].uniform_number}</div></td>\r\n                                <td style={tdStyle} rowspan=\"2\"><div id=\"grade1\">{registeredMember1[nowSelected[ind + 9]].grade}</div></td>\r\n                                <td style={tdStyle} rowspan=\"2\">\r\n                                    {/* 既登録の選手情報 */}\r\n                                    <div >\r\n                                        {(registeredSM1 !== undefined) &&\r\n                                            registeredSM1.some((v) => v.batting_order === ind + 1) &&\r\n                                            registeredSM1.find((v) => v.batting_order === ind + 1).position\r\n                                        }\r\n                                    </div>\r\n                                    <div>\r\n                                        {(registeredSM1 !== undefined) &&\r\n                                            registeredSM1.some((v) => v.batting_order === ind + 1) &&\r\n                                            registeredSM1.find((v) => v.batting_order === ind + 1).player_name_kanji\r\n                                        }\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={tdStyle}>\r\n                                    {makePulldown(ind + 9, registeredMember1, \"player_name_kanji\", nowSelected, setNowSelected)}\r\n                                </td>\r\n                            </tr>\r\n                        </>\r\n                    ))\r\n                    }\r\n\r\n                </tbody>\r\n            </table><br />\r\n\r\n\r\n            <table style={tableStyle}>\r\n                <tbody>\r\n                    <tr><th colSpan={5}><font size=\"+2\">{urlSchoolName2}　</font></th></tr>\r\n                    <tr>\r\n                        <th style={thStyle2} rowspan=\"2\">打順</th>\r\n                        <th style={thStyle2} rowspan=\"2\">位置</th>\r\n                        <th style={thStyle2}>ふりがな</th>\r\n                        <th style={thStyle2} rowspan=\"2\">背番号</th>\r\n                        <th style={thStyle2} rowspan=\"2\">学年</th>\r\n                        <th style={thStyle2} rowspan=\"2\">既登録の選手情報</th>\r\n                    </tr>\r\n                    <tr><th style={thStyle2}>選手氏名</th></tr>\r\n\r\n                    {registeredMember2.length === 0 &&\r\n                        <div>選手が登録されていません</div>\r\n                    }\r\n                    {registeredMember2.length !== 0 && enptyArray.map((component, ind) => (\r\n                        <>\r\n                            <tr>\r\n                                <td style={tdStyle2} rowspan=\"2\">{ind + 1}</td>\r\n                                <td style={tdStyle2} rowspan=\"2\">\r\n\r\n                                    {makePulldown(ind, PositionDB, \"kata\", nowSelected2, setNowSelected2)}\r\n                                </td>\r\n                                <td style={tdStyle2}><div id=\"player_name_hira1\">{registeredMember2[nowSelected2[ind + 9]].player_name_hira}</div></td>\r\n                                <td style={tdStyle2} rowspan=\"2\"><div id=\"uniform_number1\">{registeredMember2[nowSelected2[ind + 9]].uniform_number}</div></td>\r\n                                <td style={tdStyle2} rowspan=\"2\"><div id=\"grade1\">{registeredMember2[nowSelected2[ind + 9]].grade}</div></td>\r\n                                <td style={tdStyle2} rowspan=\"2\">\r\n\r\n                                    {/* 既登録の選手情報 */}\r\n                                    <div id=\"regiSM2\">\r\n                                        {(registeredSM2 !== undefined) &&\r\n                                            registeredSM2.some((v) => v.batting_order === ind + 1) &&\r\n                                            registeredSM2.find((v) => v.batting_order === ind + 1).position\r\n                                        }\r\n                                    </div>\r\n                                    <div>\r\n                                        {(registeredSM2 !== undefined) &&\r\n                                            registeredSM2.some((v) => v.batting_order === ind + 1) &&\r\n                                            registeredSM2.find((v) => v.batting_order === ind + 1).player_name_kanji\r\n                                        }\r\n                                    </div>\r\n                                </td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={tdStyle2}>\r\n                                    {makePulldown(ind + 9, registeredMember2, \"player_name_kanji\", nowSelected2, setNowSelected2)}\r\n                                </td>\r\n                            </tr>\r\n                        </>\r\n                    ))\r\n                    }\r\n\r\n                </tbody>\r\n            </table><br />\r\n\r\n\r\n            {!isDuplicate(nowSelected) &&\r\n                <button onClick={async () => {\r\n\r\n                    var a = await sendSelectedMember(\r\n                        nowSelected,\r\n                        PositionDB,\r\n                        registeredMember1,\r\n                        urlGameId,\r\n                        urlSchoolId,\r\n                        setRegisteredSM1,\r\n                        loadStartingMember\r\n                    )\r\n\r\n                    var b = await sendSelectedMember(\r\n                        nowSelected2,\r\n                        PositionDB,\r\n                        registeredMember2,\r\n                        urlGameId,\r\n                        urlSchoolId2,\r\n                        setRegisteredSM2,\r\n                        loadStartingMember\r\n                    )\r\n                    // .then(setUseEffectFlag(!useEffectFlag))\r\n                    if (a + b === 2) {\r\n                       setUseEffectFlag(a + b)\r\n                    }\r\n\r\n                }}>登録</button>\r\n            }\r\n\r\n            {isDuplicate(nowSelected) &&\r\n                <button onClick={() => {\r\n                    tyouhuku(\r\n                        nowSelected,\r\n                        urlSchoolName,\r\n                        nowSelected2,\r\n                        urlSchoolName2\r\n                    )\r\n                }}>登録</button>\r\n            }\r\n\r\n            {/* ページ遷移ボタン */}\r\n            {\r\n                (registeredSM1 !== undefined) &&\r\n                registeredSM1.length >= 9 &&\r\n                (registeredSM2 !== undefined) &&\r\n                registeredSM2.length >= 9 &&\r\n                <button onClick={() => PageTransition(\r\n                    \"SokuhoGameStart?urlTournamentId=\" +\r\n                    urlTournamentId +\r\n                    \"&urlTournamentName=\" +\r\n                    urlTournamentName +\r\n                    \"&urlSchoolId=\" +\r\n                    urlSchoolId +\r\n                    \"&urlSchoolName=\" +\r\n                    urlSchoolName +\r\n                    \"&urlSchoolId2=\" +\r\n                    urlSchoolId2 +\r\n                    \"&urlSchoolName2=\" +\r\n                    urlSchoolName2 +\r\n                    \"&urlGameId=\" +\r\n                    urlGameId\r\n                )}>速報ページに移動する</button>\r\n            }\r\n            <br /><br />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartingMember","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoMakegamePage\\Sokuho_Input_Makegame.jsx",["1152","1153","1154"],[],"import React, { useState, useEffect } from \"react\"\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nimport './Sokuho_Input_Makegame.css'\r\n\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\nimport { OptionButton } from \"../../../OtherPage/optionFunc/OptionButton\"\r\n\r\nimport EditMakegamePopup from \"./EditMakeGamePopup/EditMakegamePopup\"\r\n\r\n//import { Schools } from \"../../../../DB/Schools\";\r\n//const { Schools } = require(\"../../../../DB/Schools\"); //分割代入\r\n//const { Venues } = require(\"../../../../DB/Venues\"); //分割代入\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n\r\n//データベースとのやりとり\r\n// 試合リストを読み込む\r\nconst loadGame = async (setGameInfoState, urlTournamentId) => {\r\n\r\n    await fetch(backendUrl + \"/game/game_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ tournament_id: urlTournamentId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => { setGameInfoState(data); console.log(data) })\r\n}\r\n\r\n\r\n//大会に所属する高校を読み出す\r\nconst loadSchool = (setSchools, urlTournamentId) => {\r\n\r\n    return fetch(backendUrl + \"/school/school_call_p\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ tournament_id: urlTournamentId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => setSchools(data))\r\n    // .then((data) => handleSentGame(data, setGameInfoState))\r\n\r\n}\r\n\r\n//会場を読み出す\r\nconst loadVenue = (setVenues) => {\r\n\r\n    return fetch(backendUrl + \"/venue/venue_call\", {\r\n        method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", }\r\n    })\r\n        .then((response) => response.json())\r\n        .then((venuesArray) => {\r\n            let remakeArray = []\r\n            venuesArray.map((venue) => {\r\n                if (venue.venue_name !== null) {\r\n                    remakeArray = [...remakeArray, venue]\r\n                }\r\n            })\r\n            setVenues(remakeArray)\r\n        })\r\n}\r\n\r\n//試合追加\r\nconst handleAddGame = async (urlTournamentId, nowSelected, iningList, Schools, Venues, nowSelectedYmd, YearList, MonthList, DayList, setGameInfoState) => {\r\n\r\n    let gameData = {\r\n        tournament_id: urlTournamentId,\r\n        match_num: iningList[nowSelected[0]].ining,\r\n        school_id_1: Schools[nowSelected[1]].school_id,\r\n        school_id_2: Schools[nowSelected[2]].school_id,\r\n        venue_id: Venues[nowSelected[3]].venue_id,\r\n        first_rear_1: \"先攻\",\r\n        first_rear_2: \"後攻\",\r\n        game_ymd: YearList[nowSelectedYmd[0]].year + \"-\" + MonthList[nowSelectedYmd[1]].month + \"-\" + DayList[nowSelectedYmd[2]].day,\r\n        match_resuts: null\r\n    }\r\n    console.log(gameData)\r\n\r\n    await fetch(backendUrl + \"/game/game_register\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(gameData),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n            if (data === \"OK\") {\r\n                loadGame(setGameInfoState, urlTournamentId)\r\n            }\r\n        })\r\n}\r\n\r\n\r\n//自作プルダウン\r\nconst makePulldown = (pulldownId, ArrayList, idText, nowSelected, setNowSelected) => {\r\n\r\n    return (\r\n        <>\r\n            <select id=\"tekitouni\"\r\n                onChange={(e) => {\r\n\r\n                    let Array = nowSelected.slice(0, nowSelected.length)\r\n                    Array[pulldownId] = e.target.value\r\n                    setNowSelected(Array)\r\n                    console.log(Array)\r\n                }}>\r\n                {ArrayList.map((component, ind) => (\r\n                    <option value={ind}>{component[idText]}</option>\r\n                ))\r\n                }\r\n            </select>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n//リスト作成関数\r\nconst makeYear = () => {\r\n\r\n    let yearArray = []\r\n    for (let i = 2010; i < 2050 + 1; i++) {\r\n        yearArray = [...yearArray, { year: i }]\r\n    }\r\n    return yearArray\r\n}\r\nconst makeMonth = () => {\r\n\r\n    let monthArray = []\r\n    for (let i = 1; i < 12 + 1; i++) {\r\n        monthArray = [...monthArray, { month: i }]\r\n    }\r\n    return monthArray\r\n}\r\nconst makeDay = () => {\r\n\r\n    let dayArray = []\r\n    for (let i = 1; i < 31 + 1; i++) {\r\n        dayArray = [...dayArray, { day: i }]\r\n    }\r\n    return dayArray\r\n}\r\n\r\n\r\n//被りチェック関数（登録内容同士） \r\nconst isDuplicateA = (editingSelected) => {\r\n    let TorF = false\r\n    if (editingSelected[1] === editingSelected[2]) TorF = true\r\n    return TorF\r\n}\r\n\r\n\r\n//被りチェック関数（登録内容と既登録のもの）\r\nconst isDuplicateB = (gameInfoState, sendInfo) => {\r\n\r\n    let TorF = false\r\n    console.log(gameInfoState)\r\n    console.log(sendInfo.game_ymd)\r\n\r\n    if (\r\n        gameInfoState.some((v) => v.school_id_1 === sendInfo.school_id_1) &&\r\n        gameInfoState.some((v) => v.school_id_2 === sendInfo.school_id_2) &&\r\n        gameInfoState.some((v) => v.venue_id === sendInfo.venue_id) &&\r\n        gameInfoState.some((v) => v.game_ymd === sendInfo.game_ymd)\r\n    ) { TorF = true; console.log(\"被っています\") }\r\n\r\n    return TorF\r\n}\r\n\r\n\r\n\r\n\r\n//試合編集\r\nconst EditGame = (sendInfo) => {\r\n    fetch(backendUrl + \"/game/game_edit\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", },\r\n        body: JSON.stringify(sendInfo),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n\r\n            if (data === \"OK\") {\r\n\r\n            }\r\n        })\r\n\r\n    console.log(sendInfo)\r\n}\r\n\r\n\r\n//試合削除\r\nconst DeleteGame = (sendInfo) => {\r\n    fetch(backendUrl + \"/game/game_edit\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", },\r\n        body: JSON.stringify(sendInfo),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n\r\n            if (data === \"OK\") {\r\n\r\n            }\r\n        })\r\n\r\n    console.log(sendInfo)\r\n}\r\n\r\n\r\nexport const Sokuho_Input_Makegame = (useSchools, setUseSchools) => {\r\n\r\n    //ページ遷移用\r\n    const navigate = useNavigate()\r\n    const PageTransition = (url) => {\r\n        navigate(url)\r\n    }\r\n\r\n    const [gameInfoState, setGameInfoState] = useState([])\r\n\r\n    //DBからデータを読み出したことを監視する\r\n    const [Schools, setSchools] = useState([])\r\n    const [Venues, setVenues] = useState([])\r\n\r\n    //リスト作り\r\n    const YearList = makeYear()\r\n    const MonthList = makeMonth()\r\n    const DayList = makeDay()\r\n\r\n    //回戦の値を適当に定義\r\n    const iningList = [{ ining: 1 }, { ining: 2 }, { ining: 3 }, { ining: 4 }, { ining: 5 }, { ining: \"準決勝\" }, { ining: \"決勝\" }]\r\n\r\n    //urlから値を読み出す\r\n    const [searchParams] = useSearchParams();\r\n    const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n    const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n\r\n    //今選択しているものの内容を監視\r\n    const [nowSelected, setNowSelected] = useState([0, 0, 0, 0])\r\n    const [nowSelectedYmd, setNowSelectedYmd] = useState([0, 0, 0])\r\n\r\n    //今編集で選択しているものの内容を監視\r\n    const [editingSelected, setEditingSelected] = useState([0, 0, 0, 0])\r\n    const [editingSelectedYmd, setEditingSelectedYmd] = useState([0, 0, 0])\r\n\r\n    //編集削除モードかそうでないか\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n\r\n    //編集か削除か\r\n    const [EorDCheckbox, setEorDCheckbox] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        loadSchool(setSchools, urlTournamentId)\r\n        loadVenue(setVenues)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        loadGame(setGameInfoState, urlTournamentId);\r\n    }, [Schools, Venues])\r\n\r\n    return (\r\n        <>\r\n            <TitleBar\r\n                TitleText={\"試合作成画面\"}\r\n                PageTransition={PageTransition}\r\n                valueUrl={-1}\r\n            />\r\n\r\n            <OptionButton />\r\n\r\n            <div class=\"headline\">\r\n                編集中：{urlTournamentName}\r\n            </div>\r\n            <div className=\"MakeGame\">\r\n                <div class=\"whole_Sokuhou\">\r\n                    {makePulldown(0, YearList, \"year\", nowSelectedYmd, setNowSelectedYmd)}年\r\n                    {makePulldown(1, MonthList, \"month\", nowSelectedYmd, setNowSelectedYmd)}月\r\n                    {makePulldown(2, DayList, \"day\", nowSelectedYmd, setNowSelectedYmd)}日<br />\r\n\r\n                    回戦{makePulldown(0, iningList, \"ining\", nowSelected, setNowSelected)}<br />\r\n                    先行チーム{makePulldown(1, Schools, \"school_name\", nowSelected, setNowSelected)}<br />\r\n                    後攻チーム{makePulldown(2, Schools, \"school_name\", nowSelected, setNowSelected)}<br />\r\n                    会場{makePulldown(3, Venues, \"venue_name\", nowSelected, setNowSelected)}<br />\r\n\r\n\r\n                    {/* 追加ボタン */}\r\n                    {nowSelected[1] !== nowSelected[2] &&\r\n                        <button className=\"btn_So_Make\" onClick={async () => {\r\n                            await handleAddGame(\r\n                                urlTournamentId,\r\n                                nowSelected,\r\n                                iningList,\r\n                                Schools,\r\n                                Venues,\r\n                                nowSelectedYmd,\r\n                                YearList,\r\n                                MonthList,\r\n                                DayList,\r\n                                setGameInfoState\r\n                            )\r\n\r\n                            await loadGame(setGameInfoState, urlTournamentId)\r\n\r\n                        }}>追加\r\n                        </button>\r\n                    }\r\n                    {nowSelected[1] === nowSelected[2] &&\r\n                        <button className=\"btn_So_Make\" onClick={() => { }}>追加\r\n                        </button>\r\n                    }\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"dispGames\">\r\n\r\n                {/* 編集モードでないとき */}\r\n                {!isEditMode &&\r\n                    <>\r\n\r\n                        {/* 編集モード切り替えボタン */}\r\n                        <div className=\"ButtonArea\">\r\n                            <button id=\"checkButton\"\r\n                                onClick={() => { setIsEditMode(!isEditMode) }}>編集モード\r\n                            </button>\r\n                        </div>\r\n\r\n                        <hr></hr>\r\n\r\n                        {/* 試合リストを表示 */}\r\n                        {gameInfoState.map(gameInfo => (\r\n                            <div className=\"game\">\r\n                                <button className=\"btn_So_Make\"\r\n                                    onClick={() => PageTransition(\r\n                                        \"starting_member?urlTournamentId=\" +\r\n                                        urlTournamentId +\r\n                                        \"&urlTournamentName=\" +\r\n                                        urlTournamentName +\r\n                                        \"&urlSchoolId=\" +\r\n                                        gameInfo.school_id_1 +\r\n                                        \"&urlSchoolName=\" +\r\n                                        gameInfo.school_name_1 +\r\n                                        \"&urlSchoolId2=\" +\r\n                                        gameInfo.school_id_2 +\r\n                                        \"&urlSchoolName2=\" +\r\n                                        gameInfo.school_name_2 +\r\n                                        \"&urlGameId=\" +\r\n                                        gameInfo.game_id\r\n                                    )}>\r\n                                    {gameInfo.game_ymd}<br />\r\n                                    {gameInfo.match_num}回戦<br />\r\n                                    {gameInfo.school_name_1}<br />\r\n                                    {gameInfo.school_name_2}<br />\r\n                                    {Venues.length !== 0 && Venues.find((v) => v.venue_id === gameInfo.venue_id).venue_name}\r\n\r\n                                </button><br /><br />\r\n                            </div>\r\n                        ))}\r\n                    </>\r\n                }\r\n\r\n                {/* 編集モード中 */}\r\n                {isEditMode &&\r\n                    <>\r\n\r\n                        {/* 編集モード切り替えボタン */}\r\n                        <div className=\"ButtonArea\">\r\n                            <button id=\"checkButton\" onClick={() => { setIsEditMode(!isEditMode) }}>編集中</button>\r\n                        </div>\r\n\r\n                        <div className=\"hyoji\">\r\n                            <div className=\"players\">\r\n                                {gameInfoState.map((gameInfo, ind) => (\r\n                                    <div className=\"school\">\r\n                                        <EditMakegamePopup\r\n                                            gameInfo={gameInfo}\r\n                                            ind={ind}\r\n                                            EorDCheckbox={EorDCheckbox}\r\n                                            setEorDCheckbox={setEorDCheckbox}\r\n                                            makePulldown={makePulldown}\r\n                                            iningList={iningList}\r\n                                            Schools={Schools}\r\n                                            Venues={Venues}\r\n                                            YearList={YearList}\r\n                                            MonthList={MonthList}\r\n                                            DayList={DayList}\r\n                                            editingSelected={editingSelected}\r\n                                            setEditingSelected={setEditingSelected}\r\n                                            editingSelectedYmd={editingSelectedYmd}\r\n                                            setEditingSelectedYmd={setEditingSelectedYmd}\r\n                                            EditGame={EditGame}\r\n                                            DeleteGame={DeleteGame}\r\n                                            loadGame={loadGame}\r\n                                            gameInfoState={gameInfoState}\r\n                                            setGameInfoState={setGameInfoState}\r\n                                            urlTournamentId={urlTournamentId}\r\n                                            isDuplicateA={isDuplicateA}\r\n                                            isDuplicateB={isDuplicateB}\r\n                                        />\r\n                                        <br /><br />\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n\r\n                <hr></hr>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sokuho_Input_Makegame","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\InputPlayGame.jsx",["1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175"],[],"import { scoreBoard } from './comSokuho/scoreBoard';\r\nimport { outCount } from './comSokuho/outCount'\r\nimport { runnerCount } from './comSokuho/runnerCount';\r\nimport { freeWrite } from './comSokuho/freeWrite'\r\nimport { BaseballButton } from './comSokuho/baseballButton'\r\nimport \"./comSokuho/CSS/scoreBoard.css\"\r\nimport { useEffect, useState } from 'react';\r\nimport Popupfield from \"./comSokuho/onisi_popup/onisi_popup\";\r\nimport GameEndPopup from \"./comSokuho/GameEndPopup/GameEndPopup\"\r\nimport EditPoint from \"./comSokuho/scoreCorrection/EditPoint\"\r\nimport OptionButton from '../../../OtherPage/optionFunc/OptionButton';\r\n\r\n//css\r\nimport \"./InputPlayGame.css\"\r\nimport './comSokuho/CSS/passButton.css'\r\nimport './comSokuho/CSS/editButton.css'\r\n\r\nimport { TitleBar } from '../../../OtherPage/TitleBar/TitleBar';\r\n\r\n//プルダウン\r\nimport { PullDown } from './comSokuho/PullDown/PullDown'\r\nimport { PullDownMember } from './comSokuho/PullDown/PullDownMember'\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\n\r\n//canvasの描画\r\nimport { Ground } from './comSokuho/comCanvas/Ground';\r\nimport { battedBall } from './comSokuho/comCanvas/battedBall';\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n\r\n\r\n\r\n//自作プルダウン　改造あり\r\nconst makePulldown = (pulldownId, ArrayList, idText, nowSelected, setNowSelected, urlSchoolName, urlSchoolName2,\r\n    dasekiAll, setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n    setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n    battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n) => {\r\n\r\n    console.log(dasekiAll)\r\n\r\n\r\n    //pulldownIdは0でいいです。\r\n    //ArrayListは表示したい要素を並べた配列です、普通の配列ではなく連想配列です。\r\n    //idテキストは連想配列の属性を書きます。\r\n    //nowSelectedは今プルダウンで何が選択されているかが入ります。初期値は[0]で、これは0番目の値が選択されている状態です。\r\n    //setNowSelectedはnowSelecedの値をuseStateの機能で上書きする関数です。setNowSelected(更新値)とすれば、nowSelectedに更新値が入ります。\r\n\r\n    return (\r\n        <>\r\n            <select className='editButton'\r\n                id=\"tekitouni\"\r\n                onChange={(e) => {\r\n                    //ステイトが変化すると再描画させるための文、これがないと再描画されない\r\n                    //なお、消すと再描画はされないが内部は変化する\r\n                    nowSelected = nowSelected.slice(0, nowSelected.length);\r\n                    nowSelected[pulldownId] = e.target.value\r\n                    setNowSelected(nowSelected)\r\n\r\n                    editBattersBox(dasekiAll[nowSelected], dasekiAll, nowSelected,\r\n                        setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n                        setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n                        battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n                    )\r\n                }\r\n                }>\r\n                {ArrayList.map((component, ind) => (\r\n                    <option value={ind}>\r\n                        {component[idText]}打席目：{component.inning % 10 === 1 && urlSchoolName}{component.inning % 10 === 2 && urlSchoolName2}\r\n                    </option>\r\n                ))\r\n                }\r\n            </select>\r\n        </>\r\n    )\r\n}\r\n\r\n//打席編集\r\nconst editBattersBox = (battersBox, battersBoxAll, nowSelected,\r\n    setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n    setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n    battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2) => {\r\n\r\n    console.log(battersBox)\r\n    let touchedCoordinate = battersBoxAll[nowSelected].touched_coordinate.split(\"_\")\r\n\r\n    let teamABatter = 0;\r\n    let teamBpitcher = 0;\r\n    let teamBBatter = 0;\r\n    let teamApitcher = 0;\r\n\r\n    //pinchを反映させる\r\n    battersBoxAll.map((v, indBB) => {\r\n        let playerId = []\r\n        if (v.pinch !== \"\" && v.pinch !== \"0\" && v.pinch !== null && v.pinch !== undefined) {\r\n\r\n            //pinchに値が入っており、かつ値が正常であると思われる場合\r\n            if (v.pinch.length > 3) {\r\n                //スライス\r\n                playerId = v.pinch.split(\"→\")\r\n\r\n                //表回\r\n                if (v.inning % 10 - 1 === 0) {\r\n                    //打順配列からplayerId[0]を探す\r\n                    battingOrder.map((u, indBB) => {\r\n                        if (u.player_id.toString() === playerId[0]) {\r\n                            //登録されているメンバーからplayerId[1]を探す\r\n                            registeredMember1.map((regiMember1) => {\r\n                                //あればその選手を打順配列に入れ替える\r\n                                if (regiMember1.player_id.toString() === playerId[1]) {\r\n                                    battingOrder[indBB] = regiMember1\r\n                                    setBattingOrder(battingOrder)\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n\r\n                //裏回\r\n                else if (v.inning % 10 - 1 === 1) {\r\n                    //打順配列からplayerId[0]を探す\r\n                    battingOrder2.map((u, indBB) => {\r\n                        if (u.player_id === playerId[0]) {\r\n                            //登録されているメンバーからplayerId[1]を探す\r\n                            registeredMember2.map((regiMember2) => {\r\n                                //あればその選手を打順配列に入れ替える\r\n                                if (regiMember2.player_id === playerId[1]) {\r\n                                    battingOrder2[indBB] = regiMember2\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n            //pinchに値が入っており、かつ内容がおかしい場合\r\n            else {\r\n                battersBoxAll[indBB].pinch = null\r\n                battersBoxAll[indBB].player_id = battersBoxAll[6].player_id\r\n            }\r\n        }\r\n    })\r\n\r\n    console.log(battersBoxAll)\r\n\r\n    const value = battersBoxAll[nowSelected].inning\r\n    for (let i = nowSelected; i >= 0; i--) {\r\n        if (value !== battersBoxAll[i].inning) {\r\n            teamBBatter = battersBoxAll[i].player_id\r\n            teamApitcher = battersBoxAll[i].pitcher_id\r\n            break\r\n        }\r\n    }\r\n\r\n    //画面に反映\r\n    setNowIningState([Math.floor(battersBox.inning / 10 - 1), battersBox.inning % 10 - 1])\r\n    setNowOutCountState(battersBox.outcount)\r\n    setRunnerCountState([battersBox.base / 100 >= 1, battersBox.base / 10 >= 1 && battersBox.base / 100 < 1, battersBox.base % 10 === 1])\r\n    setFreeWriteState(battersBox.text_inf)\r\n    setFlag(battersBox.ball_kind)\r\n    setcanvasX1(parseFloat(touchedCoordinate[0]))\r\n    setcanvasY1(parseFloat(touchedCoordinate[1]))\r\n    setAddScoreState(battersBox.score)\r\n\r\n    if (battersBox.inning % 10 === 1) {\r\n        let sendMember1 = [{\r\n            batter: battingOrder.findIndex((u) => u.player_id === battersBoxAll[nowSelected].player_id),\r\n            pitcher: battingOrder2.findIndex((u) => u.player_id === battersBoxAll[nowSelected].pitcher_id)\r\n        },\r\n        {\r\n            batter: teamBBatter,\r\n            pitcher: teamApitcher\r\n        }]\r\n\r\n        //値が入ってないときの処理\r\n        if (sendMember1[0].batter === -1) { sendMember1[0].batter = 0 }\r\n        if (sendMember1[0].pitcher === -1) { sendMember1[0].pitcher = 0 }\r\n        setNowPlayingMember(sendMember1)\r\n    }\r\n    else if (battersBox.inning % 10 === 2) {\r\n        let sendMember2 = [\r\n            {\r\n                batter: teamABatter,\r\n                pitcher: teamBpitcher\r\n            },\r\n            {\r\n                batter: battingOrder2.findIndex((u) => u.player_id === battersBoxAll[nowSelected].player_id),\r\n                pitcher: battingOrder.findIndex((u) => u.player_id === battersBoxAll[nowSelected].pitcher_id)\r\n            }\r\n        ]\r\n\r\n        //値が入ってないときの処理\r\n        if (sendMember2[1].batter === -1) { sendMember2[1].batter = 0 }\r\n        if (sendMember2[1].pitcher === -1) { sendMember2[1].pitcher = 0 }\r\n\r\n        setNowPlayingMember(sendMember2)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n//試合中の試合の情報を登録する\r\n// const RegisterDuringGame = async (urlGameId) => {\r\n//     await fetch(backendUrl + \"/game/during_game_register\", {\r\n//         method: \"POST\",\r\n//         mode: \"cors\",\r\n//         headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ game_id: urlGameId, tmp_table_name: String(urlGameId) }),\r\n//     })\r\n//         .then((response) => response.text())\r\n//         .then((data) => { console.log(data) })\r\n// }\r\n\r\n\r\n//試合中の試合の情報を削除する\r\nconst DeleteDuringGame = async (urlGameId) => {\r\n    await fetch(backendUrl + \"/game/during_game_delete\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(data) })\r\n}\r\n\r\n\r\n//一時打席情報登録用のテーブル作成\r\n// const TmpTableCreate = async (urlGameId) => {\r\n\r\n//     await fetch(backendUrl + \"/daseki/tmp_table_create\", {\r\n//         method: \"POST\",\r\n//         mode: \"cors\",\r\n//         headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ table_name: urlGameId }),\r\n//     })\r\n//         .then((response) => response.text())\r\n//         .then((data) => { console.log(data) })\r\n// }\r\n\r\n//テーブル存在確認\r\n// const TmpTableCheck = (urlGameId, setIsExistTmpTable, TmpDasekiCall, urlTournamentId, urlSchoolId, urlSchoolId2,\r\n//     setNowIningState, setScoreState, setNowOutCountState,\r\n//     setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2\r\n\r\n// ) => {\r\n\r\n//     fetch(backendUrl + \"/daseki/tmp_table_check\", {\r\n//         method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n//         body: JSON.stringify({ table_name: urlGameId }),\r\n//     })\r\n//         .then((response) => response.text())\r\n//         .then((data) => {\r\n\r\n//             //テーブルが存在しないとき\r\n//             if (data === \"not exist\") {\r\n//                 setIsExistTmpTable(false)\r\n//             }\r\n\r\n//             //テーブルが存在するとき\r\n//             else if (data === \"exist\") {\r\n//                 TmpDasekiCall(urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId,\r\n//                     setNowIningState, setScoreState, setNowOutCountState,\r\n//                     setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2\r\n//                 )\r\n//             }\r\n//         })\r\n// }\r\n\r\n////試合情報受け取り（速報用）\r\nconst TmpDasekiCall = (urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId,\r\n    setNowIningState, setScoreState, setNowOutCountState,\r\n    setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2) => {\r\n\r\n    //まず打席情報を受け取る\r\n    fetch(backendUrl + \"/daseki/tmp_daseki_call\",\r\n        {\r\n            method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n            body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log(data)\r\n            //反転させる\r\n            // data.reverse()\r\n            setDasekiAll(data)\r\n\r\n            //空っぽなら無視\r\n            if (data.length !== 0) {\r\n                let latestDasaki = data[data.length - 1]\r\n\r\n                if (latestDasaki.outcount === 3) {\r\n                    //アウトカウント取得\r\n                    setNowOutCountState(0)\r\n\r\n                    //イニング取得\r\n                    if (latestDasaki.inning % 10 === 1) {\r\n                        setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, 1])\r\n                    }\r\n                    else {\r\n                        setNowIningState([Math.floor(latestDasaki.inning / 10), 0])\r\n                    }\r\n\r\n                    //ランナー取得\r\n                    setRunnerCountState([false, false, false])\r\n\r\n                }\r\n\r\n                else {\r\n                    //アウトカウント取得\r\n                    setNowOutCountState(latestDasaki.outcount)\r\n\r\n                    //イニング取得\r\n                    setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, latestDasaki.inning % 10 - 1])\r\n\r\n                    //ランナー取得\r\n                    setRunnerCountState([latestDasaki.base[0] === \"1\", latestDasaki.base[1] === \"1\", latestDasaki.base[2] === \"1\"])\r\n                }\r\n\r\n\r\n                //スコア取得\r\n                //スコアの初期化\r\n                const InitialScore = [\r\n                    [null, null, null, null, null, null, null, null, null, null, null, null],\r\n                    [null, null, null, null, null, null, null, null, null, null, null, null]\r\n                ]\r\n\r\n                let sendScore = InitialScore\r\n                data.map((u) => {\r\n                    //null対策\r\n                    if (sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] === null) sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = 0\r\n                    //受け取ったスコアを配列に格納\r\n                    sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] + u.score\r\n                })\r\n                setScoreState(sendScore)\r\n\r\n\r\n                //今現在のプレイヤー取得\r\n                //まずは先行チームをフェッチ\r\n                fetch(backendUrl + \"/member/starting_member_call\", {\r\n                    method: \"POST\",\r\n                    mode: \"cors\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId }),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((TeamAdata) => {\r\n\r\n\r\n                        //後攻チームをフェッチ\r\n                        //打順を持ってくる\r\n                        fetch(backendUrl + \"/member/starting_member_call\", {\r\n                            method: \"POST\",\r\n                            mode: \"cors\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                            },\r\n                            body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId2 }),\r\n                        })\r\n                            .then((response) => response.json())\r\n                            .then(async (TeamBdata) => {\r\n\r\n                                //ここから選手登録の情報をつかって、代打の処理を行う\r\n                                //選手登録の情報を取得\r\n                                let loadRegistered = await { loadRegistered1: \"\", loadRegistered2: \"\" }\r\n                                const loadRegistered1 = await fetch(backendUrl + \"/member/tournament_member_call\", {\r\n                                    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n                                    body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n                                })\r\n                                loadRegistered.loadRegistered1 = await loadRegistered1.json()\r\n                                const loadRegistered2 = await fetch(backendUrl + \"/member/tournament_member_call\", {\r\n                                    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n                                    body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId2 }),\r\n                                })\r\n                                loadRegistered.loadRegistered2 = await loadRegistered2.json()\r\n\r\n                                let text = null\r\n                                let index = 0\r\n                                data.map((v) => {\r\n                                    if (v.pinch === null || v.pinch === \"0\") { }\r\n                                    else {\r\n                                        text = v.pinch.split(\"→\")\r\n\r\n                                        // 表のとき\r\n                                        if (v.inning % 10 - 1 === 0) {\r\n                                            index = TeamAdata.findIndex((u) => u.player_id === parseInt(text[0]))\r\n                                            TeamAdata[index] = loadRegistered.loadRegistered1.find((u) => u.player_id === parseInt(text[1]))\r\n                                        }\r\n                                        // 裏のとき\r\n                                        else {\r\n                                            index = TeamBdata.findIndex((u) => u.player_id === parseInt(text[0]))\r\n                                            TeamBdata[index] = loadRegistered.loadRegistered2.find((u) => u.player_id === parseInt(text[1]))\r\n                                        }\r\n                                    }\r\n                                })\r\n\r\n\r\n\r\n\r\n                                TeamAdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                                setBattingOrder(TeamAdata)\r\n\r\n                                TeamBdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                                setBattingOrder2(TeamBdata)\r\n\r\n                                let teamABatter = 0\r\n                                let teamApitcher = 0\r\n                                let teamBBatter = 0\r\n                                let teamBpitcher = 0\r\n\r\n                                //さっきの打席が先攻チームだった場合\r\n                                if (latestDasaki.inning % 10 - 1 === 0) {\r\n                                    teamABatter = TeamAdata.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n                                    teamBpitcher = TeamBdata.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n                                    for (let i = data.length - 1; i >= 0; i--) {\r\n                                        if (latestDasaki.inning !== data[i].inning) {\r\n                                            teamBBatter = TeamBdata.findIndex((u) => u.player_id === data[i].player_id)\r\n                                            teamApitcher = TeamAdata.findIndex((u) => u.player_id === data[i].pitcher_id)\r\n                                            break\r\n                                        }\r\n                                    }\r\n                                    if (latestDasaki.outcount !== 3) teamABatter++\r\n                                    //過去に後攻の打席がある場合\r\n                                    else if (data.some((v) => v.inning % 10 - 1 === 1)) teamBBatter++\r\n                                }\r\n\r\n                                //後攻\r\n                                else if (latestDasaki.inning % 10 - 1 === 1) {\r\n                                    for (let i = data.length - 1; i >= 0; i--) {\r\n                                        if (latestDasaki.inning !== data[i].inning) {\r\n                                            console.log(data[i])\r\n                                            teamABatter = TeamAdata.findIndex((u) => u.player_id === data[i].player_id)\r\n                                            teamBpitcher = TeamBdata.findIndex((u) => u.player_id === data[i].pitcher_id)\r\n                                            break\r\n                                        }\r\n                                    }\r\n                                    teamBBatter = TeamBdata.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n                                    teamApitcher = TeamAdata.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n                                    if (data[data.length - 1].outcount !== 3) teamBBatter++\r\n                                    else teamABatter++\r\n                                }\r\n\r\n                                //打順に存在しないか最初の打者であるとき、もしくは打順最後の打者であるとき\r\n                                if (teamABatter === 9 || teamABatter === -1) teamABatter = 0\r\n                                if (teamBpitcher === -1) teamBpitcher = 0\r\n                                if (teamBBatter === 9 || teamBBatter === -1) teamBBatter = 0\r\n                                if (teamApitcher === -1) teamApitcher = 0\r\n\r\n                                //最後に今現在プレイ中の選手を格納\r\n                                setNowPlayingMember(\r\n                                    [{\r\n                                        batter: teamABatter,\r\n                                        pitcher: teamBpitcher\r\n                                    },\r\n                                    {\r\n                                        batter: teamBBatter,\r\n                                        pitcher: teamApitcher\r\n                                    }]\r\n                                )\r\n                            })\r\n                    })\r\n            }\r\n\r\n            //打席情報に何も入ってないとき\r\n            if (data.length === 0) {\r\n                //最初のプレイヤー取得\r\n                //まずは先行チーム\r\n                fetch(backendUrl + \"/member/starting_member_call\", {\r\n                    method: \"POST\",\r\n                    mode: \"cors\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId }),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((TeamAdata) => {\r\n                        TeamAdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                        setBattingOrder(TeamAdata)\r\n\r\n                        //後攻チーム\r\n                        //打順を持ってくる\r\n                        fetch(backendUrl + \"/member/starting_member_call\", {\r\n                            method: \"POST\",\r\n                            mode: \"cors\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                            },\r\n                            body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId2 }),\r\n                        })\r\n                            .then((response) => response.json())\r\n                            .then((TeamBdata) => {\r\n                                TeamBdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                                setBattingOrder2(TeamBdata)\r\n\r\n                                let teamABatter = 0\r\n                                let teamBpitcher = TeamBdata.findIndex((v) => v.position === \"ピッチャー\")\r\n                                let teamBBatter = 0\r\n                                let teamApitcher = TeamAdata.findIndex((v) => v.position === \"ピッチャー\")\r\n\r\n                                //最後に今現在プレイ中の選手を格納\r\n                                setNowPlayingMember(\r\n                                    [{\r\n                                        batter: teamABatter,\r\n                                        pitcher: teamBpitcher\r\n                                    },\r\n                                    {\r\n                                        batter: teamBBatter,\r\n                                        pitcher: teamApitcher\r\n                                    }]\r\n                                )\r\n                            })\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\n\r\n//DBを介さない試合情報受け取り（速報用）\r\nconst loardNowDaseki = (setNowOutCountState, setNowIningState, setRunnerCountState, setScoreState,\r\n    setNowPlayingMember, setFreeWriteState,\r\n    dasekiAll, battingOrder, battingOrder2) => {\r\n\r\n    //空っぽなら無視\r\n    if (dasekiAll.length !== 0) {\r\n        let latestDasaki = dasekiAll[dasekiAll.length - 1]\r\n\r\n\r\n        //自由記述は空\r\n        setFreeWriteState(\"\")\r\n\r\n        if (latestDasaki.outcount === 3) {\r\n            //アウトカウント取得\r\n            setNowOutCountState(0)\r\n\r\n            //イニング取得\r\n            if (latestDasaki.inning % 10 === 1) {\r\n                setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, 1])\r\n            }\r\n            else {\r\n                setNowIningState([Math.floor(latestDasaki.inning / 10), 0])\r\n            }\r\n\r\n            //ランナー取得\r\n            setRunnerCountState([false, false, false])\r\n\r\n        }\r\n\r\n        else {\r\n            //アウトカウント取得\r\n            setNowOutCountState(latestDasaki.outcount)\r\n\r\n            //イニング取得\r\n            setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, latestDasaki.inning % 10 - 1])\r\n\r\n            //ランナー取得\r\n            setRunnerCountState([latestDasaki.base[0] === \"1\", latestDasaki.base[1] === \"1\", latestDasaki.base[2] === \"1\"])\r\n        }\r\n\r\n\r\n        //スコア取得\r\n        //スコアの初期化\r\n        const InitialScore = [\r\n            [null, null, null, null, null, null, null, null, null, null, null, null],\r\n            [null, null, null, null, null, null, null, null, null, null, null, null]\r\n        ]\r\n\r\n        let sendScore = InitialScore\r\n        dasekiAll.map((u) => {\r\n            //null対策\r\n            if (sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] === null) sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = 0\r\n            //受け取ったスコアを配列に格納\r\n            sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] + u.score\r\n        })\r\n        setScoreState(sendScore)\r\n\r\n\r\n\r\n        //今現在のプレイヤー取得\r\n        //まずは先行チーム\r\n        //後攻チーム\r\n        let teamABatter = 0\r\n        let teamApitcher = 0\r\n        let teamBBatter = 0\r\n        let teamBpitcher = 0\r\n\r\n        //先攻\r\n        if (latestDasaki.inning % 10 - 1 === 0) {\r\n            teamABatter = battingOrder.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n            teamBpitcher = battingOrder2.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n            for (let i = dasekiAll.length - 1; i >= 0; i--) {\r\n                if (latestDasaki.inning !== dasekiAll[i].inning) {\r\n                    teamBBatter = battingOrder2.findIndex((u) => u.player_id === dasekiAll[i].player_id)\r\n                    teamApitcher = battingOrder.findIndex((u) => u.player_id === dasekiAll[i].pitcher_id)\r\n                    break\r\n                }\r\n            }\r\n            if (dasekiAll[dasekiAll.length - 1].outcount !== 3) teamABatter++\r\n            else teamBBatter++\r\n        }\r\n        //後攻\r\n        else if (latestDasaki.inning % 10 - 1 === 1) {\r\n            for (let i = dasekiAll.length - 1; i >= 0; i--) {\r\n                if (latestDasaki.inning !== dasekiAll[i].inning) {\r\n                    console.log(dasekiAll[i])\r\n                    teamABatter = battingOrder.findIndex((u) => u.player_id === dasekiAll[i].player_id)\r\n                    teamBpitcher = battingOrder2.findIndex((u) => u.player_id === dasekiAll[i].pitcher_id)\r\n                    break\r\n                }\r\n            }\r\n            teamBBatter = battingOrder2.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n            teamApitcher = battingOrder.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n            if (dasekiAll[dasekiAll.length - 1].outcount !== 3) teamBBatter++\r\n            else teamABatter++\r\n        }\r\n\r\n        //打順に存在しないか最初の打者であるとき、もしくは打順最後の打者であるとき\r\n        if (teamABatter === 9 || teamABatter === -1) teamABatter = 0\r\n        if (teamBpitcher === -1) teamBpitcher = 0\r\n        if (teamBBatter === 9 || teamBBatter === -1) teamBBatter = 0\r\n        if (teamApitcher === -1) teamApitcher = 0\r\n\r\n        //最後に今現在プレイ中の選手を格納\r\n        setNowPlayingMember(\r\n            [{\r\n                batter: teamABatter,\r\n                pitcher: teamBpitcher\r\n            },\r\n            {\r\n                batter: teamBBatter,\r\n                pitcher: teamApitcher\r\n            }]\r\n        )\r\n    }\r\n}\r\n\r\n//一時打席情報を本打席テーブルに送る\r\nconst TableRegister = (urlGameId) => {\r\n\r\n    console.log(urlGameId + \"の試合情報を登録しました\")\r\n\r\n    fetch(backendUrl + \"/daseki/data_register\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(\"TableRegister=\" + data) })\r\n}\r\n\r\n//一時打席情報を削除\r\nconst TmpTableDelete = (urlGameId) => {\r\n\r\n    console.log(urlGameId + \"の試合情報を削除しました\")\r\n\r\n    fetch(backendUrl + \"/daseki/tmp_table_delete\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(\"TmpTableDelete=\" + data) })\r\n}\r\n\r\n//打率計算\r\nconst CalculateBatAvg = (urlGameId) => {\r\n\r\n    console.log(\"打率計算関数を呼び出しました\")\r\n\r\n    fetch(backendUrl + \"/member/cal_BA\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(\"CalculateBatAvg=\" + data) })\r\n}\r\n\r\n//一時打席情報登録用のテーブルに打席情報登録（UPSERTを使うかも）\r\nconst DasekiRegister = (sendInfo, trigger, setTrigger) => {\r\n\r\n    fetch(backendUrl + \"/daseki/daseki_register\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(sendInfo),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n            if (data === \"OK\") {\r\n                setTrigger(!trigger)\r\n            }\r\n        })\r\n}\r\n\r\n\r\n//選手登録された選手読み込む\r\nconst loadRegisteredMember = (setRegisteredMember, urlTournamentId, urlSchoolId) => {\r\n\r\n    fetch(backendUrl + \"/member/tournament_member_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", },\r\n        body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => { setRegisteredMember(data) })\r\n}\r\n\r\n\r\n//修正内容をバックエンドに送る\r\nconst sendEdit = (\r\n    urlGameId,\r\n    dasekiAll,\r\n    nowSelected,\r\n    nowIningState,\r\n    addScoreState,\r\n    scoreState,\r\n    nowOutCountState,\r\n    nowPlayingMember,\r\n    battingOrder,\r\n    battingOrder2,\r\n    runnerCountState,\r\n    freeWriteState,\r\n    canvasX1,\r\n    canvasY1,\r\n    flag,\r\n    batterResult,\r\n    isPinch,\r\n    trigger, \r\n    setTrigger\r\n) => {\r\n    console.log(dasekiAll[nowSelected])\r\n    //DBに送るための準備\r\n\r\n    let totalScore = 0\r\n    scoreState[nowIningState[1]].map((score) => {\r\n        totalScore = totalScore + score\r\n    })\r\n\r\n    let runnerCount = \"\"\r\n    runnerCountState.map((runner) => {\r\n        if (runner === true) runnerCount = \"1\" + runnerCount\r\n        else if (runner === false) runnerCount = \"0\" + runnerCount\r\n    })\r\n\r\n    let isHit = 0; let isFourball = 0; let isDeadball = 0;\r\n    if (batterResult === 0) { }\r\n    else if (batterResult === 1) isHit = 1\r\n    else if (batterResult === 2) isFourball = 1\r\n    else if (batterResult === 3) isDeadball = 1\r\n\r\n    //選手だけここで入れる\r\n    let order = []\r\n    if (nowIningState[1] === 0) {\r\n        order = {\r\n            player_id: battingOrder[nowPlayingMember[nowIningState[1]].batter].player_id,\r\n            pitcher_id: battingOrder2[nowPlayingMember[nowIningState[1]].pitcher].player_id\r\n        }\r\n    }\r\n    else if (nowIningState[1] === 1) {\r\n        order = {\r\n            player_id: battingOrder2[nowPlayingMember[nowIningState[1]].batter].player_id,\r\n            pitcher_id: battingOrder[nowPlayingMember[nowIningState[1]].pitcher].player_id\r\n        }\r\n    }\r\n\r\n    //DBにデータを送る\r\n    let sendInfo = {\r\n        table_name: urlGameId,\r\n        at_bat_id: dasekiAll[nowSelected].at_bat_id,\r\n        inning: (nowIningState[1] + 1) * 10 + (nowIningState[0] + 1),\r\n        game_id: urlGameId,\r\n        school_id: dasekiAll[nowSelected].school_id,\r\n        player_id: order.player_id,\r\n        pitcher_id: order.pitcher_id,\r\n        score: addScoreState,\r\n        total_score: totalScore,\r\n        outcount: nowOutCountState,\r\n        base: runnerCount,\r\n        text_inf: freeWriteState,\r\n        pass: 0,\r\n        touched_coordinate: canvasX1 + \"_\" + canvasY1,\r\n        ball_kind: flag,\r\n        hit: isHit,\r\n        foreball: isFourball,\r\n        deadball: isDeadball,\r\n        pinch: isPinch\r\n    }\r\n\r\n    console.log(sendInfo)\r\n\r\n    fetch(backendUrl + \"/daseki/tmp_daseki_update\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", },\r\n        body: JSON.stringify(sendInfo),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n            console.log(data)\r\n            setTrigger(!trigger)\r\n        })\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst canvasSize = 1000;\r\nconst homebase = 400;\r\n\r\nconst InputPlayGame = () => {\r\n\r\n    //ページ遷移用\r\n    const navigate = useNavigate()\r\n    const PageTransition = (url) => {\r\n        navigate(url)\r\n    }\r\n\r\n    //urlから値を読み出す\r\n    const [searchParams] = useSearchParams();\r\n    const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n    const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n    const urlSchoolId = searchParams.get(\"urlSchoolId\")\r\n    const urlSchoolName = searchParams.get(\"urlSchoolName\")\r\n    const urlSchoolId2 = searchParams.get(\"urlSchoolId2\")\r\n    const urlSchoolName2 = searchParams.get(\"urlSchoolName2\")\r\n    const urlGameId = searchParams.get(\"urlGameId\")\r\n\r\n    //試合の一時テーブルが存在するかどうかを管理するステイト\r\n    const [isExistTmpTable, setIsExistTmpTable] = useState(false)\r\n\r\n    //Score記録 左が裏表、右が回数 イニングとは逆\r\n    const { Score } = require(\"../../../../DB/Score\")\r\n    const [scoreState, setScoreState] = useState(Score)\r\n\r\n    //Scoreの加算値の監視\r\n    const [addScoreState, setAddScoreState] = useState(0)\r\n\r\n    //今のイニング 左が回、右が表裏\r\n    const [nowIningState, setNowIningState] = useState([0, 0])\r\n\r\n    //自由記述内容を監視\r\n    const [freeWriteState, setFreeWriteState] = useState(\"\")//いらんかも\r\n\r\n    //自由記述編集モードのフラグ\r\n    const [freeWriteModeFlag, setFreeWriteModeFlag] = useState(false)\r\n\r\n    //多分打球の種類だと思われる\r\n    const [flag, setFlag] = useState(2);\r\n\r\n    //打者の結果を記録する(0:何もなし, 1:ヒット,2:四球, 3:死球)\r\n    const [batterResult, setBatterResult] = useState(0)\r\n\r\n\r\n    //緑プルダウン用\r\n    const [nowPosition, setNowPosition] = useState(15)\r\n\r\n    //アウトカウント\r\n    const [nowOutCountState, setNowOutCountState] = useState(0)\r\n\r\n    //ランナーカウント\r\n    const [runnerCountState, setRunnerCountState] = useState([false, false, false])\r\n\r\n    //選手登録情報を読み込む\r\n    const [registeredMember1, setRegisteredMember1] = useState([])\r\n    const [registeredMember2, setRegisteredMember2] = useState([])\r\n\r\n    //打席一覧情報のステイト\r\n    const [dasekiAll, setDasekiAll] = useState([{\r\n        at_bat_id: 1, ball_kind: \"2\", base: \"000\",\r\n        deadball: 0, foreball: 0, game_id: 1,\r\n        hit: 0, inning: 11, outcount: 3,\r\n        pass: 0, pinch: null, pitcher_id: 21, player_id: 7,\r\n        school_id: 1, score: 0, text_inf: \"データなし\",\r\n        total_score: 0, touched_coordinate: \"400_450\"\r\n    }])\r\n\r\n    //打席一覧情報のプルダウンの選択状況を管理するステイト\r\n    const [nowSelected, setNowSelected] = useState([0])\r\n\r\n    //打順と打者のリスト\r\n    const [battingOrder, setBattingOrder] = useState([[{ player_name_kanji: '丹羽 長秀' }, { player_name_kanji: '柴田 勝家' }], 0])\r\n    const [battingOrder2, setBattingOrder2] = useState([{ player_name_kanji: '丹羽 長秀' }, { player_name_kanji: '柴田 勝家' }])\r\n\r\n    //今の打順と今のピッチャーが誰なのかを2チーム文記録する\r\n    const [nowPlayingMember, setNowPlayingMember] = useState([{ batter: 0, pitcher: 0 }, { batter: 0, pitcher: 0 }])\r\n\r\n    //代打フラグ 4→15,12→6\r\n    const [isPinch, setIsPinch] = useState(null)\r\n\r\n    //代打で変更される前の打順を記録するステイト\r\n    const [latestBatOrder, setLatestBatOrder] = useState({ dasekiNum: 0, order: [] })\r\n\r\n    //パスボタンのステイトを定義 0か1か\r\n    const [isPass, setIsPass] = useState(0)\r\n\r\n    //データを読み込みを行うトリガー\r\n    const [trigger, setTrigger] = useState(true)\r\n\r\n    //編集モードであるかどうかを監視するステイト\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n\r\n\r\n    //画面解像度取得\r\n    var sw = document.documentElement.clientWidth; // 画面の横幅\r\n    var sh = document.documentElement.clientHeight; // 画面の高さ\r\n\r\n    // contextを状態として持つ\r\n    const [context, setContext] = useState(null)\r\n\r\n    //打球を消すためのステイト\r\n    const [deleteball, setDeleteBall] = useState(false)\r\n\r\n\r\n    const [canvasX1, setcanvasX1] = useState(0)\r\n    const [canvasY1, setcanvasY1] = useState(0)\r\n    //一つのStateで管理しようぜ的な試み\r\n    //const [canvasXY, setCanvasXY] = useState({x:0, y:0})\r\n\r\n    // コンポーネントの初期化完了後コンポーネント状態にコンテキストを登録\r\n\r\n    const homebase = 520;\r\n    const h = 70;\r\n    const l = -110;\r\n    const w = 0.03 * homebase;  //ベースの幅\r\n    const margin = 10;    //ベース位置調整用\r\n\r\n    useEffect(() => {\r\n        const canvas = document.getElementById(\"canvas\")\r\n        const canvasContext = canvas.getContext(\"2d\")\r\n        setContext(canvasContext)\r\n\r\n\r\n\r\n        canvas.addEventListener(\"click\", e => {\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            // ブラウザ上での座標を求める\r\n            const viewX = e.clientX - rect.left,\r\n                viewY = e.clientY - rect.top;\r\n\r\n            // 表示サイズとキャンバスの実サイズの比率を求める\r\n            const scaleWidth = canvas.clientWidth / canvas.width,\r\n                scaleHeight = canvas.clientHeight / canvas.height;\r\n\r\n            // ブラウザ上でのクリック座標をキャンバス上に変換\r\n            const canvasX = Math.floor(viewX / scaleWidth),\r\n                canvasY = Math.floor(viewY / scaleHeight);\r\n\r\n            console.log(canvasX, canvasY);\r\n            setcanvasX1(canvasX);\r\n            setcanvasY1(canvasY);\r\n        });\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (context !== null) {\r\n            Ground(context);\r\n        }\r\n    }, [context])\r\n\r\n\r\n    // 状態にコンテキストが登録されたらそれに対して操作できる\r\n    useEffect(() => {\r\n        if (context !== null) {\r\n\r\n            //削除\r\n            context.clearRect(0, 0, canvasSize, canvasSize);\r\n\r\n            Ground(context);\r\n\r\n            //ベースの色\r\n            let baseColor2 = [];\r\n            for (let i = 0; i < 3; i++) {\r\n                if (runnerCountState[i]) {\r\n                    baseColor2[i] = \"blue\";\r\n                    console.log(baseColor2[i]);\r\n                }\r\n                else {\r\n                    baseColor2[i] = \"white\";\r\n                }\r\n            }\r\n\r\n\r\n            context.strokeStyle = \"black\";\r\n\r\n            //３塁ベース\r\n            context.fillStyle = baseColor2[0];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 3 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.lineWidth = 1;\r\n            context.stroke();\r\n\r\n            //2塁ベース\r\n            context.fillStyle = baseColor2[1];\r\n            context.beginPath();\r\n            context.moveTo(homebase + l, homebase / 2 - margin + h);\r\n            context.lineTo(homebase - w + l, homebase / 2 + w - margin + h);\r\n            context.lineTo(homebase + l, homebase / 2 + w * 2 - margin + h);\r\n            context.lineTo(homebase + w + l, homebase / 2 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            //1塁ベース\r\n            context.fillStyle = baseColor2[2];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 5 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            battedBall(context, canvasX1, canvasY1, flag, deleteball, setDeleteBall);\r\n\r\n        }\r\n    }, [canvasX1, canvasY1, flag, runnerCountState])\r\n\r\n\r\n\r\n    //変更開始\r\n\r\n\r\n\r\n    const delball = () => {\r\n        setDeleteBall(!deleteball);\r\n        setcanvasX1(0)\r\n        setcanvasY1(0)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (context !== null) {\r\n\r\n            //削除\r\n            context.clearRect(0, 0, canvasSize, canvasSize);\r\n\r\n            Ground(context);\r\n\r\n            //ベースの色\r\n            let baseColor2 = [];\r\n            for (let i = 0; i < 3; i++) {\r\n                if (runnerCountState[i]) {\r\n                    baseColor2[i] = \"blue\";\r\n                    console.log(baseColor2[i]);\r\n                }\r\n                else {\r\n                    baseColor2[i] = \"white\";\r\n                }\r\n            }\r\n\r\n\r\n            context.strokeStyle = \"black\";\r\n\r\n            //３塁ベース\r\n            context.fillStyle = baseColor2[0];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 3 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.lineWidth = 1;\r\n            context.stroke();\r\n\r\n            //2塁ベース\r\n            context.fillStyle = baseColor2[1];\r\n            context.beginPath();\r\n            context.moveTo(homebase + l, homebase / 2 - margin + h);\r\n            context.lineTo(homebase - w + l, homebase / 2 + w - margin + h);\r\n            context.lineTo(homebase + l, homebase / 2 + w * 2 - margin + h);\r\n            context.lineTo(homebase + w + l, homebase / 2 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            //1塁ベース\r\n            context.fillStyle = baseColor2[2];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 5 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n        }\r\n    }, [deleteball])\r\n\r\n    //変更終了\r\n\r\n\r\n    useEffect(() => {\r\n        //データベースからデータをもらうために呼び出す\r\n        // setBatter(setBattingOrder, setBattingOrder2, urlSchoolId, urlSchoolId2, urlGameId, nowPlayingMember, setNowPlayingMember)\r\n\r\n        //チーム1の選手登録情報を読み出す\r\n        loadRegisteredMember(setRegisteredMember1, urlTournamentId, urlSchoolId)\r\n\r\n        //チーム2の選手登録情報を読み出す\r\n        loadRegisteredMember(setRegisteredMember2, urlTournamentId, urlSchoolId2)\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //テーブル存在確認\r\n        TmpDasekiCall(urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId,\r\n            setNowIningState, setScoreState, setNowOutCountState,\r\n            setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2\r\n        )\r\n    }, [trigger])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"InputPlayGame\">\r\n            <TitleBar\r\n                TitleText={\"速報入力画面\"}\r\n                PageTransition={PageTransition}\r\n                valueUrl={-2}\r\n            />\r\n\r\n            <OptionButton />\r\n\r\n            <div className=\"parts\">\r\n                {\r\n                    <>\r\n                        <div className=\"scoreBoard\">\r\n                            {scoreBoard(scoreState, nowIningState, urlSchoolName, urlSchoolName2)}\r\n                        </div>\r\n                        <div className=\"optionButtons\">\r\n                        </div>\r\n                        <div className=\"outCountsAndRunnerCounts\">\r\n                            <div className=\"passButton\">\r\n                                {isPass === 1 &&\r\n                                    <button className=\"passButtonFalse\" onClick={() => setIsPass(0)}>パスを解除</button>\r\n                                }\r\n                                {isPass === 0 &&\r\n                                    <button className='passButtonTrue' onClick={() => { setIsPass(1) }}>パス</button>\r\n                                }\r\n                            </div>\r\n                            <div className='outCount'>\r\n                                <div className=\"outCountDisplay\">o</div>\r\n                                {outCount(nowOutCountState, setNowOutCountState)}\r\n                            </div>\r\n                            {runnerCount(runnerCountState, setRunnerCountState)}\r\n                        </div>\r\n                        <div className=\"BatterAndPitcher\">\r\n\r\n                        </div>\r\n                        <div className=\"BatterPitcher\">\r\n                            {/* プルダウン1  選手を表示するためのプルダウン */}\r\n                            <PullDownMember\r\n                                battingOrder={battingOrder}\r\n                                battingOrder2={battingOrder2}\r\n                                setBattingOrder={setBattingOrder}\r\n                                setBattingOrder2={setBattingOrder2}\r\n                                registeredMember1={registeredMember1}\r\n                                registeredMember2={registeredMember2}\r\n                                nowIningState={nowIningState}\r\n                                nowPlayingMember={nowPlayingMember}\r\n                                setNowPlayingMember={setNowPlayingMember}\r\n                                setIsPinch={setIsPinch}\r\n                                latestBatOrder={latestBatOrder}\r\n                                setLatestBatOrder={setLatestBatOrder}\r\n                                dasekiAll={dasekiAll}\r\n                                dasekiNum={dasekiAll.length}\r\n                            />\r\n                        </div>\r\n                        <div className=\"freeWrite\">\r\n                            {freeWrite(freeWriteState, setFreeWriteState, freeWriteModeFlag, setFreeWriteModeFlag)}\r\n                        </div>\r\n\r\n                        {/* プルダウン2 */}\r\n                        <PullDown\r\n                            nowPosition={nowPosition}\r\n                            setNowPosition={setNowPosition}\r\n                            setcanvasX1={setcanvasX1}\r\n                            setcanvasY1={setcanvasY1}\r\n                            setFlag={setFlag}\r\n                            setFreeWriteState={setFreeWriteState}\r\n                            setBatterResult={setBatterResult}\r\n                            addScoreState={addScoreState}\r\n                            GameEndPopup_field={GameEndPopup}\r\n                            TableRegister={TableRegister}\r\n                            urlGameId={urlGameId}\r\n                            TmpTableDelete={TmpTableDelete}\r\n                            DeleteDuringGame={DeleteDuringGame}\r\n                            CalculateBatAvg={CalculateBatAvg}\r\n                            nowOutCountState={nowOutCountState}\r\n                            setNowOutCountState={setNowOutCountState}\r\n                            schoolId1={urlSchoolId}\r\n                            schoolId2={urlSchoolId2}\r\n                        />\r\n                    </>}\r\n\r\n                {/* キャンバスについて */}\r\n                <div className=\"diamond\">\r\n                    <canvas width=\"800\" height=\"610\" id=\"canvas\" className='diamondPng'></canvas>\r\n                </div>\r\n\r\n                <div className=\"Buttons\">\r\n                    <div className=\"baseballButtons\">\r\n                        {BaseballButton(addScoreState, setAddScoreState)}\r\n                    </div>\r\n                    {!isEditMode &&\r\n                        <>\r\n                            <div className=\"updateButton\">\r\n                                {/* ポップアップ*/}\r\n                                <Popupfield\r\n                                    nowIningState={nowIningState} //今が何回なのか\r\n                                    setNowIningState={setNowIningState} //今が何回なのかの変更関数\r\n                                    addScoreState={addScoreState}\r\n                                    setAddScoreState={setAddScoreState}\r\n                                    scoreState={scoreState}\r\n                                    setScoreState={setScoreState}\r\n                                    nowOutCountState={nowOutCountState}\r\n                                    setNowOutCountState={setNowOutCountState}\r\n                                    DasekiRegister={DasekiRegister}\r\n                                    urlGameId={urlGameId}\r\n                                    urlSchoolId={urlSchoolId}\r\n                                    urlSchoolId2={urlSchoolId2}\r\n                                    nowPlayingMember={nowPlayingMember}\r\n                                    setNowPlayingMember={setNowPlayingMember}\r\n                                    battingOrder={battingOrder}\r\n                                    battingOrder2={battingOrder2}\r\n                                    runnerCountState={runnerCountState}\r\n                                    freeWriteState={freeWriteState}\r\n                                    setFreeWriteState={setFreeWriteState}\r\n                                    canvasX1={canvasX1}\r\n                                    setcanvasX1={setcanvasX1}\r\n                                    canvasY1={canvasY1}\r\n                                    setcanvasY1={setcanvasY1}\r\n                                    flag={flag}\r\n                                    batterResult={batterResult}\r\n                                    setBatterResult={setBatterResult}\r\n                                    isPinch={isPinch}\r\n                                    setIsPinch={setIsPinch}\r\n                                    TmpDasekiCall={TmpDasekiCall}\r\n                                    trigger={trigger}\r\n                                    setTrigger={setTrigger}\r\n                                    isPass={isPass}\r\n                                    setIsPass={setIsPass}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    }\r\n\r\n                </div>\r\n\r\n                {isEditMode &&\r\n                    makePulldown(0, dasekiAll, \"at_bat_id\", nowSelected, setNowSelected, urlSchoolName, urlSchoolName2,\r\n                        dasekiAll, setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n                        setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n                        battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n                    )\r\n                }\r\n\r\n                {/* 修正モード */}\r\n                {!isEditMode &&\r\n                    <button className='editButton'\r\n                        onClick={() => {\r\n                            setIsEditMode(true);\r\n                            editBattersBox(dasekiAll[nowSelected], dasekiAll, nowSelected,\r\n                                setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n                                setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n                                battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n                            )\r\n                        }}>修正モード\r\n                    </button>\r\n                }\r\n                {isEditMode &&\r\n                    <button className='editButton'\r\n                        onClick={() => {\r\n                            setIsEditMode(false)\r\n                            loardNowDaseki(setNowOutCountState, setNowIningState, setRunnerCountState, setScoreState,\r\n                                setNowPlayingMember, setFreeWriteState,\r\n                                dasekiAll, battingOrder, battingOrder2)\r\n                            setNowSelected([0])\r\n                        }}>速報入力に戻る\r\n                    </button>\r\n                }\r\n\r\n\r\n                {isEditMode &&\r\n                    <button className='editButton'\r\n                        onClick={() =>\r\n                            sendEdit(\r\n                                urlGameId,\r\n                                dasekiAll,\r\n                                nowSelected,\r\n                                nowIningState,\r\n                                addScoreState,\r\n                                scoreState,\r\n                                nowOutCountState,\r\n                                nowPlayingMember,\r\n                                battingOrder,\r\n                                battingOrder2,\r\n                                runnerCountState,\r\n                                freeWriteState,\r\n                                canvasX1,\r\n                                canvasY1,\r\n                                flag,\r\n                                batterResult,\r\n                                isPinch,\r\n                                trigger,\r\n                                setTrigger\r\n                            )}\r\n                    >修正確定</button>}\r\n                {<button className='editButton' onClick={() => delball()}>打球削除</button>}\r\n            </div>\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default InputPlayGame","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\InputSchool.jsx",["1176","1177","1178","1179","1180","1181","1182","1183"],[],"import React, { useState, useRef } from \"react\";\r\nimport { Hyoji } from './comInputSchool/Hyoji';\r\nimport { CheckBoxList } from './comInputSchool/CheckBoxList1';\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\nimport { OptionButton } from \"../../../OtherPage/optionFunc/OptionButton\"\r\n\r\nimport EditSchoolPopup from \"./comInputSchool/EditSchoolPopup/EditSchoolPopup\"\r\n\r\nimport './InputSchool.css';\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n\r\n//送られた文字列がどれか空ならtrue\r\nconst isEnpty = (strArray) => {\r\n  let flag = false\r\n  strArray.map((str) => {\r\n    if (!str) {\r\n      flag = true\r\n    }\r\n  })\r\n  return flag\r\n}\r\n\r\n\r\n//参加高校を登録\r\nconst sendSchool = (useSchools, urlTournamentId, setUseSchools) => {\r\n  let toSendSchool = []\r\n  //チェックされているものだけの配列を作る\r\n  useSchools.map((school) => {\r\n    if (school.IsCheck) {\r\n      toSendSchool = [...toSendSchool,\r\n      {\r\n        tournament_id: urlTournamentId,\r\n        school_name: school.school_name,\r\n        school_id: school.school_id,\r\n        seed: school.seed\r\n      }]\r\n    }\r\n\r\n  })\r\n\r\n  // データベース上の大会参加校を読み込む\r\n  fetch(backendUrl + \"/school/school_call_p\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ tournament_id: urlTournamentId }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((receivedResistered) => {\r\n\r\n      //今送ろうとしている参加高校リストにない、データベース上の大会参加校を削除\r\n      receivedResistered.map((v) => {\r\n        if (toSendSchool.some((u) => v.school_name === u.school_name)) { }\r\n        else {\r\n          DeleteParticipantsSchool(urlTournamentId, v.school_id)\r\n        }\r\n      })\r\n\r\n      //既に登録されているものと被っていないかチェック\r\n      let toSendSchool2 = []\r\n      toSendSchool.map((v) => {\r\n        if (receivedResistered.some((u) => v.school_name === u.school_name))\r\n          console.log(\"「\" + v.school_name + \"」は名前が被っています\")\r\n        else { toSendSchool2 = [...toSendSchool2, v]; }\r\n      })\r\n      console.log(toSendSchool2)\r\n\r\n\r\n\r\n      //空っぽの配列は送れないように対策\r\n      if (toSendSchool2.length !== 0) {\r\n        fetch(backendUrl + \"/school/participants_register\", {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          //body: JSON.stringify({ email:login_id , password:login_ps }),\r\n          body: JSON.stringify(toSendSchool2),\r\n        })\r\n          .then((response) => response.text())\r\n          .then((data) => {\r\n            if (data === \"OK\") {\r\n              readSchool(setUseSchools, urlTournamentId)\r\n            }\r\n          })\r\n      }\r\n\r\n    })\r\n}\r\n\r\n\r\n//参加高校を削除\r\nconst DeleteParticipantsSchool = (urlTournamentId, school_id) => {\r\n  fetch(backendUrl + \"/school/participants_delete\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    }, body: JSON.stringify({ tournament_id: urlTournamentId, school_id: school_id }),\r\n  })\r\n    .then((response) => response.text())\r\n    .then((receivedAllSchool) => {\r\n      console.log(\"school_id:\" + school_id + \"は削除しました\")\r\n    })\r\n}\r\n\r\n\r\n//データベースから初期項目を読み出し\r\nconst readSchool = (setUseSchools, urlTournamentId) => {\r\n  fetch(backendUrl + \"/school/school_call\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((receivedAllSchool) => {\r\n\r\n      // enchantCheck(receivedAllSchool, setUseSchools);\r\n      loadRegisteredSchool(urlTournamentId, receivedAllSchool, setUseSchools)\r\n    })\r\n}\r\n\r\n\r\n//対象の大会の学校情報呼び出し\r\nconst loadRegisteredSchool = (urlTournamentId, receivedAllSchool, setUseSchools) => {\r\n\r\n  fetch(backendUrl + \"/school/school_call_p\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ tournament_id: urlTournamentId }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.length === 0) {\r\n        console.log(\"登録されていません\")\r\n        enchantCheck(receivedAllSchool, setUseSchools, [])\r\n      }\r\n      else {\r\n        console.log(data);\r\n        enchantCheck(receivedAllSchool, setUseSchools, data)\r\n      }\r\n    })\r\n}\r\n\r\n\r\n//checkを付与\r\nconst enchantCheck = (receivedAllSchool, setUseSchools, data) => {\r\n  let setUseSchools3 = []\r\n  receivedAllSchool.map((school) => {\r\n    if (data.some((u) => u.school_id === school.school_id)) {\r\n      setUseSchools3 = (\r\n        [...setUseSchools3, {\r\n          school_name: school.school_name,\r\n          school_id: school.school_id,\r\n          IsCheck: true,\r\n          seed: 0\r\n        }])\r\n    }\r\n    else {\r\n      setUseSchools3 = (\r\n        [...setUseSchools3, {\r\n          school_name: school.school_name,\r\n          school_id: school.school_id,\r\n          IsCheck: false,\r\n          seed: 0\r\n        }])\r\n    }\r\n\r\n  })\r\n  setUseSchools(setUseSchools3)\r\n}\r\n\r\n\r\n//１つの高校を追加する\r\nconst addSchool = (setUseSchools, addSchoolName, urlTournamentId, useSchools) => {\r\n  if (useSchools.some((v) => v.school_name === addSchoolName)) console.log(\"高校名がかぶっています\")\r\n  else {\r\n    fetch(backendUrl + \"/school/school_register\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ school_name: addSchoolName }),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        if (data === \"OK\") {\r\n          readSchool(setUseSchools, urlTournamentId)\r\n        }\r\n      })\r\n  }\r\n\r\n}\r\n\r\n//高校を編集する\r\nconst EditSchool = (school_id, school_name, setUseSchools, urlTournamentId) => {\r\n  fetch(backendUrl + \"/school/school_edit\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ school_id: school_id, school_name: school_name }),\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => {\r\n      if (data === \"OK\") {\r\n        console.log(school_name + \"を編集しました\")\r\n        readSchool(setUseSchools, urlTournamentId)\r\n      }\r\n    })\r\n\r\n\r\n    \r\n  console.log(school_id)\r\n  console.log(school_name)\r\n  console.log(urlTournamentId)\r\n\r\n}\r\n\r\n// 学校情報を削除\r\nconst DeleteSchool = (school_id, school_name, setUseSchools, urlTournamentId) => {\r\n  fetch(backendUrl + \"/school/school_delete\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ school_id: school_id, school_name: school_name }),\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => {\r\n      if (data === \"OK\") {\r\n        console.log(school_name + \"を削除しました\")\r\n        readSchool(setUseSchools, urlTournamentId)\r\n      }\r\n    })\r\n\r\n  console.log(school_id)\r\n  console.log(school_name)\r\n  console.log(urlTournamentId)\r\n}\r\n\r\n\r\n\r\n\r\nexport const InputSchool = () => {\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n  const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n\r\n  //ページ遷移用\r\n  const navigate = useNavigate()\r\n  const PageTransition = (url) => {\r\n    navigate(url)\r\n  }\r\n\r\n  //const { Schools } = require(\"../../../../DB/Schools\"); //分割代入\r\n  let Schools = []\r\n\r\n  // const [receivedResistered, setReeceivedResistered] = useState([])\r\n\r\n  const [isCheckBoxMode, setIsCheckBoxMode] = useState(!true)\r\n  const [useSchools, setUseSchools] = useState([])\r\n\r\n  //入力中の高校名を管理するステイト\r\n  const [schoolNameState, setSchoolNameState] = useState(\"\")\r\n\r\n  //編集削除モードかそうでないか\r\n  const [isEditMode, setIsEditMode] = useState(false)\r\n\r\n  //編集か削除か\r\n  const [EorDCheckbox, setEorDCheckbox] = useState(true)\r\n\r\n  //編集中の学校名を管理するステイト\r\n  const [editingSchoolName, setEditingSchoolName] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    //全学校読み出し\r\n    readSchool(setUseSchools, urlTournamentId);\r\n    //既に登録されている学校読み出し\r\n    // loadRegisteredSchool(urlTournamentId)\r\n  }, [])\r\n\r\n  const handleCheckBox = () => {\r\n    setIsCheckBoxMode(!isCheckBoxMode)\r\n    return (\r\n      <button>aa</button>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <TitleBar\r\n        TitleText={\"高校入力選択画面\"}\r\n        PageTransition={PageTransition}\r\n        valueUrl={-1}\r\n      />\r\n      <OptionButton />\r\n\r\n      <div className=\"top\">\r\n        <button className=\"BackButton\"><Link to={'/home/input_mode/'} className=\"BackButton\">＜戻る</Link> </button>\r\n      </div>\r\n\r\n      <div className=\"tournamentName\">\r\n        <h3>{urlTournamentName}</h3>\r\n      </div>\r\n      <div className=\"InputSchool\">\r\n        学校・チーム名 <input value={schoolNameState} onChange={(e) => { setSchoolNameState(e.target.value) }} ></input>\r\n\r\n        {isEnpty([schoolNameState]) &&\r\n          <button\r\n            onClick={() => { }}\r\n          >追加</button>\r\n        }\r\n\r\n        {!isEnpty([schoolNameState]) &&\r\n          <button\r\n            onClick={() => addSchool(setUseSchools, schoolNameState, urlTournamentId, useSchools)}\r\n          >追加</button>\r\n        }\r\n      </div>\r\n      <br />\r\n\r\n      {/* <button onClick={handleCheckBox}>チェックボックス入力</button>\r\n      <button onClick={() => sendSchool(useSchools, urlTournamentId, Schools, setUseSchools)}>高校名登録</button> */}\r\n\r\n      {/* 編集モードでないとき */}\r\n      {!isEditMode &&\r\n        <>\r\n          {/* 高校選択ボタン */}\r\n          <div className=\"ButtonArea\">\r\n            <button id=\"checkButton\" onClick={handleCheckBox}>高校選択</button>\r\n          </div>\r\n\r\n          {/* 編集モード切り替えボタン */}\r\n          <div className=\"ButtonArea\">\r\n            <button id=\"checkButton\" onClick={() => { setIsEditMode(!isEditMode) }}>編集モード</button>\r\n          </div>\r\n\r\n          <hr></hr>\r\n\r\n          {!isCheckBoxMode &&\r\n            Hyoji(useSchools, navigate, urlTournamentName, urlTournamentId, isEditMode, EditSchoolPopup,\r\n              EorDCheckbox, setEorDCheckbox, EditSchool, DeleteSchool, readSchool, setUseSchools,\r\n              editingSchoolName, setEditingSchoolName\r\n            )}\r\n          {isCheckBoxMode && CheckBoxList(useSchools, setUseSchools)}<br />\r\n\r\n          {/* 登録ボタン */}\r\n          <div className=\"ButtonArea\">\r\n            <button className=\"decisionButton\"\r\n              onClick={() => sendSchool(useSchools, urlTournamentId, setUseSchools)}>参加高校を登録\r\n            </button>\r\n          </div>\r\n        </>\r\n      }\r\n\r\n      {/* 編集モード中 */}\r\n      {isEditMode &&\r\n        <>\r\n          {/* 編集モード切り替えボタン */}\r\n          <div className=\"ButtonArea\">\r\n            <button id=\"checkButton\" onClick={() => { setIsEditMode(!isEditMode) }}>編集モード</button>\r\n          </div>\r\n\r\n          <hr></hr>\r\n          {Hyoji(useSchools, navigate, urlTournamentName, urlTournamentId, isEditMode, EditSchoolPopup,\r\n            EorDCheckbox, setEorDCheckbox, EditSchool, DeleteSchool, readSchool, setUseSchools,\r\n            editingSchoolName, setEditingSchoolName\r\n          )}\r\n        </>\r\n      }\r\n\r\n      <hr></hr>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default InputSchool;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputTournamentPage\\Input_Tournament.jsx",["1184","1185","1186","1187"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { OptionButton } from '../../../OtherPage/optionFunc/OptionButton'\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\nimport EditTournamentPopup from \"./com/EditTournamentPopup/EditTournamentPopup\";\r\n\r\nimport \"./InputTournament.css\"\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n\r\n//送られた文字列がどれか空ならtrue\r\nconst isEnpty = (strArray) => {\r\n  let flag = false\r\n  strArray.map((str) => {\r\n    if (!str) {\r\n      flag = true\r\n    }\r\n  })\r\n  return flag\r\n}\r\n\r\n//送る文字列が被っていればtrue\r\nconst isDuplicate = (Array, key, id) => {\r\n  let flag = false\r\n  Array.map((u) => {\r\n    if (u[id] === key) {\r\n      flag = true\r\n    }\r\n  })\r\n  console.log(key)\r\n  return flag\r\n}\r\n\r\n//大会を読み込む\r\nconst readTournament = (setTournamentData) => {\r\n  fetch(backendUrl + \"/tournament/tournament_call\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => setTournamentData(data))\r\n}\r\n\r\n\r\n\r\n\r\n//文字分割\r\nconst dateSplit = (nowdate) => {\r\n  if (nowdate !== null) {\r\n    let dateArray = nowdate.split('-');\r\n    dateArray = { \"year\": dateArray[0], \"month\": dateArray[1], \"day\": dateArray[2] }\r\n    return dateArray\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//自作プルダウン\r\nconst makePulldown = (pulldownId, ArrayList, idText, nowSelected, setNowSelected) => {\r\n  //pulldownIdは0でいいです。\r\n  //ArrayListは表示したい要素を並べた配列です、普通の配列ではなく連想配列です。\r\n  //idテキストは連想配列の属性を書きます。\r\n  //nowSelectedは今プルダウンで何が選択されているかが入ります。初期値は[0]で、これは0番目の値が選択されている状態です。\r\n  //setNowSelectedはnowSelecedの値をuseStateの機能で上書きする関数です。setNowSelected(更新値)とすれば、nowSelectedに更新値が入ります。\r\n\r\n  return (\r\n    <>\r\n      <select id=\"tekitouni\"\r\n        onChange={(e) => {\r\n          //ステイトが変化すると再描画させるための文、これがないと再描画されない\r\n          //なお、消すと再描画はされないが内部は変化する\r\n          nowSelected = nowSelected.slice(0, nowSelected.length);\r\n          nowSelected[pulldownId] = e.target.value\r\n          setNowSelected(nowSelected)\r\n          console.log(nowSelected)\r\n        }\r\n        }>\r\n        {ArrayList.map((component, ind) => (\r\n          <option value={ind}>{component[idText]}</option>\r\n        ))\r\n        }\r\n      </select>\r\n    </>\r\n  )\r\n}\r\n\r\n//追加ボタン押したとき\r\nconst handleTournament = (\r\n  setTournamentData,\r\n  yearArray,\r\n  monthArray,\r\n  dayArray,\r\n  nowOpeningDate,\r\n  nowTournamentName,\r\n  TournamentData\r\n) => {\r\n  console.log(\r\n    yearArray[nowOpeningDate[0]].year + \"-\" +\r\n    monthArray[nowOpeningDate[1]].month + \"-\" +\r\n    dayArray[nowOpeningDate[2]].day\r\n  )\r\n\r\n  //被りチェック\r\n  if (TournamentData.some((v) => v.tournament_name === nowTournamentName)) {\r\n    console.log(\"名前被ってます\")\r\n  }\r\n  else if (nowTournamentName === \"\") {\r\n    console.log(\"空白です\")\r\n  }\r\n  else {\r\n    console.log(nowTournamentName + \"を登録します\")\r\n\r\n    fetch(backendUrl + \"/tournament/tournament_register\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //body: JSON.stringify({ email:login_id , password:login_ps }),\r\n      body: JSON.stringify({\r\n        \"tournament_name\": nowTournamentName,\r\n        \"opening\":\r\n          yearArray[nowOpeningDate[0]].year + \"-\" +\r\n          monthArray[nowOpeningDate[1]].month + \"-\" +\r\n          dayArray[nowOpeningDate[2]].day\r\n      }),\r\n    })\r\n      .then(() => readTournament1(TournamentData, setTournamentData))\r\n  }\r\n}\r\n\r\n//大会を読み込む\r\nconst readTournament1 = (TournamentData, setTournamentData) => {\r\n  fetch(\r\n    backendUrl + \"/tournament/tournament_call\", {\r\n    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n\r\n      let count = 0\r\n      data.map((u) => {\r\n        if (TournamentData.some((v) => u.tournament_name === v.tournament_name)) count++\r\n\r\n        console.log(TournamentData.some((v) => u.tournament_name === v.tournament_name))\r\n      })\r\n      if (count !== data.length) { setTournamentData(data); console.log(\"aaiiuu\") }\r\n    })\r\n}\r\n\r\n//大会の情報を修正する\r\nconst editTournament = (urlTournamentId, newTournamentName, openingDate, TournamentData, setTournamentData) => {\r\n  if (TournamentData.some((v) => v.tournament_name === newTournamentName)) {\r\n    console.log(\"名前被ってます\")\r\n  }\r\n  else {\r\n    fetch(backendUrl + \"/tournament/tournament_edit\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\", },\r\n      body: JSON.stringify({ tournament_id: urlTournamentId, tournament_name: newTournamentName, opening: openingDate }),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => readTournament1([], setTournamentData))\r\n  }\r\n}\r\n\r\n//削除\r\nconst tournamentDelete = (tournamentId, setTournamentData) => {\r\n  fetch(backendUrl + \"/tournament/tournament_edit\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: { \"Content-Type\": \"application/json\", },\r\n    body: JSON.stringify({ tournament_id: tournamentId }),\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => { if (data === \"OK\") { console.log(\"削除しました\"); readTournament1([], setTournamentData) } })\r\n\r\n  // console.log(tournamentId + \"削除しました\")\r\n}\r\n\r\n\r\n\r\n\r\nexport const Input_Tournament = () => {\r\n\r\n  //プルダウンの選択肢の値\r\n  const initialYear = 2020\r\n  const endYear = 2040\r\n  const initialMonth = 1\r\n  const endMonth = 12\r\n  const initialday = 1\r\n  const endDay = 31\r\n\r\n  //プルダウンのリスト作成\r\n  let yearArray = []\r\n  for (let i = initialYear; i <= endYear; i++) { yearArray = [...yearArray, { year: i }] }\r\n\r\n  let monthArray = []\r\n  for (let i = initialMonth; i <= endMonth; i++) { monthArray = [...monthArray, { month: i }] }\r\n\r\n  let dayArray = []\r\n  for (let i = initialday; i <= endDay; i++) { dayArray = [...dayArray, { day: i }] }\r\n\r\n  //大会の日付を入力するときのステイト1:年, 2:月, 3:日\r\n  const [nowOpeningDate, setNowOpeningDate] = useState([0, 0, 0])\r\n\r\n  //大会の日付を編集するときのステイト1:年, 2:月, 3:日\r\n  const [editOpeningDate, setEditOpeningDate] = useState([0, 0, 0])\r\n\r\n  //大会名を入力する時のステイト\r\n  const [nowTournamentName, setNowTournamentName] = useState(\"\")\r\n\r\n  //削除モードを管理するステイト\r\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\r\n\r\n  //編集中の大会名を管理するステイト\r\n  const [editingTnmtName, setEditingTnmtName] = useState(\"\")\r\n\r\n  //編集するか削除するかのチェックボックスを管理するステイト,trueなら編集,falseなら削除\r\n  const [EorDcheckBox, setEorDcheckBox] = useState(true)\r\n\r\n\r\n  //文字分割のための箱を用意\r\n  let dateArray = { \"year\": \"\", \"month\": \"\", \"day\": \"\" }\r\n\r\n  //適当な初期値\r\n  let [TournamentData, setTournamentData] = useState([\r\n    { \"tournament_name\": '第31回春大会', \"tournament_id\": '55', \"opening\": \"2022-03-01\" },\r\n    { \"tournament_name\": '第9回松山大会', \"tournament_id\": '56', \"opening\": \"2022-02-01\" },\r\n    { \"tournament_name\": '第5回伊予大会', \"tournament_id\": '57', \"opening\": \"2022-01-01\" },\r\n    { \"tournament_name\": '第22回秋大会', \"tournament_id\": '58', \"opening\": \"2021-08-01\" }\r\n  ])\r\n\r\n  //ページ遷移用\r\n  const navigate = useNavigate()\r\n  const PageTransition = (url) => {\r\n    navigate(url)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    readTournament1(TournamentData, setTournamentData)\r\n    console.log(\"aa\")\r\n  }, [TournamentData])\r\n\r\n  return (\r\n    <div>\r\n      <TitleBar\r\n        TitleText={\"大会入力選択画面\"}\r\n        PageTransition={PageTransition}\r\n        valueUrl={-1}\r\n      />\r\n\r\n      <OptionButton />\r\n\r\n\r\n      <div class=\"headline\">大会作成</div>\r\n      <div class=\"whole1\">\r\n        大会名\r\n        <input type=\"text\" onChange={(e) => { setNowTournamentName(e.target.value) }} />\r\n        <br />\r\n        日付\r\n        <label>\r\n          {makePulldown(0, yearArray, \"year\", nowOpeningDate, setNowOpeningDate)}年\r\n        </label>\r\n        <label>\r\n          {makePulldown(1, monthArray, \"month\", nowOpeningDate, setNowOpeningDate)}月\r\n        </label>\r\n        <label>\r\n          {makePulldown(2, dayArray, \"day\", nowOpeningDate, setNowOpeningDate)}日\r\n        </label>\r\n        <br />\r\n\r\n        {/* 追加ボタン */}\r\n        {isEnpty([nowTournamentName]) &&\r\n          <button\r\n            class=\"btn_In_to\"\r\n            onClick={() => { }}>追加\r\n          </button>\r\n        }\r\n\r\n        {!isEnpty([nowTournamentName]) &&\r\n          <button\r\n            class=\"btn_In_to\"\r\n            onClick={() => {\r\n              handleTournament(\r\n                setTournamentData, yearArray, monthArray, dayArray, nowOpeningDate, nowTournamentName, TournamentData\r\n              )\r\n            }}>追加\r\n          </button>\r\n        }\r\n\r\n        {/* 編集・削除モードボタン */}\r\n        <button\r\n          onClick={() => { setIsDeleteMode(!isDeleteMode) }}\r\n        >{isDeleteMode && \"大会編集中\"}{!isDeleteMode && \"大会編集モード\"}</button>\r\n\r\n      </div>\r\n\r\n      <div class=\"headline\">大会選択</div>\r\n      <div class=\"whole\">\r\n        <div className=\"tournamentList\">\r\n          <div className=\"tournaments\">\r\n\r\n            {TournamentData.map((Tournament, ind) => {\r\n\r\n              if (Tournament.tournament_name !== null) {\r\n                //文字分割\r\n                dateArray = dateSplit(Tournament.opening)\r\n\r\n                return (\r\n                  <div className=\"tournament\">\r\n                    <div className=\"days\">\r\n                      <span>{dateArray.year}年{dateArray.month}月{dateArray.day}日</span>\r\n                    </div>\r\n                    <div className=\"tournamentName\">\r\n                      {isDeleteMode &&\r\n                        <>\r\n                          <EditTournamentPopup\r\n                            sendClassName=\"btn_In_to1\"\r\n                            Tournament={Tournament}\r\n                            ind={ind}\r\n                            editTournament={editTournament}\r\n                            editOpeningDate={editOpeningDate}\r\n                            setEditOpeningDate={setEditOpeningDate}\r\n                            yearArray={yearArray}\r\n                            monthArray={monthArray}\r\n                            dayArray={dayArray}\r\n                            makePulldown={makePulldown}\r\n                            TournamentData={TournamentData}\r\n                            setTournamentData={setTournamentData}\r\n                            editingTnmtName={editingTnmtName}\r\n                            setEditingTnmtName={setEditingTnmtName}\r\n                            EorDcheckBox={EorDcheckBox}\r\n                            setEorDcheckBox={setEorDcheckBox}\r\n                            tournamentDelete={tournamentDelete}\r\n                            readTournament={readTournament}\r\n                            dateSplit={dateSplit}\r\n                            isDuplicate={isDuplicate}\r\n                          />\r\n                        </>\r\n\r\n                      }\r\n                      {!isDeleteMode &&\r\n                        <button\r\n                          className=\"btn_In_to1\"\r\n                          onClick={() =>\r\n                            PageTransition(\r\n                              \"inputschool?urlTournamentId=\" +\r\n                              Tournament.tournament_id +\r\n                              \"&urlTournamentName=\" +\r\n                              Tournament.tournament_name\r\n                            )\r\n                          }>\r\n                          {Tournament.tournament_name}\r\n                        </button>\r\n                      }\r\n                      <br />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input_Tournament;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\InputMember.jsx",["1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200"],[],"import React, { useState, useEffect, useRef } from \"react\"\r\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\r\nimport \"./InputMember.css\"\r\nimport MemberPopup from \"./functions/MemberPopup/MemberPopup\"\r\nimport EditMemberPopup from \"./functions/EditMemberPopup/EditMemberPopup\";\r\n\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\nimport { OptionButton } from \"../../../OtherPage/optionFunc/OptionButton\"\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n\r\n//ひらがなチェック\r\nconst isHiragana = (str) => {\r\n    str = (str == null) ? \"\" : str;\r\n    if (str.match(/^[ぁ-んー　]*$/)) {    //\"ー\"の後ろの文字は全角スペースです。\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n//送られた文字列がどれか空ならfalse\r\nconst isEnpty = (strArray) => {\r\n    let flag = true\r\n    strArray.map((str) => {\r\n        if (!str) {\r\n            flag = false\r\n        }\r\n    })\r\n    return flag\r\n}\r\n\r\nconst loadMember = (uniformNumberArray, setUniformNumberArray, urlTournamentId, urlSchoolId, setCopyMember, selectedMember, setSelectedMember, isInitial, setRegisteredMembers) => {\r\n    //高校に所属する3年生以下の人間を全員呼び出す\r\n    fetch(backendUrl + \"/member/member_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ school_id: urlSchoolId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((allUnder3MemberData) => {\r\n            setCopyMember(allUnder3MemberData);\r\n            console.log(allUnder3MemberData)\r\n\r\n            //初回レンダリング時のみ実行\r\n            if (isInitial === true) {\r\n                //既に選手登録されている人間を読み出す\r\n                fetch(backendUrl + \"/member/tournament_member_call\", {\r\n                    method: \"POST\",\r\n                    mode: \"cors\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((selectedMembersData) => {\r\n                        setRegisteredMembers(selectedMembersData)\r\n\r\n                        let tempSelectedMember = []\r\n                        let tempUniformNumber = []\r\n\r\n\r\n                        console.log(selectedMembersData)\r\n\r\n                        if (allUnder3MemberData.length !== 0) {\r\n                            allUnder3MemberData.map((allUnder3Member, index) => {\r\n\r\n                                tempSelectedMember = [...tempSelectedMember, false]\r\n                                tempUniformNumber = [...tempUniformNumber, 1]\r\n\r\n                                for (let i = 0; i < selectedMembersData.length; i++) {\r\n                                    if (selectedMembersData[i].player_id === allUnder3Member.player_id) {\r\n                                        tempSelectedMember[index] = true\r\n                                    }\r\n                                }\r\n\r\n                                let i = selectedMembersData.findIndex((v) => v.player_id === allUnder3Member.player_id)\r\n                                if (i !== -1) {\r\n                                    tempUniformNumber[tempUniformNumber.length - 1] = selectedMembersData[i].uniform_number\r\n                                }\r\n                            })\r\n                        }\r\n\r\n\r\n\r\n                        setCheck(allUnder3MemberData, tempSelectedMember, setSelectedMember);\r\n                        tempUniformNumber = tempUniformNumber.slice(0, tempUniformNumber.length)\r\n                        setUniformNumberArray(tempUniformNumber)\r\n\r\n                    })\r\n            }\r\n\r\n            else {\r\n                setCheck(allUnder3MemberData, selectedMember, setSelectedMember)\r\n            }\r\n\r\n            if (uniformNumberArray[0] == null) {\r\n                let Array = [1];\r\n                for (let i = 1; i < allUnder3MemberData.length; i++) {\r\n                    Array = [...Array, 1]\r\n                }\r\n                uniformNumberArray = Array\r\n                setUniformNumberArray(uniformNumberArray)\r\n            }\r\n\r\n        })\r\n}\r\n\r\n\r\nconst Member = [{}]\r\n\r\nconst setCheck = (copyMember, selectedMember, setSelectedMember) => {\r\n    let copyArray = []\r\n    const beforeChecked = selectedMember\r\n\r\n    for (let i = 0; i < copyMember.length; i++) {\r\n        copyArray = [...copyArray, false]\r\n    }\r\n\r\n    if (beforeChecked.length !== 0) {\r\n        for (let i = 0; i < beforeChecked.length; i++) {\r\n            copyArray[i] = beforeChecked[i]\r\n        }\r\n    }\r\n\r\n    setSelectedMember(copyArray)\r\n}\r\n\r\n//背番号\r\nconst setBacknumber = (copyMember, setCopyMember) => {\r\n    for (let i = 0; i < copyMember.length; i++) {\r\n        copyMember[i].uniform_number = 1\r\n    }\r\n    setCopyMember(copyMember)\r\n\r\n}\r\n\r\nconst makePulldownBN = (ind, uniformNumberArray, setUniformNumberArray) => {\r\n\r\n    //そのためにループしたい数と同じ長さの配列を作る\r\n    let nullArray = [0]\r\n    for (let i = 1; i < 50; i++) {\r\n        nullArray = [...nullArray, i]\r\n    }\r\n    return (\r\n        <>\r\n            <select id=\"fruit\"\r\n                onChange={(e) => {\r\n                    console.log(e.target.value + \"_\" + ind)\r\n                    let copyUniformNumberArray = uniformNumberArray\r\n                    copyUniformNumberArray = copyUniformNumberArray.slice(0, copyUniformNumberArray.length)\r\n                    copyUniformNumberArray[ind] = e.target.value\r\n                    setUniformNumberArray(copyUniformNumberArray)\r\n                }}>\r\n                <option value={0}>背番号を変更する</option>\r\n                {nullArray.map((component, ind) => (\r\n                    <option value={ind + 1}>{ind + 1}</option>\r\n                ))\r\n                }\r\n            </select>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//自作プルダウン\r\nconst makePulldown = (pulldownId, ArrayList, idText, nowSelected, setNowSelected) => {\r\n    //pulldownIdは0でいいです。\r\n    //ArrayListは表示したい要素を並べた配列です、普通の配列ではなく連想配列です。\r\n    //idテキストは連想配列の属性を書きます。\r\n    //nowSelectedは今プルダウンで何が選択されているかが入ります。初期値は[0]で、これは0番目の値が選択されている状態です。\r\n    //setNowSelectedはnowSelecedの値をuseStateの機能で上書きする関数です。setNowSelected(更新値)とすれば、nowSelectedに更新値が入ります。\r\n\r\n    return (\r\n        <>\r\n            <select id=\"tekitouni\"\r\n                onChange={(e) => {\r\n                    //ステイトが変化すると再描画させるための文、これがないと再描画されない\r\n                    //なお、消すと再描画はされないが内部は変化する\r\n                    nowSelected = nowSelected.slice(0, nowSelected.length);\r\n                    nowSelected[pulldownId] = e.target.value\r\n                    setNowSelected(nowSelected)\r\n                    console.log(nowSelected)\r\n                }\r\n                }>\r\n                {ArrayList.map((component, ind) => (\r\n                    <option value={ind}>{component[idText]}</option>\r\n                ))\r\n                }\r\n            </select>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//追加ボタン関数\r\nconst handleMembers = (\r\n    urlSchoolId,\r\n    numberRef,\r\n    iningRef,\r\n    handedHitState,\r\n    handedThrowState,\r\n    copyMember,\r\n    uniformNumberArray,\r\n    setUniformNumberArray,\r\n    nameKanji,\r\n    nameHira,\r\n    trigger,\r\n    setTrigger\r\n) => {\r\n    let Array = [{\r\n        \"school_id\": urlSchoolId,\r\n        \"player_name_kanji\": nameKanji.famiryName + \"　\" + nameKanji.firstName,\r\n        \"player_name_hira\": nameHira.famiryName + \"　\" + nameHira.firstName,\r\n        \"uniform_number\": numberRef.current.value,\r\n        \"grade\": iningRef.current.value,\r\n        \"handed_hit\": handedHitState,\r\n        \"handed_throw\": handedThrowState,\r\n        \"BA\": 0,\r\n        \"bat_num\": 0,\r\n        \"hit_num\": 0\r\n    }]\r\n\r\n\r\n    if (copyMember.some((u) => u.player_name_kanji === Array[0].player_name_kanji) &&\r\n        copyMember.some((u) => u.player_name_hira === Array[0].player_name_hira)\r\n    ) {\r\n        console.log(\"out\")\r\n    }\r\n    else {\r\n        console.log(\"safe\")\r\n        fetch(backendUrl + \"/member/member_register\", {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(Array),\r\n        })\r\n            .then((response) => response.text())\r\n            .then((data) => {\r\n                if (data === \"OK\") {\r\n                    //背番号の取得\r\n                    let copyUniformNumberArray = uniformNumberArray\r\n                    copyUniformNumberArray = copyUniformNumberArray.slice(0, copyUniformNumberArray.length)\r\n                    console.log(numberRef.current.value)\r\n                    setUniformNumberArray([...copyUniformNumberArray, numberRef.current.value])\r\n                    console.log([...uniformNumberArray, numberRef.current.value])\r\n                    setTrigger(!trigger)\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n//登録ボタンで内容を送信\r\nconst handleSousin = (copyMember, selectedMember, urlTournamentId, uniformNumberArray, registeredMembers) => {\r\n\r\n    let sendArray = copyMember\r\n\r\n\r\n    for (let i = 0; i < sendArray.length; i++) {\r\n        delete sendArray[i].hit_num\r\n        delete sendArray[i].bat_num\r\n        sendArray[i].tournament_id = urlTournamentId\r\n        sendArray[i].uniform_number = uniformNumberArray[i]\r\n\r\n    }\r\n\r\n    //選択したものだけの配列を作る\r\n    let sendArray2 = []\r\n    sendArray.map((component, ind) => {\r\n        if (selectedMember[ind] === true) sendArray2 = [...sendArray2, sendArray[ind]]\r\n    })\r\n\r\n    //選択されたものから、既に登録されている人間を除いた配列を作る、登録されているやつを全員消すなら問題なし\r\n    // let sendArray3 = []\r\n    // sendArray2.map((v) => {\r\n    //     if (registeredMembers.some((u) => u.player_name_kanji === v.player_name_kanji)) { }\r\n    //     else {\r\n    //         sendArray3 = [...sendArray3, v]\r\n    //     }\r\n    // })\r\n\r\n    // console.log(sendArray3)\r\n\r\n    console.log(registeredMembers)\r\n    console.log(sendArray2)\r\n    registeredMembers.map((v) => {\r\n        fetch(backendUrl + \"/member/tournament_member_delete\", {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ tournament_id: urlTournamentId, player_id: v.player_id }),\r\n        })\r\n\r\n    })\r\n\r\n\r\n    //バックエンドに送信\r\n    fetch(backendUrl + \"/member/tournament_member_register\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(sendArray2),\r\n    })\r\n\r\n}\r\n\r\n\r\n//メンバーの編集内容をバックエンドに送信\r\nconst EditMember = async (sendInfo) => {\r\n    await fetch(backendUrl + \"/member/member_edit\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", },\r\n        body: JSON.stringify(sendInfo),\r\n    })\r\n        .then(async (response) => response.text())\r\n        .then(async (data) => {\r\n\r\n            if (data === \"OK\") {\r\n                await console.log(sendInfo.player_name_kanji + \"を編集しました\")\r\n                await console.log(\"EditMember\")\r\n            }\r\n        })\r\n\r\n    await console.log(sendInfo)\r\n}\r\n\r\n\r\n\r\nconst lordRegisteredMember = (urlTournamentId, urlSchoolId) => {\r\n    fetch(backendUrl + \"/member/tournament_member_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log(data)\r\n        })\r\n}\r\n\r\n\r\nconst selectHitted = (handedHitState, handleHandedHit) => {\r\n    if (handedHitState === \"左\") {\r\n        return (\r\n            <>\r\n                <button style={{ color: \"white\", background: \"lightskyblue\" }}>左打</button>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedHit(\"右\")}>右打</button>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedHit(\"両\")}>両打</button>\r\n            </>\r\n        )\r\n    }\r\n    else if (handedHitState === \"右\") {\r\n        return (\r\n            <>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedHit(\"左\")}>左打</button>\r\n                <button style={{ color: \"white\", background: \"lightskyblue\" }}>右打</button>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedHit(\"両\")}>両打</button>\r\n            </>\r\n        )\r\n    }\r\n    else if (handedHitState === \"両\") {\r\n        return (\r\n            <>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedHit(\"左\")}>左打</button>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedHit(\"右\")}>右打</button>\r\n                <button style={{ color: \"white\", background: \"lightskyblue\" }}>両打</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst selectThrowed = (handedThrowState, handleHandedThrow) => {\r\n    if (handedThrowState === \"左\") {\r\n        return (\r\n            <>\r\n                <button style={{ color: \"white\", background: \"lightskyblue\" }}>左投</button>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedThrow(\"右\")}>右投</button>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedThrow(\"両\")}>両投</button>\r\n            </>\r\n        )\r\n    }\r\n    else if (handedThrowState === \"右\") {\r\n        return (\r\n            <>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedThrow(\"左\")}>左投</button>\r\n                <button style={{ color: \"white\", background: \"lightskyblue\" }}>右打</button>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedThrow(\"両\")}>両投</button>\r\n            </>\r\n        )\r\n    }\r\n    else if (handedThrowState === \"両\") {\r\n        return (\r\n            <>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedThrow(\"左\")}>左投</button>\r\n                <button style={{ color: \"white\", background: \"mediumblue\" }} onClick={() => handleHandedThrow(\"右\")}>右投</button>\r\n                <button style={{ color: \"white\", background: \"lightskyblue\" }}>両打</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n//選択している数を表示\r\nconst cntSelectedMemberNum = (selectedMember) => {\r\n    let cnt = 0\r\n    selectedMember.map((v) => {\r\n        if (v) cnt++\r\n    })\r\n    return cnt\r\n}\r\n\r\n\r\n\r\nexport const InputMember = () => {\r\n\r\n    //ページ遷移用\r\n    const navigate = useNavigate()\r\n    const PageTransition = (url) => {\r\n        navigate(url)\r\n    }\r\n\r\n\r\n    const ining = 1;\r\n    const number = 1;\r\n\r\n    const iningRef = useRef(null)\r\n    const numberRef = useRef(null)\r\n\r\n    //名前を管理するステイト\r\n    const [nameKanji, setNameKanji] = useState({ famiryName: \"\", firstName: \"\" })\r\n    const [nameHira, setNameHira] = useState({ famiryName: \"\", firstName: \"\" })\r\n\r\n    const [iningState, setIningState] = useState(ining)\r\n    const [schoolState, setSchoolState] = useState(1)\r\n    const [numberState, setNumberState] = useState(1)\r\n\r\n    const [handedHitState, setHandedHitState] = useState(\"左\")\r\n    const [handedThrowState, setHandedThrowState] = useState(\"左\")\r\n\r\n    //既に選手登録されている選手を管理するステイト\r\n    const [registeredMembers, setRegisteredMembers] = useState([])\r\n\r\n    //数を監視するステイト\r\n    let selectedMemberNum = 0\r\n\r\n    //メンバーを選択しているかどうかのフラグをつくる\r\n    let copyArray = [false]\r\n    const [selectedMember, setSelectedMember] = useState(copyArray)\r\n\r\n    //urlから値を取得\r\n    const [searchParams] = useSearchParams();\r\n    const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n    const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n    const urlSchoolId = searchParams.get(\"urlSchoolId\")\r\n    const urlSchoolName = searchParams.get(\"urlSchoolName\")\r\n\r\n    //DBからデータを読み出したいときのトリガーとなるステイト\r\n    const [trigger, setTrigger] = useState(false)\r\n\r\n    //編集・削除モードかどうかを管理するステイト\r\n    const [isEditMode, setisEditMode] = useState(false)\r\n\r\n    //編集中の学年のプルダウンの位置を管理するステイト\r\n    const [editGrade, setEditGrade] = useState([0])\r\n\r\n    //修正中のプレイヤー名を管理するすていと\r\n    const [editingMemberName, setEditingMemberName] = useState(\r\n        {\r\n            player_name_kanji: { famiryName: \"\", firstName: \"\" },\r\n            player_name_hira: { famiryName: \"\", firstName: \"\" }\r\n        }\r\n    )\r\n\r\n    //学年のプルダウンのための配列\r\n    const gradeArray = [{ grade: 1 }, { grade: 2 }, { grade: 3 }, { grade: 4 }]\r\n\r\n\r\n    //修正か削除かを管理するステイト\r\n    const [EorDCheckbox, setEorDCheckbox] = useState(true)\r\n\r\n    //背番号を格納する配列\r\n    const [uniformNumberArray, setUniformNumberArray] = useState([null]);\r\n\r\n    //クリック時メンバー選択\r\n    const handleSelected = (ind) => {\r\n        console.log(selectedMember[ind])\r\n        if (cntSelectedMemberNum(selectedMember) >= 20 && selectedMember[ind] === false) { }\r\n        else {\r\n            copyArray = selectedMember.slice(0, selectedMember.length); // stateの配列をコピー(値渡し)\r\n            copyArray[ind] = !copyArray[ind]\r\n            setSelectedMember(copyArray)\r\n        }\r\n    }\r\n\r\n    const [copyMember, setCopyMember] = useState(Member)\r\n\r\n    const initialSetIning = () => {\r\n        for (let i = 1; i <= 3; i++) {\r\n            const option = document.createElement('option')\r\n            option.value = i\r\n            option.text = i\r\n            iningRef.current.appendChild(option)\r\n        }\r\n    }\r\n\r\n    const initialSetNumber = () => {\r\n        for (let i = 1; i <= 50; i++) {\r\n            const option = document.createElement('option')\r\n            option.value = i;\r\n            option.text = i;\r\n            numberRef.current.appendChild(option)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        initialSetIning();\r\n        initialSetNumber();\r\n        //明日のメモ\r\n        //選手を追加すると、ロードしなおすため背番号が消えてしまう。\r\n        //だから、copymemberとは別の配列を用意してそこに記録する\r\n        //選手を追加する場合は下から出てくる\r\n        //あと選手の送信も訂正すること\r\n        lordRegisteredMember(urlTournamentId, urlSchoolId)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // 選手を読み込む\r\n        const handleLoadMember = async () => {\r\n            await console.log(\"rendering\")\r\n            await loadMember(\r\n                uniformNumberArray,\r\n                setUniformNumberArray,\r\n                urlTournamentId,\r\n                urlSchoolId,\r\n                setCopyMember,\r\n                selectedMember,\r\n                setSelectedMember,\r\n                true,\r\n                setRegisteredMembers\r\n            )\r\n        }\r\n\r\n        handleLoadMember()\r\n    }, [trigger])\r\n\r\n\r\n\r\n\r\n\r\n    const selectIning = (e) => {\r\n        setIningState(e.target.value)\r\n    }\r\n    const selectNumber = (e) => {\r\n        setNumberState(e.target.value)\r\n    }\r\n    const selectSchool = (e) => {\r\n        setSchoolState(e.target.value)\r\n    }\r\n    const handleHandedHit = (value) => {\r\n        setHandedHitState(value)\r\n    }\r\n    const handleHandedThrow = (value) => {\r\n        setHandedThrowState(value)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <TitleBar\r\n                TitleText={\"選手登録画面\"}\r\n                PageTransition={PageTransition}\r\n                valueUrl={-1}\r\n            />\r\n            <OptionButton />\r\n\r\n\r\n            <div className=\"IMtitle\">出場選手選択画面</div>\r\n            <div className=\"subject\">\r\n                <h3>{urlTournamentName}</h3>\r\n                <h4>編集中:{urlSchoolName}</h4>\r\n            </div>\r\n\r\n            <div className=\"toroku\">\r\n                <div className=\"MakeGame\">\r\n                    <div className=\"grade\">\r\n                        <div className=\"year\">学年<select ref={iningRef} value={iningState} onChange={selectIning} ></select></div>\r\n                        <div className=\"uniNum\">背番号<select ref={numberRef} value={numberState} onChange={selectNumber} ></select></div>\r\n                    </div>\r\n\r\n                    <div className=\"inputName\">\r\n\r\n                        氏（漢字）　　<input onChange={(e) => setNameKanji({ famiryName: e.target.value, firstName: nameKanji.firstName })} ></input>\r\n                        名（漢字）　　<input onChange={(e) => setNameKanji({ famiryName: nameKanji.famiryName, firstName: e.target.value })} ></input>\r\n\r\n\r\n                        <br />\r\n                        氏（ひらがな）<input\r\n                            value={nameHira.famiryName}\r\n                            onChange={\r\n                                (e) => {\r\n                                    setNameHira({ famiryName: e.target.value, firstName: nameHira.firstName })\r\n                                }\r\n                            }></input>\r\n                        名（ひらがな）<input\r\n                            // onChange={(e) => setNameHira({ famiryName: nameHira.famiryName, firstName: e.target.value })\r\n                            value={nameHira.firstName}\r\n                            onChange={\r\n                                (e) => {\r\n                                    setNameHira({ famiryName: nameHira.famiryName, firstName: e.target.value })\r\n                                }\r\n                            }></input>\r\n                    </div>\r\n\r\n                    <div className=\"selectDominant\">\r\n                        <div>{selectHitted(handedHitState, handleHandedHit)}</div>\r\n                        <div>{selectThrowed(handedThrowState, handleHandedThrow)}</div>\r\n                    </div>\r\n\r\n                    {/* チェックを入れる */}\r\n                    <br />\r\n                    {(!isHiragana(nameHira.famiryName) || !isHiragana(nameHira.firstName) ||\r\n                        !isEnpty([nameHira.famiryName, nameHira.firstName, nameKanji.famiryName, nameKanji.firstName])) &&\r\n                        <button\r\n                            className=\"addButton\"\r\n                            onClick={() => { }}\r\n                        >追加a</button>\r\n                    }\r\n\r\n                    {(isHiragana(nameHira.famiryName) && isHiragana(nameHira.firstName) &&\r\n                        nameHira.famiryName !== \"\" && nameHira.firstName !== \"\" &&\r\n                        nameKanji.famiryName !== \"\" && nameKanji.firstName !== \"\") &&\r\n                        <button\r\n                            className=\"addButton\"\r\n                            onClick={() => handleMembers(\r\n                                urlSchoolId,\r\n                                numberRef,\r\n                                iningRef,\r\n                                handedHitState,\r\n                                handedThrowState,\r\n                                copyMember,\r\n                                uniformNumberArray,\r\n                                setUniformNumberArray,\r\n                                nameKanji,\r\n                                nameHira,\r\n                                trigger,\r\n                                setTrigger\r\n                            )}\r\n                        >追加</button>\r\n                    }\r\n\r\n\r\n                    <div>{(!isHiragana(nameHira.famiryName) || !isHiragana(nameHira.firstName)) &&\r\n                        <>ひらがなを入力してください</>}\r\n                    </div>\r\n\r\n                    現在の選手選択数:{cntSelectedMemberNum(selectedMember)}<br />\r\n\r\n                    <button\r\n                        onClick={() => { setisEditMode(!isEditMode) }}\r\n                    >{isEditMode && \"大会編集中\"}{!isEditMode && \"大会編集モード\"}</button>\r\n\r\n                </div>\r\n            </div>\r\n            {!isEditMode &&\r\n                <>\r\n                    <div className=\"hyoji\">\r\n                        <div className=\"players\">\r\n                            {copyMember.map((member, ind) => {\r\n\r\n                                //漢字名前がない者は表示されない\r\n                                if (member.player_name_kanji !== null) {\r\n                                    return (\r\n\r\n\r\n                                        <div className=\"school\">\r\n                                            <button\r\n                                                onClick={() => handleSelected(ind)}\r\n                                                className={\"InputMember\" + selectedMember[ind]}\r\n                                            >\r\n                                                <div className=\"selectName\">\r\n                                                    <div> &nbsp;&nbsp;{member.grade}年</div><div className=\"playerName\">&nbsp;&nbsp;&nbsp;&nbsp;{member.player_name_kanji}（ {member.player_name_hira}）</div>\r\n                                                </div>\r\n                                                {/* &nbsp; 背番号{member.uniform_number}  */}\r\n                                                <div className=\"Dominant\">&nbsp; {member.handed_hit}打 &nbsp; {member.handed_throw}投 &nbsp; 背番号:{uniformNumberArray[ind]}</div>\r\n\r\n                                            </button>\r\n\r\n                                            <div className=\"selectdiv\">\r\n                                                背番号<br />\r\n                                                {makePulldownBN(ind, uniformNumberArray, setUniformNumberArray)}\r\n                                            </div>\r\n                                            <br /><br />\r\n                                        </div>\r\n\r\n                                    )\r\n                                }\r\n\r\n\r\n                            }\r\n\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"sendButtonArea\">\r\n                        <MemberPopup\r\n                            handleSousin={handleSousin}\r\n                            copyMember={copyMember}\r\n                            selectedMember={selectedMember}\r\n                            urlTournamentId={urlTournamentId}\r\n                            uniformNumberArray={uniformNumberArray}\r\n                            PageTransition={PageTransition}\r\n                            registeredMembers={registeredMembers}\r\n                        />\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            {isEditMode &&\r\n                <>\r\n                    <div className=\"hyoji\">\r\n                        <div className=\"players\">\r\n                            {copyMember.map((member, ind) => (\r\n                                <div className=\"school\">\r\n                                    <EditMemberPopup\r\n                                        member={member}\r\n                                        ind={ind}\r\n                                        selectedMember={selectedMember}\r\n                                        uniformNumberArray={uniformNumberArray}\r\n                                        EorDCheckbox={EorDCheckbox}\r\n                                        setEorDCheckbox={setEorDCheckbox}\r\n                                        editingMemberName={editingMemberName}\r\n                                        setEditingMemberName={setEditingMemberName}\r\n                                        selectHitted={selectHitted}\r\n                                        handedHitState={handedHitState}\r\n                                        handleHandedHit={handleHandedHit}\r\n                                        selectThrowed={selectThrowed}\r\n                                        handedThrowState={handedThrowState}\r\n                                        handleHandedThrow={handleHandedThrow}\r\n                                        makePulldown={makePulldown}\r\n                                        editGrade={editGrade}\r\n                                        setEditGrade={setEditGrade}\r\n                                        EditMember={EditMember}\r\n                                        gradeArray={gradeArray}\r\n                                        isEnpty={isEnpty}\r\n                                        isHiragana={isHiragana}\r\n                                        trigger={trigger}\r\n                                        setTrigger={setTrigger}\r\n                                    />\r\n                                    <br /><br />\r\n                                </div>\r\n\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputMember","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\Member2.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\PositionDB.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\Member.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\Position9DB.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\Score.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\TitleBar\\TitleBar.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\runnerCount.jsx",["1201"],[],"import './CSS/runnerCount.css'\r\n\r\nexport const runnerCount = (runnerCountState, setRunnerCountState) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"runnerCount\">\r\n                <div className='runner'>ランナー</div>\r\n                <span className='fa-stack fa-lg'>\r\n                    <i\r\n                        className={\"fa-solid fa-diamond fa-stack-2x diamond\" + runnerCountState[0]}\r\n                        onClick={() => setRunnerCountState([!runnerCountState[0], runnerCountState[1], runnerCountState[2]])}\r\n                    ></i>\r\n                    <span \r\n                        className='fa fa-stack-1x'\r\n                        onClick={() => setRunnerCountState([!runnerCountState[0], runnerCountState[1], runnerCountState[2]])}\r\n                    >3塁</span>\r\n                </span>\r\n\r\n                <span className='fa-stack fa-lg'>\r\n                    <i\r\n                        className={\"fa-solid fa-diamond fa-stack-2x diamond\" + runnerCountState[1]}\r\n                        onClick={() => setRunnerCountState([runnerCountState[0], !runnerCountState[1], !runnerCountState[2]])}\r\n                    ></i>\r\n                    <span \r\n                        className='fa fa-stack-1x'\r\n                        onClick={() => setRunnerCountState([runnerCountState[0], !runnerCountState[1], runnerCountState[2]])}\r\n                    >2塁</span>\r\n                </span>\r\n\r\n                <span className='fa-stack fa-lg'>\r\n                    <i\r\n                        className={\"fa-solid fa-diamond fa-stack-2x diamond\" + runnerCountState[2]}\r\n                        onClick={() => setRunnerCountState([runnerCountState[0], runnerCountState[1], !runnerCountState[2]])}\r\n                    ></i>\r\n                    <span \r\n                        className='fa fa-stack-1x'\r\n                        onClick={() => setRunnerCountState([runnerCountState[0], runnerCountState[1], !runnerCountState[2]])}\r\n                    >1塁</span>\r\n                </span>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n{/* <div>\r\n<div className=\"runnerCount\">\r\n<i\r\n        className={\"fa-solid fa-diamond diamond\" + runnerCountState[2]}\r\n        onClick={() => setRunnerCountState([runnerCountState[0], runnerCountState[1], !runnerCountState[2]])}\r\n    ></i>\r\n    <i\r\n        className={\"fa-solid fa-diamond diamond\" + runnerCountState[1]}\r\n        onClick={() => setRunnerCountState([runnerCountState[0], !runnerCountState[1], runnerCountState[2]])}\r\n    ></i>\r\n                    <i\r\n        className={\"fa-solid fa-diamond diamond\" + runnerCountState[0]}\r\n        onClick={() => setRunnerCountState([!runnerCountState[0], runnerCountState[1], runnerCountState[2]])}\r\n    ></i>\r\n\r\n</div>\r\n</div> */}","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreBoard.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\outCount.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\freeWrite.jsx",["1202"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\PullDown\\PullDownMember.js",["1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220"],[],"import './PullDown.css';\r\nconst { Position } = require(\"../../../../../../DB/Position\")\r\n\r\n\r\nexport const PullDownMember = (props) => {\r\n\r\n    console.log(props.dasekiAll)\r\n    console.log(props.registeredMember1)\r\n    console.log(props.battingOrder)\r\n    \r\n\r\n    return (\r\n        <div className=\"PullDown\">\r\n\r\n            <ul id=\"dropmenu\">\r\n                {/* 先行チーム */}\r\n                {props.nowIningState[1] === 0 &&\r\n                    <>\r\n                        <li className='cannotTouchLi'><a className='cannotTouchA' href=\"#\">打者</a></li>\r\n                        {console.log(props.nowPlayingMember)}\r\n                        <li><a href=\"#\">{props.battingOrder[props.nowPlayingMember[0].batter].player_name_kanji}</a>\r\n                            <ul>\r\n                                <li><a href=\"#\">{\"代打\"}</a>\r\n                                    <ul>\r\n                                        {props.registeredMember1.map((regiMember1, ind) => {\r\n\r\n                                            return (\r\n                                                <>\r\n                                                    <li\r\n                                                        onClick={() => {\r\n\r\n                                                            if (props.latestBatOrder.dasekiNum !== props.dasekiNum) {\r\n                                                                props.latestBatOrder.dasekiNum = props.dasekiNum\r\n                                                                props.latestBatOrder.order = props.battingOrder[props.nowPlayingMember[0].batter]\r\n                                                            }\r\n                                                            props.battingOrder[props.nowPlayingMember[0].batter] = props.registeredMember1[ind]\r\n                                                            props.setIsPinch(\r\n                                                                props.latestBatOrder.order.player_id + \"→\" +\r\n                                                                regiMember1.player_id\r\n                                                            )\r\n                                                            console.log(props.latestBatOrder.order.player_name_kanji + \"→\" +\r\n                                                                regiMember1.player_name_kanji)\r\n                                                        }}\r\n                                                    ><a href=\"#\">{regiMember1.player_name_kanji}</a></li>\r\n                                                </>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                </li>\r\n                                {props.battingOrder.map((battingOrder, ind) => {\r\n                                    return (\r\n                                        <>\r\n                                            <li onClick={() => {\r\n                                                props.nowPlayingMember[0].batter = ind\r\n                                                props.setNowPlayingMember(props.nowPlayingMember)\r\n                                            }}>\r\n                                                <a href=\"#\" >{battingOrder.player_name_kanji}</a>\r\n                                            </li>\r\n                                        </>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </li>\r\n                        <li className='cannotTouchLi'><a className='cannotTouchA' href=\"#\">投手</a></li>\r\n                        <li><a href=\"#\">{props.battingOrder2[props.nowPlayingMember[0].pitcher].player_name_kanji}</a>\r\n                            <ul>\r\n                                {props.registeredMember2.map((registeredMember2, ind) => {\r\n                                    return (\r\n                                        <>\r\n                                            <li\r\n                                                onClick={() => {\r\n                                                    props.battingOrder2[props.nowPlayingMember[0].pitcher] = props.registeredMember2[ind]\r\n                                                }}\r\n                                            ><a href=\"#\">{registeredMember2.player_name_kanji}</a></li>\r\n                                        </>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </li>\r\n                    </>\r\n                }\r\n\r\n                {props.nowIningState[1] === 1 &&\r\n                    <>\r\n                        {/* 後攻チーム */}\r\n                        <li className='cannotTouchLi'><a className='cannotTouchA' href=\"#\">打者</a></li>\r\n                        {console.log(props.nowPlayingMember)}\r\n                        <li><a href=\"#\">{props.battingOrder2[props.nowPlayingMember[1].batter].player_name_kanji}</a>\r\n                            <ul>\r\n\r\n                                <li><a href=\"#\">{\"打者交代\"}</a>\r\n                                    <ul>\r\n                                        {props.registeredMember2.map((regiMember2, ind) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <li\r\n                                                        onClick={() => {\r\n                                                            if (props.latestBatOrder.dasekiNum !== props.dasekiNum) {\r\n                                                                props.latestBatOrder.dasekiNum = props.dasekiNum\r\n                                                                props.latestBatOrder.order = props.battingOrder2[props.nowPlayingMember[1].batter]\r\n                                                            }\r\n                                                            props.battingOrder2[props.nowPlayingMember[1].batter] = props.registeredMember2[ind]\r\n                                                            props.setIsPinch(\r\n                                                                props.latestBatOrder.order.player_id + \"→\" +\r\n                                                                props.registeredMember2[ind].player_id\r\n                                                            )\r\n                                                        }}\r\n                                                    ><a href=\"#\">{regiMember2.player_name_kanji}</a></li>\r\n                                                </>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                </li>\r\n                                {props.battingOrder2.map((battingOrder2, ind) => {\r\n                                    return (\r\n                                        <>\r\n                                            <li onClick={() => {\r\n                                                props.nowPlayingMember[1].batter = ind\r\n                                                props.setNowPlayingMember(props.nowPlayingMember)\r\n                                            }}\r\n                                            ><a href=\"#\">{battingOrder2.player_name_kanji}</a></li>\r\n                                        </>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </li>\r\n                        <li className='cannotTouchLi'><a className='cannotTouchA' href=\"#\">投手</a></li>\r\n                        <li><a href=\"#\">{props.battingOrder[props.nowPlayingMember[1].pitcher].player_name_kanji}</a>\r\n                            <ul>\r\n                                {props.registeredMember1.map((registeredMember1, ind) => {\r\n                                    return (\r\n                                        <>\r\n                                            <li\r\n                                                onClick={() => {\r\n                                                    props.battingOrder[props.nowPlayingMember[1].pitcher] = props.registeredMember1[ind]\r\n                                                }}\r\n                                            ><a href=\"#\">{registeredMember1.player_name_kanji}</a></li>\r\n                                        </>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </li>\r\n                    </>\r\n                }\r\n\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PullDownMember;\r\n\r\n\r\n{/* <li className='cannotTouchLi'><a className='cannotTouchA' href=\"#\">打者</a></li>\r\n<li><a href=\"#\">{props.battingOrder[0][props.battingOrder[1]].player_name_kanji}</a>\r\n    <ul>\r\n        {props.battingOrder[0].map((battingOrder) => {\r\n            return (\r\n                <>\r\n                    <li><a href=\"#\">{battingOrder.player_name_kanji}</a></li>\r\n                </>\r\n            )\r\n        })}\r\n    </ul>\r\n</li>\r\n<li className='cannotTouchLi'><a className='cannotTouchA' href=\"#\">投手</a></li>\r\n<li><a href=\"#\">投手側</a>\r\n    <ul>\r\n        <li><a href=\"#\">ヒット</a></li>\r\n        <li><a href=\"#\">アウト</a></li>\r\n        <li><a href=\"#\">エラー</a></li>\r\n        <li><a href=\"#\">ホームラン</a></li>\r\n        <li><a href=\"#\">バント</a></li>\r\n    </ul>\r\n</li> */}\r\n","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\baseballButton.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\PullDown\\PullDown.js",["1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267"],[],"import './PullDown.css';\nconst { Position } = require(\"../../../../../../DB/Position\")\nconst { ballPositionDB } = require(\"../../../../../../DB/ballPositionDB\")\n\n\nexport const PullDown = (props) => {\n\n\n  const setPosition = (text) => {\n    props.setNowPosition(text)\n  }\n\n  //ヒット時の結果\n  const setHit = (value) => {\n    //座標指定\n    props.setFlag(4)\n    props.setcanvasX1(ballPositionDB[props.nowPosition - 1].ballPositionX)\n    props.setcanvasY1(ballPositionDB[props.nowPosition - 1].ballPositionY)\n\n    //打率計算のための記録\n    props.setBatterResult(1)\n\n    //タイムリーかどうか\n    let isTimelyText = \"\";\n    if (props.addScoreState !== 0) isTimelyText = \"タイムリー\"\n\n    //自由記述\n    if (value === 1) { props.setFreeWriteState(isTimelyText + Position[props.nowPosition - 1].kata + \"安打\") }\n    else if (value === 2) { props.setFreeWriteState(isTimelyText + Position[props.nowPosition - 1].kata + \":ツーベースヒット\") }\n    else if (value === 3) { props.setFreeWriteState(isTimelyText + Position[props.nowPosition - 1].kata + \":スリーベースヒット\") }\n  }\n\n  //アウト時の結果\n  const handleOut = (value) => {\n    //座標指定\n    props.setFlag(value)\n    props.setcanvasX1(ballPositionDB[props.nowPosition - 1].ballPositionX)\n    props.setcanvasY1(ballPositionDB[props.nowPosition - 1].ballPositionY)\n\n    // //アウトカウント増やす\n    // props.setNowOutCountState(props.nowOutCountState + 1)\n\n    //打率計算のための記録\n    props.setBatterResult(0)\n\n    //自由記述\n    if (value === 1) { props.setFreeWriteState(\"アウト:\" + Position[props.nowPosition - 1].kata + \"ライナー\") }\n    else if (value === 2) { props.setFreeWriteState(\"アウト:\" + Position[props.nowPosition - 1].kata + \"フライ\") }\n    else if (value === 3) { props.setFreeWriteState(\"アウト:\" + Position[props.nowPosition - 1].kata + \"ゴロ\") }\n  }\n\n  //エラー時の結果\n  const handleError = (value) => {\n    //座標指定\n    props.setFlag(value)\n    props.setcanvasX1(ballPositionDB[props.nowPosition - 1].ballPositionX)\n    props.setcanvasY1(ballPositionDB[props.nowPosition - 1].ballPositionY)\n\n    //打率計算のための記録\n    props.setBatterResult(0)\n\n    //自由記述\n    if (value === 1) { props.setFreeWriteState(\"エラー:\" + Position[props.nowPosition - 1].kata + \"ライナー\") }\n    else if (value === 2) { props.setFreeWriteState(\"エラー:\" + Position[props.nowPosition - 1].kata + \"フライ\") }\n    else if (value === 3) { props.setFreeWriteState(\"エラー:\" + Position[props.nowPosition - 1].kata + \"ゴロ\") }\n  }\n\n  //ホームランの結果\n  const handleHomerun = (value) => {\n    //タイムリーかどうか\n    let isTimelyText = \"\";\n    if (props.addScoreState !== 0) isTimelyText = \"タイムリー\"\n\n    //座標指定\n    props.setFlag(2)\n    props.setcanvasX1(ballPositionDB[1 + value].ballPositionX)\n    props.setcanvasY1(0)\n\n    //打率計算のための記録\n    props.setBatterResult(1)\n\n    //自由記述と座標指定\n    if (value === 1) { \n      props.setFreeWriteState(isTimelyText + \"レフト側ホームラン\") \n      props.setcanvasX1(ballPositionDB.find((v)=> v.name === \"HR_left\").ballPositionX)\n      props.setcanvasY1(ballPositionDB.find((v)=> v.name === \"HR_left\").ballPositionY)\n    }\n    else if (value === 2) { \n      props.setFreeWriteState(isTimelyText + \"センター側ホームラン\") \n      props.setcanvasX1(ballPositionDB.find((v)=> v.name === \"HR_center\").ballPositionX)\n      props.setcanvasY1(ballPositionDB.find((v)=> v.name === \"HR_center\").ballPositionY)\n    }\n    else if (value === 3) { \n      props.setFreeWriteState(isTimelyText + \"ライト側ホームラン\") \n      props.setcanvasX1(ballPositionDB.find((v)=> v.name === \"HR_right\").ballPositionX)\n      props.setcanvasY1(ballPositionDB.find((v)=> v.name === \"HR_right\").ballPositionY)\n    }\n    else if (value === 4) {\n      props.setFlag(2)\n      props.setFreeWriteState(isTimelyText + Position[props.nowPosition - 1].kata + \"ランニングホームラン\")\n      props.setcanvasX1(ballPositionDB[props.nowPosition - 1].ballPositionX)\n      props.setcanvasY1(ballPositionDB[props.nowPosition - 1].ballPositionY)\n    }\n  }\n\n  //バントの結果\n  const handleBunt = (value) => {\n    //座標指定\n    props.setFlag(3)\n    props.setcanvasX1(0)\n    props.setcanvasY1(0)\n\n    //打率計算のための記録\n    props.setBatterResult(1)\n\n    //自由記述\n    if (value === 1) { props.setFreeWriteState(\"犠牲バント\") }\n    else if (value === 2) { props.setFreeWriteState(\"アウト：バント\") }\n    else if (value === 3) { props.setFreeWriteState(\"バント失敗\") }\n    else if (value === 4) { props.setFreeWriteState(\"セーフティバント\") }\n  }\n\n\n  //三振時の結果\n  const handleSanshin = (value) => {\n    //座標指定\n    props.setFlag(0)\n    props.setcanvasX1(0)\n    props.setcanvasY1(0)\n\n    //打率計算のための記録\n    props.setBatterResult(0)\n\n    //自由記述\n    if (value === 1) { props.setFreeWriteState(\"三振\") }\n    else if (value === 2) { props.setFreeWriteState(\"見逃し三振\") }\n    else if (value === 3) { props.setFreeWriteState(\"空振り三振\") }\n    else if (value === 4) { props.setFreeWriteState(\"三振:振り逃げ\") }\n  }\n\n\n  //四死球の結果\n  const handleShishikyu = (value) => {\n    //座標指定\n    props.setFlag(0)\n    props.setcanvasX1(0)\n    props.setcanvasY1(0)\n\n    //自由記述\n    if (value === 1) { props.setFreeWriteState(\"フォアボール\"); props.setBatterResult(2) }\n    else if (value === 2) { props.setFreeWriteState(\"デッドボール\"); props.setBatterResult(3) }\n  }\n\n\n\n  return (\n    <div className=\"PullDown\">\n\n      <ul id=\"dropmenu\">\n\n        <li><a href=\"#\">{Position[props.nowPosition - 1].kata}</a>\n          <ul>\n            <li><a href=\"#\" onClick={() => setPosition(1)}>ピッチャー</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(2)}>キャッチャー</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(3)}>ファースト</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(4)}>セカンド</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(5)}>サード</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(6)}>ショート</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(7)}>レフト</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(8)}>センター</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(9)}>ライト</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(10)}>一二間</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(11)}>二遊間</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(12)}>三遊間</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(13)}>左中間</a></li>\n            <li><a href=\"#\" onClick={() => setPosition(14)}>右中間</a></li>\n\n          </ul>\n        </li>\n        <li><a href=\"#\">結果</a>\n          <ul>\n            <li><a href=\"#\">ヒット</a>\n              <ul>\n                <li><a href=\"#\" onClick={() => setHit(1)}>シングル</a></li>\n                <li><a href=\"#\" onClick={() => setHit(2)}>ツーベース</a></li>\n                <li><a href=\"#\" onClick={() => setHit(3)}>スリーベース</a></li>\n              </ul>\n            </li>\n            <li><a href=\"#\">アウト</a>\n              <ul>\n                <li><a href=\"#\" onClick={() => handleOut(3)}>ゴロ</a></li>\n                <li><a href=\"#\" onClick={() => handleOut(2)}>フライ</a></li>\n                <li><a href=\"#\" onClick={() => handleOut(1)}>ライナー</a></li>\n              </ul>\n            </li>\n            <li><a href=\"#\">エラー</a>\n              <ul>\n                <li><a href=\"#\" onClick={() => handleError(3)}>ゴロ</a></li>\n                <li><a href=\"#\" onClick={() => handleError(2)}>フライ</a></li>\n                <li><a href=\"#\" onClick={() => handleError(1)}>ライナー</a></li>\n              </ul>\n            </li>\n            <li><a href=\"#\">ホームラン</a>\n              <ul>\n                <li><a href=\"#\" onClick={() => handleHomerun(1)}>レフト側</a></li>\n                <li><a href=\"#\" onClick={() => handleHomerun(2)}>センター側</a></li>\n                <li><a href=\"#\" onClick={() => handleHomerun(3)}>ライト側</a></li>\n                <li><a href=\"#\" onClick={() => handleHomerun(4)}>ランニングホームラン</a></li>\n              </ul>\n            </li>\n            <li><a href=\"#\">バント</a>\n              <ul>\n                <li><a href=\"#\" onClick={() => handleBunt(1)}>犠牲バント</a></li>\n                <li><a href=\"#\" onClick={() => handleBunt(2)}>アウト:バント</a></li>\n                <li><a href=\"#\" onClick={() => handleBunt(3)}>バント失敗</a></li>\n                <li><a href=\"#\" onClick={() => handleBunt(4)}>セーフティバント</a></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li><a href=\"#\">結果2</a>\n          <ul>\n            <li><a href=\"#\">三振</a>\n              <ul>\n                {/* 三振 */}\n                <li><a href=\"#\" onClick={() => handleSanshin(1)}>三振</a></li>\n                <li><a href=\"#\" onClick={() => handleSanshin(2)}>見逃し三振</a></li>\n                <li><a href=\"#\" onClick={() => handleSanshin(3)}>空振り三振</a></li>\n                <li><a href=\"#\" onClick={() => handleSanshin(4)}>振り逃げ</a></li>\n              </ul>\n            </li>\n            {/* 四死球 */}\n            <li><a href=\"#\" onClick={() => handleShishikyu(1)}>四球</a></li>\n            <li><a href=\"#\" onClick={() => handleShishikyu(2)}>死球</a></li>\n            {/* 試合終了 */}\n            <props.GameEndPopup_field\n            TableRegister = {props.TableRegister}\n            urlGameId={props.urlGameId}\n            TmpTableDelete={props.TmpTableDelete}\n            DeleteDuringGame={props.DeleteDuringGame}\n            CalculateBatAvg={props.CalculateBatAvg}\n            schoolId1={props.schoolId1}\n            schoolId2={props.schoolId2}\n            />\n            {/* <li><a href=\"#\" onClick={() => handleGameEnd(props.GameEndPopup_field)}>試合終了</a></li> */}\n          </ul>\n        </li>\n      </ul>\n\n    </div>\n  );\n}\n\nexport default PullDown;\n\n{/* <ul>\n<li><a href=\"#\">シングル</a>\n  <Position></Position>\n</li>\n<li><a href=\"#\">ツーベース</a>\n  <Position></Position>\n</li>\n<li><a href=\"#\">スリーベース</a>\n  <Position></Position>\n</li>\n</ul> */}\n\n\n// const Position = () => {\n//   return (\n\n//     <>\n//       <ul>\n//         <li><a href=\"#\">ピッチャー</a></li>\n//         <li><a href=\"#\">キャッチャー</a></li>\n//         <li><a href=\"#\">ファースト</a></li>\n//         <li><a href=\"#\">セカンド</a></li>\n//         <li><a href=\"#\">ショート</a></li>\n//         <li><a href=\"#\">サード</a></li>\n//         <li><a href=\"#\">レフト</a></li>\n//         <li><a href=\"#\">センター</a></li>\n//         <li><a href=\"#\">ライト</a></li>\n//       </ul>\n//     </>\n//   )\n\n// }\n","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\optionFunc\\OptionButton.jsx",["1268","1269"],[],"import './OptionButton.css'\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../DB/communication\").backendUrl;\r\n\r\nexport const OptionButton = () => {\r\n\r\n    const logOut = () => {\r\n        fetch(backendUrl + \"/auth/check_sess\", {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => response.text())\r\n            .then((data) => { console.log(data) })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Options\">\r\n\r\n                <input type=\"checkbox\" id=\"check\"></input>\r\n                <label for=\"check\">\r\n                    <i class=\"fas fa-bars\" id=\"hambargerBtn\"></i>\r\n                    <i class=\"fas fa-times\" id=\"cancelBtn\"></i>\r\n                </label>\r\n\r\n\r\n                <div class=\"sidebar\">\r\n                    <div className=\"menuHeader\">menu</div>\r\n                    <ul>\r\n                        <li >\r\n                            <a href=\"#\"><i class=\"fas fa-qrcode\"></i>ダッシュボード</a>\r\n                        </li>\r\n                        <li onClick={logOut}>\r\n                            <a href=\"#\"><i class=\"fas fa-coffee\"></i>ログアウト</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <link\r\n                    rel=\"stylesheet\"\r\n                    href=\"https://use.fontawesome.com/releases/v5.15.4/css/all.css\"\r\n                    integrity=\"sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm\"\r\n                    crossorigin=\"anonymous\"\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OptionButton","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\optionFunc\\MenuBar.jsx",["1270","1271","1272","1273","1274","1275"],[],"import './OptionButton.css'\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../DB/communication\").backendUrl;\r\n\r\n//フロントエンドのurlを取得\r\nconst frontendUrl = require(\"../../../DB/communication\").routeUrl\r\n\r\n\r\n//ログアウトボタンを押したときに実行\r\nconst logOut = () => {\r\n    fetch(backendUrl + \"/auth/check_sess\", {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(data) })\r\n}\r\n\r\n\r\n//メニューバーの項目を作成する\r\nconst makeBarCom = (menu, PageTransition) => {\r\n\r\n    //受け取った情報を元にurlを作成する\r\n    const makeUrl = (com) => {\r\n        let madeUrl = -1\r\n\r\n        if (com.text === \"InputMember\") {\r\n            madeUrl =\r\n                \"/home/pre_input/input_tournament/inputschool/InputMember?\" +\r\n                \"urlTournamentId=\" + com.urlTournamentId + \"&urlTournamentName=\" + com.urlTournamentName +\r\n                \"&urlSchoolId=\" + com.urlSchoolId + \"&urlSchoolName=\" + com.urlSchoolName\r\n        }\r\n\r\n        if (com.text === \"InputSchool\") {\r\n            madeUrl =\r\n                \"/home/pre_input/input_tournament/inputschool?\" +\r\n                \"urlTournamentId=\" + com.urlTournamentId + \"&urlTournamentName=\" + com.urlTournamentName\r\n        }\r\n\r\n        return madeUrl\r\n    }\r\n\r\n    //選手登録画面に飛ぶ項目を作成\r\n    if (menu.text === \"InputMember\") {\r\n\r\n        const comInfo1 =\r\n        {\r\n            text: \"InputMember\",\r\n            urlTournamentId: menu.urlTournamentId,\r\n            urlTournamentName: menu.urlTournamentName,\r\n            urlSchoolId: menu.urlSchoolId,\r\n            urlSchoolName: menu.urlSchoolName\r\n        }\r\n\r\n        const comInfo2 =\r\n        {\r\n            text: \"InputMember\",\r\n            urlTournamentId: menu.urlTournamentId,\r\n            urlTournamentName: menu.urlTournamentName,\r\n            urlSchoolId: menu.urlSchoolId2,\r\n            urlSchoolName: menu.urlSchoolName2\r\n        }\r\n\r\n        const url1 = makeUrl(comInfo1)\r\n        const url2 = makeUrl(comInfo2)\r\n\r\n        return (\r\n            <>\r\n                <li onClick={() => { PageTransition(url1) }}>\r\n                    <a href=\"#\"><i class=\"fas fa-qrcode\"></i>選手登録（  {menu.urlSchoolName} ）</a>\r\n                </li>\r\n                <li onClick={() => { PageTransition(url2) }}>\r\n                    <a href=\"#\"><i class=\"fas fa-qrcode\"></i>選手登録（  {menu.urlSchoolName2} ）</a>\r\n                </li>\r\n            </>\r\n        )\r\n    }\r\n\r\n    //学校登録画面に飛ぶ項目を作成\r\n    else if (menu.text === \"InputSchool\") {\r\n\r\n        const comInfo1 =\r\n        {\r\n            text: \"InputSchool\",\r\n            urlTournamentId: menu.urlTournamentId,\r\n            urlTournamentName: menu.urlTournamentName\r\n        }\r\n\r\n        const url = makeUrl(comInfo1)\r\n\r\n        return (\r\n            <>\r\n                <li onClick={() => { PageTransition(url) }}>\r\n                    <a href=\"#\"><i class=\"fas fa-qrcode\"></i>チーム登録（  {menu.urlTournamentName} ）</a>\r\n                </li>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const MenuBar = (props) => {\r\n\r\n    //ページ遷移用\r\n    const navigate = useNavigate()\r\n    const PageTransition = (url) => {\r\n        navigate(url)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Options\">\r\n\r\n                <input type=\"checkbox\" id=\"check\"></input>\r\n                <label for=\"check\">\r\n                    <i class=\"fas fa-bars\" id=\"hambargerBtn\"></i>\r\n                    <i class=\"fas fa-times\" id=\"cancelBtn\"></i>\r\n                </label>\r\n\r\n\r\n                <div class=\"sidebar\">\r\n                    <div className=\"menuHeader\">menu</div>\r\n                    <ul>\r\n\r\n                        {props.menuArray.length !== undefined &&\r\n                            props.menuArray.map((menu) => (\r\n                                <>\r\n                                    {makeBarCom(menu, PageTransition)}\r\n                                </>\r\n                            ))\r\n                        }\r\n\r\n                        <li onClick={logOut}>\r\n                            <a href=\"#\"><i class=\"fas fa-coffee\"></i>ログアウト</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <link\r\n                    rel=\"stylesheet\"\r\n                    href=\"https://use.fontawesome.com/releases/v5.15.4/css/all.css\"\r\n                    integrity=\"sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm\"\r\n                    crossorigin=\"anonymous\"\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuBar","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoMakegamePage\\EditMakeGamePopup\\EditMakegamePopup.jsx",["1276"],[],"import React from \"react\";\r\nimport \"./EditMakeGamePopup.css\"\r\nimport isEnpty from \"../../../../../Functions/IsEnpty\";\r\n\r\n\r\n//メインのDOMの中で配置するサブ部品のような要素\r\nclass Popup extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"popup_field\">\r\n                <div className=\"popup_in_field4\">\r\n                    <div className=\"title\">{this.props.text}</div>\r\n                    <div className='editarea'>\r\n                        {/* 編集チェックボックス */}\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={this.props.EorDCheckbox}\r\n                            onClick={() => {\r\n                                this.props.setEorDCheckbox(true)\r\n                                //初期値を入れる\r\n                                // this.props.setEditingMemberName(this.props.member.player_name_kanji)\r\n                                console.log(this.props.editGrade)\r\n                            }}\r\n                        ></input>試合を編集する<br></br>\r\n\r\n                        変更前：{this.props.gameInfo.game_ymd}<br />\r\n                        変更後：\r\n                        年{this.props.makePulldown(0, this.props.YearList, \"year\", this.props.editingSelectedYmd, this.props.setEditingSelectedYmd)}\r\n                        月{this.props.makePulldown(1, this.props.MonthList, \"month\", this.props.editingSelectedYmd, this.props.setEditingSelectedYmd)}\r\n                        日{this.props.makePulldown(2, this.props.DayList, \"day\", this.props.editingSelectedYmd, this.props.setEditingSelectedYmd)}<br />\r\n\r\n                        回戦の変更<br />\r\n                        変更前：{this.props.gameInfo.match_num}<br />\r\n                        変更後：{this.props.makePulldown(0, this.props.iningList, \"ining\", this.props.editingSelected, this.props.setEditingSelected)}<br />\r\n\r\n                        先攻の高校を変更<br />\r\n                        変更前：{this.props.gameInfo.school_name_1}<br />\r\n                        変更後：{this.props.makePulldown(1, this.props.Schools, \"school_name\", this.props.editingSelected, this.props.setEditingSelected)}<br />\r\n\r\n                        後攻の高校を変更<br />\r\n                        変更前：{this.props.gameInfo.school_name_2}<br />\r\n                        変更後：{this.props.makePulldown(2, this.props.Schools, \"school_name\", this.props.editingSelected, this.props.setEditingSelected)}<br />\r\n\r\n                        会場を変更<br />\r\n                        変更前：{this.props.gameInfo.venue_name}<br />\r\n                        変更後：{this.props.makePulldown(3, this.props.Venues, \"venue_name\", this.props.editingSelected, this.props.setEditingSelected)}<br />\r\n\r\n\r\n                        {/* 削除チェックボックス */}\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={!this.props.EorDCheckbox}\r\n                            onClick={() => {\r\n                                this.props.setEorDCheckbox(false)\r\n                            }}\r\n                        ></input>試合を削除する\r\n                    </div>\r\n\r\n\r\n                    <div className='buttonarea3'>\r\n                        {/* いいえのボタン */}\r\n                        <button className=\"button_style_3\"\r\n                            onClick={() => {\r\n                                this.props.closePopup()\r\n                                this.props.setEorDCheckbox(true)\r\n                            }}>やめる</button>\r\n                        <nbsp></nbsp>\r\n\r\n                        {/* はいのボタン */}\r\n\r\n                        <button className=\"button_style_3\"\r\n                            onClick={async () => {\r\n\r\n                                // 編集モード\r\n                                if (this.props.EorDCheckbox) {\r\n\r\n                                    let sendInfo = {\r\n                                        game_id: this.props.gameInfo.game_id,\r\n                                        tournament_id: this.props.gameInfo.tournament_id,\r\n                                        school_id_1: this.props.Schools[this.props.editingSelected[1]].school_id,\r\n                                        school_id_2: this.props.Schools[this.props.editingSelected[2]].school_id,\r\n                                        venue_id: this.props.Venues[this.props.editingSelected[3]].venue_id,\r\n                                        match_num: this.props.iningList[this.props.editingSelected[0]].ining,\r\n                                        first_rear_1: this.props.gameInfo.first_rear_1,\r\n                                        first_rear_2: this.props.gameInfo.first_rear_2,\r\n                                        game_ymd: this.props.YearList[this.props.editingSelectedYmd[0]].year + \"-\" +\r\n                                            this.props.MonthList[this.props.editingSelectedYmd[1]].month + \"-\" +\r\n                                            this.props.DayList[this.props.editingSelectedYmd[2]].day,\r\n                                        match_results: this.props.gameInfo.match_results\r\n                                    }\r\n\r\n                                    if (!(this.props.isDuplicateA(this.props.editingSelected) ||\r\n                                        this.props.isDuplicateB(this.props.gameInfoState, sendInfo))\r\n                                    ) {\r\n                                        await this.props.EditGame(sendInfo)\r\n                                        await this.props.closePopup()\r\n                                        await this.props.loadGame(this.props.setGameInfoState, this.props.urlTournamentId)\r\n                                    }\r\n                                    else { console.log(\"編集できませんでした\") }\r\n                                }\r\n\r\n                                // 削除モード\r\n                                else {\r\n                                    let sendInfo = {\r\n                                        game_id: this.props.gameInfo.game_id,\r\n                                        tournament_id: this.props.gameInfo.tournament_id\r\n                                    }\r\n\r\n                                    await this.props.DeleteGame(sendInfo)\r\n                                    await this.props.loadGame(this.props.setGameInfoState, this.props.urlTournamentId)\r\n                                    await this.props.closePopup()\r\n                                }\r\n\r\n                                await this.props.loadGame(this.props.setGameInfoState, this.props.urlTournamentId)\r\n\r\n                            }}>決定\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//コンポーネントの内部に別のコンポーネントを持つことができる　ここではPopupというコンポ―ネントがある\r\nclass EditMakegamePopup extends React.Component {\r\n    //初期設定の要素をconstructorに記述する\r\n    //bind(this)をしないと呼び出し先のthisがundefinedになってしまう\r\n    constructor(props, context) {\r\n        super();\r\n        this.state = { showPopup: false };\r\n        this.togglePopup = this.togglePopup.bind(this);//重要\r\n    }\r\n    //togglePopupによってthis.state.showPopupの値を反転させる\r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup,\r\n        });\r\n    }\r\n    //renderの中に設置したいメインのDOM(部品）を記述していく\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* 表示項目 */}\r\n                <button\r\n                    onClick={() => {\r\n                        this.togglePopup()\r\n\r\n                    }}\r\n                >\r\n\r\n                    <div className=\"game\">\r\n                        <button className=\"btn_So_Make\"\r\n                            onClick={() => { }}>\r\n                            {this.props.gameInfo.match_num}回戦<br />\r\n                            {this.props.gameInfo.school_name_1}<br />\r\n                            {this.props.gameInfo.school_name_2}<br />\r\n                            {\r\n                                this.props.Venues.length !== 0 &&\r\n                                this.props.Venues.find((v) => v.venue_id === this.props.gameInfo.venue_id).venue_name\r\n                            }\r\n                        </button><br /><br />\r\n                    </div>\r\n\r\n                </button>\r\n\r\n                {/* this.state.PopupがtrueであればPopupウィンドウを開く */}\r\n                {this.state.showPopup ? (\r\n                    <Popup text=\"確認画面\" closePopup={this.togglePopup}\r\n                        gameInfo={this.props.gameInfo}\r\n                        ind={this.props.ind}\r\n                        EorDCheckbox={this.props.EorDCheckbox}\r\n                        setEorDCheckbox={this.props.setEorDCheckbox}\r\n                        makePulldown={this.props.makePulldown}\r\n                        iningList={this.props.iningList}\r\n                        Schools={this.props.Schools}\r\n                        Venues={this.props.Venues}\r\n                        YearList={this.props.YearList}\r\n                        MonthList={this.props.MonthList}\r\n                        DayList={this.props.DayList}\r\n                        editingSelected={this.props.editingSelected}\r\n                        setEditingSelected={this.props.setEditingSelected}\r\n                        editingSelectedYmd={this.props.editingSelectedYmd}\r\n                        setEditingSelectedYmd={this.props.setEditingSelectedYmd}\r\n                        EditGame={this.props.EditGame}\r\n                        DeleteGame={this.props.DeleteGame}\r\n                        loadGame={this.props.loadGame}\r\n                        gameInfoState={this.props.gameInfoState}\r\n                        setGameInfoState={this.props.setGameInfoState}\r\n                        urlTournamentId={this.props.urlTournamentId}\r\n                        isDuplicateA={this.props.isDuplicateA}\r\n                        isDuplicateB={this.props.isDuplicateB}\r\n                    />\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//配置する部品の決まり文句\r\nexport default EditMakegamePopup;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\Hyoji.jsx",["1277"],[],"import React from \"react\";\r\n\r\nexport const Hyoji = (UseSchools, navigate, urlTournamentName, urlTournamentId, isEditMode, EditSchoolPopup,\r\n    EorDCheckbox,setEorDCheckbox, EditSchool, DeleteSchool, readSchool, setUseSchools,\r\n    editingSchoolName, setEditingSchoolName\r\n    ) => {\r\n\r\n    const PageTransition = (url) => {\r\n        navigate(url)\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"Schools\">\r\n                {UseSchools.map(school => {\r\n                    if (school.school_name !== null) {\r\n                        if (school.IsCheck) {\r\n                            return (\r\n                                <div className=\"school\">\r\n                                    {!isEditMode &&\r\n                                        <>\r\n                                            <br />\r\n                                            <button\r\n                                                onClick={() => {\r\n                                                    PageTransition(\"InputMember\" +\r\n                                                        \"?urlTournamentId=\" + urlTournamentId + \"&urlTournamentName=\" + urlTournamentName +\r\n                                                        \"&urlSchoolId=\" + school.school_id + \"&urlSchoolName=\" + school.school_name);\r\n                                                }} className=\"schoolBtn\">\r\n                                                {school.school_name}\r\n                                            </button>\r\n                                            <br />\r\n                                        </>\r\n                                    }\r\n                                    {isEditMode &&\r\n                                        <>\r\n                                            <EditSchoolPopup\r\n                                                school={school}\r\n                                                EorDCheckbox={EorDCheckbox}\r\n                                                setEorDCheckbox={setEorDCheckbox}\r\n                                                EditSchool={EditSchool}\r\n                                                DeleteSchool={DeleteSchool}\r\n                                                readSchool={readSchool}\r\n                                                setUseSchools={setUseSchools}\r\n                                                urlTournamentId={urlTournamentId}\r\n                                                editingSchoolName={editingSchoolName}\r\n                                                setEditingSchoolName={setEditingSchoolName}\r\n                                            />\r\n                                        </>\r\n                                    }\r\n\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n                })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Hyoji;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreCorrection\\EditPoint.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\onisi_popup\\onisi_popup.jsx",["1278","1279"],[],"import React from \"react\";\nimport './onisi_popup.css'\n\nconst change0and1 = (value) => {\n  if (value === 0) value = 1\n  else value = 0\n  return value\n}\n\nconst handleKakutei = (\n\n  closePopup,\n  nowIningState,\n  setNowIningState,\n  addScoreState,\n  setAddScoreState,\n  scoreState,\n  setScoreState,\n  nowOutCountState,\n  setNowOutCountState,\n  DasekiRegister,\n  urlGameId,\n  urlSchoolId,\n  urlSchoolId2,\n  nowPlayingMember,\n  setNowPlayingMember,\n  battingOrder,\n  battingOrder2,\n  runnerCountState,\n  freeWriteState,\n  setFreeWriteState,\n  canvasX1,\n  setcanvasX1,\n  canvasY1,\n  setcanvasY1,\n  flag,\n  batterResult,\n  setBatterResult,\n  isPinch,\n  setIsPinch,\n  TmpDasekiCall,\n  trigger,\n  setTrigger,\n  isPass,\n  setIsPass\n\n) => {\n  //ポップアップを消す\n  closePopup()\n\n  //scoreの更新\n  scoreState = scoreState.slice(0, scoreState.length); // stateの配列をコピー(値渡し)\n  if (scoreState[nowIningState[1]][nowIningState[0]] === null) scoreState[nowIningState[1]][nowIningState[0]] = addScoreState\n  else scoreState[nowIningState[1]][nowIningState[0]] = addScoreState + scoreState[nowIningState[1]][nowIningState[0]]\n\n  //イニングの更新\n  if (nowOutCountState === 3) {\n    setNowOutCountState(0)\n    if (nowIningState[1] % 2 === 0) { setNowIningState([nowIningState[0], 1]) }\n    else if (nowIningState[1] % 2 === 1) { setNowIningState([nowIningState[0] + 1, 0]) }\n  }\n\n  //DBに送るための準備\n  const schoolIdArray = [urlSchoolId, urlSchoolId2]\n  const battingOrderArray = [battingOrder, battingOrder2]\n  let total_score = 0\n  scoreState[nowIningState[1]].map((score) => {\n    if (score !== null) total_score = total_score + score\n  })\n  let runnerCount = \"\"\n  runnerCountState.map((runner) => {\n    if (runner === true) runnerCount = runnerCount + \"1\"\n    else if (runner === false) runnerCount = runnerCount + \"0\"\n  })\n  let isHit = 0; let isFourball = 0; let isDeadball = 0;\n  if (batterResult === 0) { }\n  else if (batterResult === 1) isHit = 1\n  else if (batterResult === 2) isFourball = 1\n  else if (batterResult === 3) isDeadball = 1\n\n  //DBにデータを送る配列作成\n  let sendInfo = {\n    table_name: urlGameId,\n    inning: (nowIningState[0] + 1) * 10 + (nowIningState[1] + 1),\n    game_id: urlGameId,\n    school_id: schoolIdArray[nowIningState[1]],\n    player_id: battingOrderArray[nowIningState[1]][nowPlayingMember[nowIningState[1]].batter].player_id,\n    pitcher_id: battingOrderArray[change0and1(nowIningState[1])][nowPlayingMember[nowIningState[1]].pitcher].player_id,\n    score: addScoreState,\n    total_score: total_score,\n    outcount: nowOutCountState,\n    base: runnerCount,\n    text_inf: freeWriteState,\n    pass: isPass,\n    touched_coordinate: canvasX1 + \"_\" + canvasY1,\n    ball_kind: flag,\n    hit: isHit,\n    foreball: isFourball,\n    deadball: isDeadball,\n    pinch: isPinch,\n    batting_order: nowPlayingMember[nowIningState[1]].batter\n  }\n \n  console.log(sendInfo)\n  //実際に送信\n  DasekiRegister(sendInfo, trigger, setTrigger)\n\n  //値の初期化\n  setAddScoreState(0)\n  setFreeWriteState(\"\")\n  setcanvasX1(0)\n  setcanvasY1(0)\n  setBatterResult(0)\n  setIsPinch(null)\n  setIsPass(0)\n\n\n  //次のバッターへ\n  let copyArray = nowPlayingMember.slice(0, nowPlayingMember.length);\n  if (copyArray[nowIningState[1]].batter >= 8) copyArray[nowIningState[1]].batter = 0\n  else if (copyArray[nowIningState[1]].batter >= 0)\n    copyArray[nowIningState[1]].batter = copyArray[nowIningState[1]].batter + 1\n  setNowPlayingMember(copyArray)\n\n  //入力メモ\n  //12回裏は212\n\n}\n\n//メインのDOMの中で配置するサブ部品のような要素\nclass Popup extends React.Component {\n  render() {\n    return (\n      <div className=\"popup_field\">\n        <div className=\"popup_inner_field\">\n          <div className=\"title\">{this.props.text}</div>\n          <p>情報が更新されますがよろしいでしょうか？</p>\n          <button className=\"button_style\" onClick={this.props.closePopup}>いいえ</button>\n          <nbsp></nbsp>\n          {/* <button className=\"button_style\" onClick={this.props.closePopup}>はい</button> */}\n          <button\n            className=\"button_style\"\n            onClick={\n              () => handleKakutei(\n                this.props.closePopup,\n                this.props.nowIningState,\n                this.props.setNowIningState,\n                this.props.addScoreState,\n                this.props.setAddScoreState,\n                this.props.scoreState,\n                this.props.setScoreState,\n                this.props.nowOutCountState,\n                this.props.setNowOutCountState,\n                this.props.DasekiRegister,\n                this.props.urlGameId,\n                this.props.urlSchoolId,\n                this.props.urlSchoolId2,\n                this.props.nowPlayingMember,\n                this.props.setNowPlayingMember,\n                this.props.battingOrder,\n                this.props.battingOrder2,\n                this.props.runnerCountState,\n                this.props.freeWriteState,\n                this.props.setFreeWriteState,\n                this.props.canvasX1,\n                this.props.setcanvasX1,\n                this.props.canvasY1,\n                this.props.setcanvasY1,\n                this.props.flag,\n                this.props.batterResult,\n                this.props.setBatterResult,\n                this.props.isPinch,\n                this.props.setIsPinch,\n                this.props.TmpDasekiCall,\n                this.props.trigger,\n                this.props.setTrigger,\n                this.props.isPass,\n                this.props.setIsPass\n              )\n            }>はい\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n//コンポーネントの内部に別のコンポーネントを持つことができる　ここではPopupというコンポ―ネントがある\nclass Popupfield extends React.Component {\n  //初期設定の要素をconstructorに記述する\n  //bind(this)をしないと呼び出し先のthisがundefinedになってしまう\n  constructor(props, context) {\n    super();\n    this.state = { showPopup: false };\n    this.togglePopup = this.togglePopup.bind(this);//重要\n  }\n  //togglePopupによってthis.state.showPopupの値を反転させる\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup,\n    });\n  }\n  //renderの中に設置したいメインのDOM(部品）を記述していく\n  render() {\n    return (\n      <div>\n        {/* <h1>test</h1> */}\n        {/* <button onClick={this.togglePopup}>更新</button> */}\n        <i className=\"fa-solid fa-rotate-right updatebutton\" onClick={this.togglePopup}></i>\n        {/* this.state.PopupがtrueであればPopupウィンドウを開く */}\n        {this.state.showPopup ? (\n          <Popup\n            text=\"確認画面\"\n            closePopup={this.togglePopup}\n            nowIningState={this.props.nowIningState}\n            setNowIningState={this.props.setNowIningState}\n            addScoreState={this.props.addScoreState}\n            setAddScoreState={this.props.setAddScoreState}\n            scoreState={this.props.scoreState}\n            setScoreState={this.props.setScoreState}\n            nowOutCountState={this.props.nowOutCountState}\n            setNowOutCountState={this.props.setNowOutCountState}\n            DasekiRegister={this.props.DasekiRegister}\n            urlGameId={this.props.urlGameId}\n            urlSchoolId={this.props.urlSchoolId}\n            urlSchoolId2={this.props.urlSchoolId2}\n            nowPlayingMember={this.props.nowPlayingMember}\n            setNowPlayingMember={this.props.setNowPlayingMember}\n            battingOrder={this.props.battingOrder}\n            battingOrder2={this.props.battingOrder2}\n            runnerCountState={this.props.runnerCountState}\n            freeWriteState={this.props.freeWriteState}\n            setFreeWriteState={this.props.setFreeWriteState}\n            canvasX1={this.props.canvasX1}\n            setcanvasX1={this.props.setcanvasX1}\n            canvasY1={this.props.canvasY1}\n            setcanvasY1={this.props.setcanvasY1}\n            flag={this.props.flag}\n            batterResult={this.props.batterResult}\n            setBatterResult={this.props.setBatterResult}\n            isPinch={this.props.isPinch}\n            setIsPinch={this.props.setIsPinch}\n            TmpDasekiCall={this.props.TmpDasekiCall}\n            trigger={this.props.trigger}\n            setTrigger={this.props.setTrigger}\n            isPass={this.props.isPass}\n            setIsPass={this.props.setIsPass}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\n//配置する部品の決まり文句\nexport default Popupfield;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\GameEndPopup\\GameEndPopup.jsx",["1280"],[],"import React from \"react\";\n\n//バックエンドのurlを取得\nconst backendUrl = require(\"../../../../../../DB/communication\").backendUrl;\n\nconst gameSets = async (gameId, schoolId1, schoolId2) => {\n  const funcGL = await fetch(backendUrl + \"/game/game_sets\", {\n    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\n    body: JSON.stringify({ game_id: gameId, school_id_1: schoolId1, school_id_2: schoolId2 }),\n  })\n  const resultValue = await funcGL.text()\n  await console.log(\"gameSets=\" + resultValue)\n}\n\n//メインのDOMの中で配置するサブ部品のような要素\nclass GameEndPopup extends React.Component {\n  render() {\n    return (\n      <div className=\"popup_field\">\n        <div className=\"popup_inner_field\">\n          <div className=\"title\">{this.props.text}</div>\n          <p>試合を終了し、情報を登録しますがよろしいでしょうか？</p>\n          <button className=\"button_style\" onClick={this.props.closePopup}>いいえ</button>\n          <nbsp></nbsp>\n          <button className=\"button_style\"\n            onClick={() => {\n\n              gameSets(parseInt(this.props.urlGameId), parseInt(this.props.schoolId1), parseInt(this.props.schoolId2))\n\n              this.props.closePopup()\n              this.props.TableRegister(parseInt(this.props.urlGameId))\n              this.props.CalculateBatAvg(parseInt(this.props.urlGameId))\n              this.props.TmpTableDelete(parseInt(this.props.urlGameId))\n            }}>はい</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n//コンポーネントの内部に別のコンポーネントを持つことができる　ここではPopupというコンポ―ネントがある\nclass GameEndPopup_field extends React.Component {\n  //初期設定の要素をconstructorに記述する\n  //bind(this)をしないと呼び出し先のthisがundefinedになってしまう\n  constructor(props, context) {\n    super();\n    this.state = { showPopup: false };\n    this.togglePopup = this.togglePopup.bind(this);//重要\n  }\n  //togglePopupによってthis.state.showPopupの値を反転させる\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup,\n    });\n  }\n  //renderの中に設置したいメインのDOM(部品）を記述していく\n  render() {\n    return (\n      <>\n        <li><a href=\"#\" onClick={this.togglePopup}>試合終了</a></li>\n        {/* this.state.PopupがtrueであればPopupウィンドウを開く */}\n        {this.state.showPopup ? (\n          <GameEndPopup text=\"確認画面\"\n            closePopup={this.togglePopup}\n            TableRegister={this.props.TableRegister}\n            urlGameId={this.props.urlGameId}\n            TmpTableDelete={this.props.TmpTableDelete}\n            DeleteDuringGame={this.props.DeleteDuringGame}\n            CalculateBatAvg={this.props.CalculateBatAvg}\n            schoolId1={this.props.schoolId1}\n            schoolId2={this.props.schoolId2}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\n//配置する部品の決まり文句\nexport default GameEndPopup_field;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\CheckBoxList1.jsx",["1281","1282"],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\comCanvas\\Ground.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\comCanvas\\battedBall.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputSchoolPage\\comInputSchool\\EditSchoolPopup\\EditSchoolPopup.jsx",["1283"],[],"import React from \"react\";\r\nimport \"./EditSchoolPopup.css\";\r\n\r\n//送られた文字列がどれか空ならtrue\r\nconst isEnpty = (strArray) => {\r\n    let flag = false\r\n    strArray.map((str) => {\r\n        if (!str) {\r\n            flag = true\r\n        }\r\n    })\r\n    return flag\r\n}\r\n\r\n//メインのDOMの中で配置するサブ部品のような要素\r\nclass Popup extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"popup_field\">\r\n                <div className=\"popup_in_field2\">\r\n                    <div className=\"title\">{this.props.text}</div>\r\n\r\n                    {/* 編集チェックボックス */}\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.props.EorDCheckbox}\r\n                        onClick={() => {\r\n                            this.props.setEorDCheckbox(true)\r\n                            //初期値を入れる\r\n                            this.props.setEditingSchoolName(this.props.school.school_name)\r\n                        }}\r\n                    ></input>高校名を編集する<br></br>\r\n\r\n\r\n\r\n                    名前の変更<br></br>\r\n                    変更前：{this.props.school.school_name}<br></br>\r\n                    変更後：<input\r\n                        id=\"changeId\" value={this.props.editingTnmtName}\r\n                        onChange={(e) => { this.props.setEditingSchoolName(e.target.value) }}\r\n                    ></input><br></br><br></br>\r\n\r\n\r\n                    {/* 削除チェックボックス */}\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={!this.props.EorDCheckbox}\r\n                        onClick={() => {\r\n                            this.props.setEorDCheckbox(false)\r\n                            //警告をを入れる\r\n                            this.props.setEditingSchoolName(\"高校を削除します\")\r\n                        }}\r\n                    ></input>高校名を削除する<br></br>\r\n                    <div classNAme='buttonarea'>\r\n                        {/* いいえのボタン */}\r\n                        <button className=\"button_style_3\"\r\n                            onClick={() => {\r\n                                this.props.closePopup()\r\n                                this.props.setEorDCheckbox(true)\r\n                            }}>やめる</button>\r\n                        <nbsp></nbsp>\r\n\r\n\r\n                        {/* はいのボタン */}\r\n                        {!isEnpty([this.props.editingSchoolName]) &&\r\n                            <button className=\"button_style_3\"\r\n                                onClick={\r\n                                    () => {\r\n                                        if (this.props.EorDCheckbox) {\r\n                                            //編集を確定する\r\n                                            this.props.EditSchool(\r\n                                                this.props.school.school_id,\r\n                                                document.getElementById(\"changeId\").value,\r\n                                                this.props.setUseSchools,\r\n                                                this.props.urlTournamentId\r\n                                            )\r\n                                        }\r\n                                        else {\r\n                                            //高校を削除する\r\n                                            this.props.DeleteSchool(\r\n                                                this.props.school.school_id,\r\n                                                this.props.school.school_name,\r\n                                                this.props.setUseSchools,\r\n                                                this.props.urlTournamentId,\r\n                                            )\r\n                                        }\r\n\r\n                                        // 高校を読み込む\r\n                                        this.props.readSchool(this.props.setUseSchools, this.props.urlTournamentId)\r\n\r\n                                        // ポップアップを閉じる\r\n                                        this.props.closePopup()\r\n                                    }\r\n                                }>決定</button>\r\n                        }\r\n\r\n                        {isEnpty([this.props.editingSchoolName]) &&\r\n                            <button className=\"button_style_3\">決定\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//コンポーネントの内部に別のコンポーネントを持つことができる　ここではPopupというコンポ―ネントがある\r\nclass EditSchoolPopup extends React.Component {\r\n    //初期設定の要素をconstructorに記述する\r\n    //bind(this)をしないと呼び出し先のthisがundefinedになってしまう\r\n    constructor(props, context) {\r\n        super();\r\n        this.state = { showPopup: false };\r\n        this.togglePopup = this.togglePopup.bind(this);//重要\r\n    }\r\n    //togglePopupによってthis.state.showPopupの値を反転させる\r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup,\r\n        });\r\n    }\r\n    //renderの中に設置したいメインのDOM(部品）を記述していく\r\n    render() {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={() => {\r\n                        this.togglePopup()\r\n                    }}>{this.props.school.school_name}</button>\r\n\r\n                {/* this.state.PopupがtrueであればPopupウィンドウを開く */}\r\n                {this.state.showPopup ? (\r\n                    <Popup text=\"確認画面\"\r\n                        closePopup={this.togglePopup}\r\n                        school={this.props.school}\r\n                        EorDCheckbox={this.props.EorDCheckbox}\r\n                        setEorDCheckbox={this.props.setEorDCheckbox}\r\n                        EditSchool={this.props.EditSchool}\r\n                        DeleteSchool={this.props.DeleteSchool}\r\n                        readSchool={this.props.readSchool}\r\n                        setUseSchools={this.props.setUseSchools}\r\n                        urlTournamentId={this.props.urlTournamentId}\r\n                        editingSchoolName={this.props.editingSchoolName}\r\n                        setEditingSchoolName={this.props.setEditingSchoolName}\r\n                    />\r\n                ) : null}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n//配置する部品の決まり文句\r\nexport default EditSchoolPopup;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputTournamentPage\\com\\EditTournamentPopup\\EditTournamentPopup.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\EditMemberPopup\\EditMemberPopup.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\PreInput\\InputMemberPage\\functions\\MemberPopup\\MemberPopup.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\Position.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\DB\\ballPositionDB.js",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\Functions\\IsEnpty.js",["1284"],[],"\r\n//送られた文字列がどれか空ならtrue\r\nconst isEnpty = (strArray) => {\r\n    let flag = false\r\n    strArray.map((str) => {\r\n        if (!str) {\r\n            flag = true\r\n        }\r\n    })\r\n    return flag\r\n}\r\n\r\nexport default isEnpty","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\comSokuho\\scoreCorrection\\Outputpoint.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoGameStartPage\\SokuhoGameStartPage.jsx",["1285"],[],"import { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n\r\n//試合中の試合の情報を登録する\r\nconst RegisterDuringGame = async (urlGameId, useEffectFlag, setUseEffectFlag) => {\r\n    await fetch(backendUrl + \"/game/during_game_register\",\r\n        {\r\n            method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n            body: JSON.stringify({ game_id: urlGameId, tmp_table_name: String(urlGameId) }),\r\n        }\r\n    )\r\n        .then((response) => response.text())\r\n        .then((data) => { setUseEffectFlag(!useEffectFlag) })\r\n}\r\n\r\n//一時打席情報登録用のテーブル作成\r\nconst TmpTableCreate = async (urlGameId) => {\r\n\r\n    await fetch(backendUrl + \"/daseki/tmp_table_create\",\r\n        {\r\n            method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n            body: JSON.stringify({ table_name: urlGameId }),\r\n        }\r\n    )\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(data) })\r\n}\r\n\r\n//テーブル存在確認\r\nconst TmpTableCheck = (urlGameId, setIsExistTmpTable) => {\r\n\r\n    fetch(backendUrl + \"/daseki/tmp_table_check\",\r\n        {\r\n            method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n            body: JSON.stringify({ table_name: urlGameId }),\r\n        }\r\n    )\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n\r\n            //テーブルが存在しないとき\r\n            if (data === \"not exist\") {\r\n                setIsExistTmpTable(false)\r\n            }\r\n\r\n            //テーブルが存在するとき\r\n            else if (data === \"exist\") {\r\n                setIsExistTmpTable(true)\r\n                console.log(data)\r\n            }\r\n        })\r\n}\r\n\r\n//１つの試合の情報を受け取る\r\nconst CallAGame = (urlGameId, setIsMatchResult) => {\r\n    fetch(backendUrl + \"/game/a_game_call\",\r\n        {\r\n            method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n            body: JSON.stringify({ game_id: urlGameId }),\r\n        }\r\n    )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log(data[0])\r\n            if (data[0].match_results === null) { }\r\n            else if (data[0].match_results === \"NULL\") { }\r\n            else { setIsMatchResult(true) }\r\n        })\r\n}\r\n\r\n//試合中の試合の情報を参照する\r\nconst RefDuringGame = async (urlGameId, setIsDuringGame) => {\r\n    fetch(backendUrl + \"/game/ref_during_game\",\r\n        { method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", } }\r\n    )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            if (data.some((v) => String(v.game_id) === urlGameId)) {\r\n                setIsDuringGame(true)\r\n            }\r\n        })\r\n}\r\n\r\n\r\nconst SokuhoGameStartPage = () => {\r\n\r\n    //ページ遷移用\r\n    const navigate = useNavigate()\r\n    const PageTransition = (url) => {\r\n        navigate(url)\r\n    }\r\n\r\n    //urlから値を読み出す\r\n    const [searchParams] = useSearchParams();\r\n    const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n    const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n    const urlSchoolId = searchParams.get(\"urlSchoolId\")\r\n    const urlSchoolName = searchParams.get(\"urlSchoolName\")\r\n    const urlSchoolId2 = searchParams.get(\"urlSchoolId2\")\r\n    const urlSchoolName2 = searchParams.get(\"urlSchoolName2\")\r\n    const urlGameId = searchParams.get(\"urlGameId\")\r\n\r\n    const [isExistTmpTable, setIsExistTmpTable] = useState(false)\r\n    const [useEffectFlag, setUseEffectFlag] = useState(false)\r\n    const [isDuringGame, setIsDuringGame] = useState(false)\r\n    const [isMatchResult, setIsMatchResult] = useState(false)\r\n\r\n    useEffect(() => {\r\n        CallAGame(urlGameId, setIsMatchResult)\r\n        TmpTableCheck(urlGameId, setIsExistTmpTable)\r\n        RefDuringGame(urlGameId, setIsDuringGame)\r\n    }, [useEffectFlag])\r\n\r\n    if (isMatchResult) {\r\n        console.log(\"Pastに遷移します\")\r\n        PageTransition(\r\n            \"InputPastGame?urlTournamentId=\" +\r\n            urlTournamentId +\r\n            \"&urlTournamentName=\" +\r\n            urlTournamentName +\r\n            \"&urlSchoolId=\" +\r\n            urlSchoolId +\r\n            \"&urlSchoolName=\" +\r\n            urlSchoolName +\r\n            \"&urlSchoolId2=\" +\r\n            urlSchoolId2 +\r\n            \"&urlSchoolName2=\" +\r\n            urlSchoolName2 +\r\n            \"&urlGameId=\" +\r\n            urlGameId\r\n        )\r\n    }\r\n    else if (isExistTmpTable === false || isDuringGame === false) {\r\n        return (\r\n            <>\r\n                <button\r\n                    style={{ height: 100 + \"px\", width: 30 + \"%\", fontSize: 30 + \"px\" }}\r\n                    onClick={async () => {\r\n                        await TmpTableCreate(urlGameId)\r\n                        await RegisterDuringGame(urlGameId, useEffectFlag, setUseEffectFlag)\r\n                    }}\r\n                >試合を開始する\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    else {\r\n        console.log(\"Playに遷移します\")\r\n        PageTransition(\r\n            \"InputPlayGame?urlTournamentId=\" +\r\n            urlTournamentId +\r\n            \"&urlTournamentName=\" +\r\n            urlTournamentName +\r\n            \"&urlSchoolId=\" +\r\n            urlSchoolId +\r\n            \"&urlSchoolName=\" +\r\n            urlSchoolName +\r\n            \"&urlSchoolId2=\" +\r\n            urlSchoolId2 +\r\n            \"&urlSchoolName2=\" +\r\n            urlSchoolName2 +\r\n            \"&urlGameId=\" +\r\n            urlGameId\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n//配置する部品の決まり文句\r\nexport default SokuhoGameStartPage;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\RegisterVenue\\RegisterVenue.jsx",["1286","1287","1288","1289","1290"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { OptionButton } from '../optionFunc/OptionButton'\r\nimport { TitleBar } from \"../TitleBar/TitleBar\";\r\nimport EditVenuePopup from \"./com/EditVenuePopup/EditVenuePopup\";\r\n\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../DB/communication\").backendUrl;\r\n\r\n\r\n//送られた文字列がどれか空ならtrue\r\nconst isEnpty = (strArray) => {\r\n  let flag = false\r\n  strArray.map((str) => {\r\n    if (!str) {\r\n      flag = true\r\n    }\r\n  })\r\n  return flag\r\n}\r\n\r\n//送る文字列が被っていればtrue\r\nconst isDuplicate = (Array, key, id) => {\r\n  let flag = false\r\n  Array.map((u) => {\r\n    if (u[id] === key) {\r\n      flag = true\r\n    }\r\n  })\r\n  console.log(key)\r\n  return flag\r\n}\r\n\r\n//追加ボタン押したとき\r\nconst addVenue = (venueArray, setVenueArray, nowVenueName,) => {\r\n\r\n  //被りチェック\r\n  if (venueArray.some((v) => v.venue_name === nowVenueName)) {\r\n    console.log(\"名前被ってます\")\r\n  }\r\n  else if (nowVenueName === \"\") {\r\n    console.log(\"空白です\")\r\n  }\r\n  else {\r\n    console.log(nowVenueName + \"を登録します\")\r\n\r\n    fetch(backendUrl + \"/venue/venue_register\", {\r\n      method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n      body: JSON.stringify({ \"venue_name\": nowVenueName }),\r\n    })\r\n      .then(() => loadVenue(setVenueArray))\r\n  }\r\n}\r\n\r\nconst loadVenue = (setVenueArray) => {\r\n  fetch(backendUrl + \"/venue/venue_call\", {\r\n    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", }\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => { setVenueArray(data) })\r\n}\r\n\r\nconst editVenue = async (venueId, venueName) => {\r\n  const Fetch = fetch(backendUrl + \"/venue/venue_edit\", {\r\n    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", }\r\n    , body: JSON.stringify({ venue_id: venueId, venue_name: venueName }),\r\n  })\r\n  const FetchReturn = (await Fetch).text()\r\n}\r\n\r\nconst deleteVenue = async (venueId) => {\r\n  const Fetch = fetch(backendUrl + \"/venue/venue_edit\", {\r\n    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", }\r\n    , body: JSON.stringify({ venue_id: venueId }),\r\n  })\r\n  const FetchReturn = (await Fetch).text()\r\n}\r\n\r\n\r\n\r\nexport const RegisterVenue = () => {\r\n\r\n  //会場名を入力する時のステイト\r\n  const [nowVenueName, setNowVenueName] = useState(\"\")\r\n\r\n  //会場のリストを管理するステイト\r\n  const [venueArray, setVenueArray] = useState([])\r\n\r\n  //編集中の大会名を管理するステイト\r\n  const [editingVenueName, setEditingVenueName] = useState(\"\")\r\n\r\n  //編集するか削除するかのチェックボックスを管理するステイト,trueなら編集,falseなら削除\r\n  const [EorDcheckBox, setEorDcheckBox] = useState(true)\r\n\r\n  //ページ遷移用\r\n  const navigate = useNavigate()\r\n  const PageTransition = (url) => {\r\n    navigate(url)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    loadVenue(setVenueArray)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <TitleBar\r\n        TitleText={\"大会入力選択画面\"}\r\n        PageTransition={PageTransition}\r\n        valueUrl={-1}\r\n      />\r\n\r\n      <OptionButton />\r\n\r\n\r\n      <div class=\"headline\">会場追加</div>\r\n      <div class=\"whole1\">\r\n        会場名\r\n        <input type=\"text\" onChange={(e) => { setNowVenueName(e.target.value) }} />\r\n        <br />\r\n\r\n        {/* 追加ボタン */}\r\n        {isEnpty([nowVenueName]) &&\r\n          <button\r\n            class=\"btn_In_to\"\r\n            onClick={() => { }}>追加\r\n          </button>\r\n        }\r\n\r\n        {!isEnpty([nowVenueName]) &&\r\n          <button\r\n            class=\"btn_In_to\"\r\n            onClick={() => {\r\n              addVenue(venueArray, setVenueArray, nowVenueName)\r\n            }}>追加\r\n          </button>\r\n        }\r\n\r\n      </div>\r\n\r\n      <div class=\"headline\">会場編集</div>\r\n      <div class=\"whole\">\r\n        <div className=\"tournamentList\">\r\n          <div className=\"tournaments\">\r\n\r\n            {venueArray.map((Venue, ind) => {\r\n              if (Venue.length !== 0 && Venue.venue_name !== null) {\r\n                return (\r\n                  <>\r\n                    <EditVenuePopup\r\n                      sendClassName=\"btn_In_to1\"\r\n                      Venue={Venue}\r\n                      ind={ind}\r\n                      editVenue={editVenue}\r\n                      venueArray={venueArray}\r\n                      setVenueArray={setVenueArray}\r\n                      editingVenueName={editingVenueName}\r\n                      setEditingVenueName={setEditingVenueName}\r\n                      EorDcheckBox={EorDcheckBox}\r\n                      setEorDcheckBox={setEorDcheckBox}\r\n                      deleteVenue={deleteVenue}\r\n                      loadVenue={loadVenue}\r\n                      isDuplicate={isDuplicate}\r\n                    />\r\n\r\n                  </>\r\n                )\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterVenue;","C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\OtherPage\\RegisterVenue\\com\\EditVenuePopup\\EditVenuePopup.jsx",[],[],"C:\\Users\\morim\\Desktop\\my_folder\\school\\lesson\\ensyu\\code\\team-b-project-output\\team-b-project\\frontend\\src\\AllPage\\InputAll\\Sokuho\\SokuhoPlaygame\\InputPastGame.jsx",["1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311"],[],"import { scoreBoard } from './comSokuho/scoreBoard';\r\nimport { outCount } from './comSokuho/outCount'\r\nimport { runnerCount } from './comSokuho/runnerCount';\r\nimport { freeWrite } from './comSokuho/freeWrite'\r\nimport { BaseballButton } from './comSokuho/baseballButton'\r\nimport \"./comSokuho/CSS/scoreBoard.css\"\r\nimport { useEffect, useState } from 'react';\r\nimport Popupfield from \"./comSokuho/onisi_popup/onisi_popup\";\r\nimport GameEndPopup from \"./comSokuho/GameEndPopup/GameEndPopup\"\r\nimport EditPoint from \"./comSokuho/scoreCorrection/EditPoint\"\r\nimport OptionButton from '../../../OtherPage/optionFunc/OptionButton';\r\n\r\n//css\r\nimport \"./InputPlayGame.css\"\r\n\r\nimport { TitleBar } from '../../../OtherPage/TitleBar/TitleBar';\r\n\r\n//プルダウン\r\nimport { PullDown } from './comSokuho/PullDown/PullDown'\r\nimport { PullDownMember } from './comSokuho/PullDown/PullDownMember'\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\n\r\n//canvasの描画\r\nimport { Ground } from './comSokuho/comCanvas/Ground';\r\nimport { battedBall } from './comSokuho/comCanvas/battedBall';\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n\r\n\r\n\r\n//自作プルダウン　改造あり\r\nconst makePulldown = (pulldownId, ArrayList, idText, nowSelected, setNowSelected, urlSchoolName, urlSchoolName2,\r\n    dasekiAll, setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n    setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n    battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n) => {\r\n\r\n    console.log(dasekiAll)\r\n\r\n\r\n    //pulldownIdは0でいいです。\r\n    //ArrayListは表示したい要素を並べた配列です、普通の配列ではなく連想配列です。\r\n    //idテキストは連想配列の属性を書きます。\r\n    //nowSelectedは今プルダウンで何が選択されているかが入ります。初期値は[0]で、これは0番目の値が選択されている状態です。\r\n    //setNowSelectedはnowSelecedの値をuseStateの機能で上書きする関数です。setNowSelected(更新値)とすれば、nowSelectedに更新値が入ります。\r\n\r\n    return (\r\n        <>\r\n            <select className='editButton'\r\n                id=\"tekitouni\"\r\n                onChange={(e) => {\r\n                    //ステイトが変化すると再描画させるための文、これがないと再描画されない\r\n                    //なお、消すと再描画はされないが内部は変化する\r\n                    nowSelected = nowSelected.slice(0, nowSelected.length);\r\n                    nowSelected[pulldownId] = e.target.value\r\n                    setNowSelected(nowSelected)\r\n\r\n                    editBattersBox(dasekiAll[nowSelected], dasekiAll, nowSelected,\r\n                        setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n                        setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n                        battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n                    )\r\n                }\r\n                }>\r\n                {ArrayList.map((component, ind) => (\r\n                    <option value={ind}>\r\n                        {component[idText]}打席目：{component.inning % 10 === 1 && urlSchoolName}{component.inning % 10 === 2 && urlSchoolName2}\r\n                    </option>\r\n                ))\r\n                }\r\n            </select>\r\n        </>\r\n    )\r\n}\r\n\r\n//打席編集\r\nconst editBattersBox = (battersBox, battersBoxAll, nowSelected,\r\n    setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n    setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n    battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2) => {\r\n\r\n    console.log(battersBox)\r\n    let touchedCoordinate = battersBoxAll[nowSelected].touched_coordinate.split(\"_\")\r\n\r\n    let teamABatter = 0;\r\n    let teamBpitcher = 0;\r\n    let teamBBatter = 0;\r\n    let teamApitcher = 0;\r\n\r\n    //pinchを反映させる\r\n    battersBoxAll.map((v, indBB) => {\r\n        let playerId = []\r\n        if (v.pinch !== \"\" && v.pinch !== \"0\" && v.pinch !== null && v.pinch !== undefined) {\r\n\r\n            //pinchに値が入っており、かつ値が正常であると思われる場合\r\n            if (v.pinch.length > 3) {\r\n                //スライス\r\n                playerId = v.pinch.split(\"→\")\r\n\r\n                //表回\r\n                if (v.inning % 10 - 1 === 0) {\r\n                    //打順配列からplayerId[0]を探す\r\n                    battingOrder.map((u, indBB) => {\r\n                        if (u.player_id.toString() === playerId[0]) {\r\n                            //登録されているメンバーからplayerId[1]を探す\r\n                            registeredMember1.map((regiMember1) => {\r\n                                //あればその選手を打順配列に入れ替える\r\n                                if (regiMember1.player_id.toString() === playerId[1]) {\r\n                                    battingOrder[indBB] = regiMember1\r\n                                    setBattingOrder(battingOrder)\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n\r\n                //裏回\r\n                else if (v.inning % 10 - 1 === 1) {\r\n                    //打順配列からplayerId[0]を探す\r\n                    battingOrder2.map((u, indBB) => {\r\n                        if (u.player_id === playerId[0]) {\r\n                            //登録されているメンバーからplayerId[1]を探す\r\n                            registeredMember2.map((regiMember2) => {\r\n                                //あればその選手を打順配列に入れ替える\r\n                                if (regiMember2.player_id === playerId[1]) {\r\n                                    battingOrder2[indBB] = regiMember2\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n            //pinchに値が入っており、かつ内容がおかしい場合\r\n            else {\r\n                battersBoxAll[indBB].pinch = null\r\n                battersBoxAll[indBB].player_id = battersBoxAll[6].player_id\r\n            }\r\n        }\r\n    })\r\n\r\n    console.log(battersBoxAll)\r\n\r\n    const value = battersBoxAll[nowSelected].inning\r\n    for (let i = nowSelected; i >= 0; i--) {\r\n        if (value !== battersBoxAll[i].inning) {\r\n            teamBBatter = battersBoxAll[i].player_id\r\n            teamApitcher = battersBoxAll[i].pitcher_id\r\n            break\r\n        }\r\n    }\r\n\r\n    //画面に反映\r\n    setNowIningState([Math.floor(battersBox.inning / 10 - 1), battersBox.inning % 10 - 1])\r\n    setNowOutCountState(battersBox.outcount)\r\n    setRunnerCountState([battersBox.base / 100 >= 1, battersBox.base / 10 >= 1 && battersBox.base / 100 < 1, battersBox.base % 10 === 1])\r\n    setFreeWriteState(battersBox.text_inf)\r\n    setFlag(battersBox.ball_kind)\r\n    setcanvasX1(parseFloat(touchedCoordinate[0]))\r\n    setcanvasY1(parseFloat(touchedCoordinate[1]))\r\n    setAddScoreState(battersBox.score)\r\n\r\n    if (battersBox.inning % 10 === 1) {\r\n        let sendMember1 = [{\r\n            batter: battingOrder.findIndex((u) => u.player_id === battersBoxAll[nowSelected].player_id),\r\n            pitcher: battingOrder2.findIndex((u) => u.player_id === battersBoxAll[nowSelected].pitcher_id)\r\n        },\r\n        {\r\n            batter: teamBBatter,\r\n            pitcher: teamApitcher\r\n        }]\r\n\r\n        //値が入ってないときの処理\r\n        if (sendMember1[0].batter === -1) { sendMember1[0].batter = 0 }\r\n        if (sendMember1[0].pitcher === -1) { sendMember1[0].pitcher = 0 }\r\n        setNowPlayingMember(sendMember1)\r\n    }\r\n    else if (battersBox.inning % 10 === 2) {\r\n        let sendMember2 = [\r\n            {\r\n                batter: teamABatter,\r\n                pitcher: teamBpitcher\r\n            },\r\n            {\r\n                batter: battingOrder2.findIndex((u) => u.player_id === battersBoxAll[nowSelected].player_id),\r\n                pitcher: battingOrder.findIndex((u) => u.player_id === battersBoxAll[nowSelected].pitcher_id)\r\n            }\r\n        ]\r\n\r\n        //値が入ってないときの処理\r\n        if (sendMember2[1].batter === -1) { sendMember2[1].batter = 0 }\r\n        if (sendMember2[1].pitcher === -1) { sendMember2[1].pitcher = 0 }\r\n\r\n        setNowPlayingMember(sendMember2)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n//試合中の試合の情報を登録する\r\n// const RegisterDuringGame = async (urlGameId) => {\r\n//     await fetch(backendUrl + \"/game/during_game_register\", {\r\n//         method: \"POST\",\r\n//         mode: \"cors\",\r\n//         headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ game_id: urlGameId, tmp_table_name: String(urlGameId) }),\r\n//     })\r\n//         .then((response) => response.text())\r\n//         .then((data) => { console.log(data) })\r\n// }\r\n\r\n\r\n//試合中の試合の情報を削除する\r\nconst DeleteDuringGame = async (urlGameId) => {\r\n    await fetch(backendUrl + \"/game/during_game_delete\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(data) })\r\n}\r\n\r\n\r\n//一時打席情報登録用のテーブル作成\r\n// const TmpTableCreate = async (urlGameId) => {\r\n\r\n//     await fetch(backendUrl + \"/daseki/tmp_table_create\", {\r\n//         method: \"POST\",\r\n//         mode: \"cors\",\r\n//         headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ table_name: urlGameId }),\r\n//     })\r\n//         .then((response) => response.text())\r\n//         .then((data) => { console.log(data) })\r\n// }\r\n\r\n//テーブル存在確認\r\n// const TmpTableCheck = (urlGameId, setIsExistTmpTable, TransmissionDasekiCall, urlTournamentId, urlSchoolId, urlSchoolId2,\r\n//     setNowIningState, setScoreState, setNowOutCountState,\r\n//     setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2\r\n\r\n// ) => {\r\n\r\n//     fetch(backendUrl + \"/daseki/tmp_table_check\", {\r\n//         method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n//         body: JSON.stringify({ table_name: urlGameId }),\r\n//     })\r\n//         .then((response) => response.text())\r\n//         .then((data) => {\r\n\r\n//             //テーブルが存在しないとき\r\n//             if (data === \"not exist\") {\r\n//                 setIsExistTmpTable(false)\r\n//             }\r\n\r\n//             //テーブルが存在するとき\r\n//             else if (data === \"exist\") {\r\n//                 TransmissionDasekiCall(urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId,\r\n//                     setNowIningState, setScoreState, setNowOutCountState,\r\n//                     setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2\r\n//                 )\r\n//             }\r\n//         })\r\n// }\r\n\r\n////試合情報受け取り（速報用）\r\nconst TransmissionDasekiCall = (urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId,\r\n    setNowIningState, setScoreState, setNowOutCountState,\r\n    setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2) => {\r\n\r\n    //まず打席情報を受け取る\r\n    fetch(backendUrl + \"/daseki/daseki_transmission\",\r\n        {\r\n            method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n            body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log(data)\r\n            //反転させる\r\n            // data.reverse()\r\n            setDasekiAll(data)\r\n\r\n            //空っぽなら無視\r\n            if (data.length !== 0) {\r\n                let latestDasaki = data[data.length - 1]\r\n\r\n                if (latestDasaki.outcount === 3) {\r\n                    //アウトカウント取得\r\n                    setNowOutCountState(0)\r\n\r\n                    //イニング取得\r\n                    if (latestDasaki.inning % 10 === 1) {\r\n                        setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, 1])\r\n                    }\r\n                    else {\r\n                        setNowIningState([Math.floor(latestDasaki.inning / 10), 0])\r\n                    }\r\n\r\n                    //ランナー取得\r\n                    setRunnerCountState([false, false, false])\r\n\r\n                }\r\n\r\n                else {\r\n                    //アウトカウント取得\r\n                    setNowOutCountState(latestDasaki.outcount)\r\n\r\n                    //イニング取得\r\n                    setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, latestDasaki.inning % 10 - 1])\r\n\r\n                    //ランナー取得\r\n                    setRunnerCountState([latestDasaki.base[0] === \"1\", latestDasaki.base[1] === \"1\", latestDasaki.base[2] === \"1\"])\r\n                }\r\n\r\n\r\n                //スコア取得\r\n                //スコアの初期化\r\n                const InitialScore = [\r\n                    [null, null, null, null, null, null, null, null, null, null, null, null],\r\n                    [null, null, null, null, null, null, null, null, null, null, null, null]\r\n                ]\r\n\r\n                let sendScore = InitialScore\r\n                data.map((u) => {\r\n                    //null対策\r\n                    if (sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] === null) sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = 0\r\n                    //受け取ったスコアを配列に格納\r\n                    sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] + u.score\r\n                })\r\n                setScoreState(sendScore)\r\n\r\n\r\n                //今現在のプレイヤー取得\r\n                //まずは先行チームをフェッチ\r\n                fetch(backendUrl + \"/member/starting_member_call\", {\r\n                    method: \"POST\",\r\n                    mode: \"cors\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId }),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((TeamAdata) => {\r\n\r\n\r\n                        //後攻チームをフェッチ\r\n                        //打順を持ってくる\r\n                        fetch(backendUrl + \"/member/starting_member_call\", {\r\n                            method: \"POST\",\r\n                            mode: \"cors\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                            },\r\n                            body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId2 }),\r\n                        })\r\n                            .then((response) => response.json())\r\n                            .then(async (TeamBdata) => {\r\n\r\n                                //ここから選手登録の情報をつかって、代打の処理を行う\r\n                                //選手登録の情報を取得\r\n                                let loadRegistered = await { loadRegistered1: \"\", loadRegistered2: \"\" }\r\n                                const loadRegistered1 = await fetch(backendUrl + \"/member/tournament_member_call\", {\r\n                                    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n                                    body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n                                })\r\n                                loadRegistered.loadRegistered1 = await loadRegistered1.json()\r\n                                const loadRegistered2 = await fetch(backendUrl + \"/member/tournament_member_call\", {\r\n                                    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n                                    body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId2 }),\r\n                                })\r\n                                loadRegistered.loadRegistered2 = await loadRegistered2.json()\r\n\r\n                                let text = null\r\n                                let index = 0\r\n                                data.map((v) => {\r\n                                    if (v.pinch === null || v.pinch === \"0\") { }\r\n                                    else {\r\n                                        text = v.pinch.split(\"→\")\r\n\r\n                                        // 表のとき\r\n                                        if (v.inning % 10 - 1 === 0) {\r\n                                            index = TeamAdata.findIndex((u) => u.player_id === parseInt(text[0]))\r\n                                            TeamAdata[index] = loadRegistered.loadRegistered1.find((u) => u.player_id === parseInt(text[1]))\r\n                                        }\r\n                                        // 裏のとき\r\n                                        else {\r\n                                            index = TeamBdata.findIndex((u) => u.player_id === parseInt(text[0]))\r\n                                            TeamBdata[index] = loadRegistered.loadRegistered2.find((u) => u.player_id === parseInt(text[1]))\r\n                                        }\r\n                                    }\r\n                                })\r\n\r\n\r\n\r\n\r\n                                TeamAdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                                setBattingOrder(TeamAdata)\r\n\r\n                                TeamBdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                                setBattingOrder2(TeamBdata)\r\n\r\n                                let teamABatter = 0\r\n                                let teamApitcher = 0\r\n                                let teamBBatter = 0\r\n                                let teamBpitcher = 0\r\n\r\n                                //さっきの打席が先攻チームだった場合\r\n                                if (latestDasaki.inning % 10 - 1 === 0) {\r\n                                    teamABatter = TeamAdata.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n                                    teamBpitcher = TeamBdata.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n                                    for (let i = data.length - 1; i >= 0; i--) {\r\n                                        if (latestDasaki.inning !== data[i].inning) {\r\n                                            teamBBatter = TeamBdata.findIndex((u) => u.player_id === data[i].player_id)\r\n                                            teamApitcher = TeamAdata.findIndex((u) => u.player_id === data[i].pitcher_id)\r\n                                            break\r\n                                        }\r\n                                    }\r\n                                    if (latestDasaki.outcount !== 3) teamABatter++\r\n                                    //過去に後攻の打席がある場合\r\n                                    else if (data.some((v) => v.inning % 10 - 1 === 1)) teamBBatter++\r\n                                }\r\n\r\n                                //後攻\r\n                                else if (latestDasaki.inning % 10 - 1 === 1) {\r\n                                    for (let i = data.length - 1; i >= 0; i--) {\r\n                                        if (latestDasaki.inning !== data[i].inning) {\r\n                                            console.log(data[i])\r\n                                            teamABatter = TeamAdata.findIndex((u) => u.player_id === data[i].player_id)\r\n                                            teamBpitcher = TeamBdata.findIndex((u) => u.player_id === data[i].pitcher_id)\r\n                                            break\r\n                                        }\r\n                                    }\r\n                                    teamBBatter = TeamBdata.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n                                    teamApitcher = TeamAdata.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n                                    if (data[data.length - 1].outcount !== 3) teamBBatter++\r\n                                    else teamABatter++\r\n                                }\r\n\r\n                                //打順に存在しないか最初の打者であるとき、もしくは打順最後の打者であるとき\r\n                                if (teamABatter === 9 || teamABatter === -1) teamABatter = 0\r\n                                if (teamBpitcher === -1) teamBpitcher = 0\r\n                                if (teamBBatter === 9 || teamBBatter === -1) teamBBatter = 0\r\n                                if (teamApitcher === -1) teamApitcher = 0\r\n\r\n                                //最後に今現在プレイ中の選手を格納\r\n                                setNowPlayingMember(\r\n                                    [{\r\n                                        batter: teamABatter,\r\n                                        pitcher: teamBpitcher\r\n                                    },\r\n                                    {\r\n                                        batter: teamBBatter,\r\n                                        pitcher: teamApitcher\r\n                                    }]\r\n                                )\r\n                            })\r\n                    })\r\n            }\r\n\r\n            //打席情報に何も入ってないとき\r\n            if (data.length === 0) {\r\n                //最初のプレイヤー取得\r\n                //まずは先行チーム\r\n                fetch(backendUrl + \"/member/starting_member_call\", {\r\n                    method: \"POST\",\r\n                    mode: \"cors\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId }),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((TeamAdata) => {\r\n                        TeamAdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                        setBattingOrder(TeamAdata)\r\n\r\n                        //後攻チーム\r\n                        //打順を持ってくる\r\n                        fetch(backendUrl + \"/member/starting_member_call\", {\r\n                            method: \"POST\",\r\n                            mode: \"cors\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                            },\r\n                            body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId2 }),\r\n                        })\r\n                            .then((response) => response.json())\r\n                            .then((TeamBdata) => {\r\n                                TeamBdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                                setBattingOrder2(TeamBdata)\r\n\r\n                                let teamABatter = 0\r\n                                let teamBpitcher = TeamBdata.findIndex((v) => v.position === \"ピッチャー\")\r\n                                let teamBBatter = 0\r\n                                let teamApitcher = TeamAdata.findIndex((v) => v.position === \"ピッチャー\")\r\n\r\n                                //最後に今現在プレイ中の選手を格納\r\n                                setNowPlayingMember(\r\n                                    [{\r\n                                        batter: teamABatter,\r\n                                        pitcher: teamBpitcher\r\n                                    },\r\n                                    {\r\n                                        batter: teamBBatter,\r\n                                        pitcher: teamApitcher\r\n                                    }]\r\n                                )\r\n                            })\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\n\r\n//DBを介さない試合情報受け取り（速報用）\r\nconst loardNowDaseki = (setNowOutCountState, setNowIningState, setRunnerCountState, setScoreState,\r\n    setNowPlayingMember, setFreeWriteState,\r\n    dasekiAll, battingOrder, battingOrder2) => {\r\n\r\n    //空っぽなら無視\r\n    if (dasekiAll.length !== 0) {\r\n        let latestDasaki = dasekiAll[dasekiAll.length - 1]\r\n\r\n\r\n        //自由記述は空\r\n        setFreeWriteState(\"\")\r\n\r\n        if (latestDasaki.outcount === 3) {\r\n            //アウトカウント取得\r\n            setNowOutCountState(0)\r\n\r\n            //イニング取得\r\n            if (latestDasaki.inning % 10 === 1) {\r\n                setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, 1])\r\n            }\r\n            else {\r\n                setNowIningState([Math.floor(latestDasaki.inning / 10), 0])\r\n            }\r\n\r\n            //ランナー取得\r\n            setRunnerCountState([false, false, false])\r\n\r\n        }\r\n\r\n        else {\r\n            //アウトカウント取得\r\n            setNowOutCountState(latestDasaki.outcount)\r\n\r\n            //イニング取得\r\n            setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, latestDasaki.inning % 10 - 1])\r\n\r\n            //ランナー取得\r\n            setRunnerCountState([latestDasaki.base[0] === \"1\", latestDasaki.base[1] === \"1\", latestDasaki.base[2] === \"1\"])\r\n        }\r\n\r\n\r\n        //スコア取得\r\n        //スコアの初期化\r\n        const InitialScore = [\r\n            [null, null, null, null, null, null, null, null, null, null, null, null],\r\n            [null, null, null, null, null, null, null, null, null, null, null, null]\r\n        ]\r\n\r\n        let sendScore = InitialScore\r\n        dasekiAll.map((u) => {\r\n            //null対策\r\n            if (sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] === null) sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = 0\r\n            //受け取ったスコアを配列に格納\r\n            sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] + u.score\r\n        })\r\n        setScoreState(sendScore)\r\n\r\n\r\n\r\n        //今現在のプレイヤー取得\r\n        //まずは先行チーム\r\n        //後攻チーム\r\n        let teamABatter = 0\r\n        let teamApitcher = 0\r\n        let teamBBatter = 0\r\n        let teamBpitcher = 0\r\n\r\n        //先攻\r\n        if (latestDasaki.inning % 10 - 1 === 0) {\r\n            teamABatter = battingOrder.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n            teamBpitcher = battingOrder2.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n            for (let i = dasekiAll.length - 1; i >= 0; i--) {\r\n                if (latestDasaki.inning !== dasekiAll[i].inning) {\r\n                    teamBBatter = battingOrder2.findIndex((u) => u.player_id === dasekiAll[i].player_id)\r\n                    teamApitcher = battingOrder.findIndex((u) => u.player_id === dasekiAll[i].pitcher_id)\r\n                    break\r\n                }\r\n            }\r\n            if (dasekiAll[dasekiAll.length - 1].outcount !== 3) teamABatter++\r\n            else teamBBatter++\r\n        }\r\n        //後攻\r\n        else if (latestDasaki.inning % 10 - 1 === 1) {\r\n            for (let i = dasekiAll.length - 1; i >= 0; i--) {\r\n                if (latestDasaki.inning !== dasekiAll[i].inning) {\r\n                    console.log(dasekiAll[i])\r\n                    teamABatter = battingOrder.findIndex((u) => u.player_id === dasekiAll[i].player_id)\r\n                    teamBpitcher = battingOrder2.findIndex((u) => u.player_id === dasekiAll[i].pitcher_id)\r\n                    break\r\n                }\r\n            }\r\n            teamBBatter = battingOrder2.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n            teamApitcher = battingOrder.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n            if (dasekiAll[dasekiAll.length - 1].outcount !== 3) teamBBatter++\r\n            else teamABatter++\r\n        }\r\n\r\n        //打順に存在しないか最初の打者であるとき、もしくは打順最後の打者であるとき\r\n        if (teamABatter === 9 || teamABatter === -1) teamABatter = 0\r\n        if (teamBpitcher === -1) teamBpitcher = 0\r\n        if (teamBBatter === 9 || teamBBatter === -1) teamBBatter = 0\r\n        if (teamApitcher === -1) teamApitcher = 0\r\n\r\n        //最後に今現在プレイ中の選手を格納\r\n        setNowPlayingMember(\r\n            [{\r\n                batter: teamABatter,\r\n                pitcher: teamBpitcher\r\n            },\r\n            {\r\n                batter: teamBBatter,\r\n                pitcher: teamApitcher\r\n            }]\r\n        )\r\n    }\r\n}\r\n\r\n//一時打席情報を本打席テーブルに送る\r\nconst TableRegister = (urlGameId) => {\r\n\r\n    console.log(urlGameId + \"の試合情報を登録しました\")\r\n\r\n    fetch(backendUrl + \"/daseki/data_register\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(\"TableRegister=\" + data) })\r\n}\r\n\r\n//一時打席情報を削除\r\nconst TmpTableDelete = (urlGameId) => {\r\n\r\n    console.log(urlGameId + \"の試合情報を削除しました\")\r\n\r\n    fetch(backendUrl + \"/daseki/tmp_table_delete\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(\"TmpTableDelete=\" + data) })\r\n}\r\n\r\n//打率計算\r\nconst CalculateBatAvg = (urlGameId) => {\r\n\r\n    console.log(\"打率計算関数を呼び出しました\")\r\n\r\n    fetch(backendUrl + \"/member/cal_BA\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(\"CalculateBatAvg=\" + data) })\r\n}\r\n\r\n//一時打席情報登録用のテーブルに打席情報登録（UPSERTを使うかも）\r\nconst DasekiRegister = (sendInfo, trigger, setTrigger) => {\r\n\r\n    fetch(backendUrl + \"/daseki/daseki_register\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(sendInfo),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n            if (data === \"OK\") {\r\n                setTrigger(!trigger)\r\n            }\r\n        })\r\n}\r\n\r\n\r\n//選手登録された選手読み込む\r\nconst loadRegisteredMember = (setRegisteredMember, urlTournamentId, urlSchoolId) => {\r\n\r\n    fetch(backendUrl + \"/member/tournament_member_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", },\r\n        body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => { setRegisteredMember(data) })\r\n}\r\n\r\n\r\n//修正内容をバックエンドに送る\r\nconst sendEdit = (\r\n    urlGameId,\r\n    dasekiAll,\r\n    nowSelected,\r\n    nowIningState,\r\n    addScoreState,\r\n    scoreState,\r\n    nowOutCountState,\r\n    nowPlayingMember,\r\n    battingOrder,\r\n    battingOrder2,\r\n    runnerCountState,\r\n    freeWriteState,\r\n    canvasX1,\r\n    canvasY1,\r\n    flag,\r\n    batterResult,\r\n    isPinch,\r\n    trigger, \r\n    setTrigger\r\n) => {\r\n    console.log(dasekiAll[nowSelected])\r\n    //DBに送るための準備\r\n\r\n    let totalScore = 0\r\n    scoreState[nowIningState[1]].map((score) => {\r\n        totalScore = totalScore + score\r\n    })\r\n\r\n    let runnerCount = \"\"\r\n    runnerCountState.map((runner) => {\r\n        if (runner === true) runnerCount = \"1\" + runnerCount\r\n        else if (runner === false) runnerCount = \"0\" + runnerCount\r\n    })\r\n\r\n    let isHit = 0; let isFourball = 0; let isDeadball = 0;\r\n    if (batterResult === 0) { }\r\n    else if (batterResult === 1) isHit = 1\r\n    else if (batterResult === 2) isFourball = 1\r\n    else if (batterResult === 3) isDeadball = 1\r\n\r\n    //選手だけここで入れる\r\n    let order = []\r\n    if (nowIningState[1] === 0) {\r\n        order = {\r\n            player_id: battingOrder[nowPlayingMember[nowIningState[1]].batter].player_id,\r\n            pitcher_id: battingOrder2[nowPlayingMember[nowIningState[1]].pitcher].player_id\r\n        }\r\n    }\r\n    else if (nowIningState[1] === 1) {\r\n        order = {\r\n            player_id: battingOrder2[nowPlayingMember[nowIningState[1]].batter].player_id,\r\n            pitcher_id: battingOrder[nowPlayingMember[nowIningState[1]].pitcher].player_id\r\n        }\r\n    }\r\n\r\n    //DBにデータを送る\r\n    let sendInfo = {\r\n        table_name: urlGameId,\r\n        at_bat_id: dasekiAll[nowSelected].at_bat_id,\r\n        inning: (nowIningState[1] + 1) * 10 + (nowIningState[0] + 1),\r\n        game_id: urlGameId,\r\n        school_id: dasekiAll[nowSelected].school_id,\r\n        player_id: order.player_id,\r\n        pitcher_id: order.pitcher_id,\r\n        score: addScoreState,\r\n        total_score: totalScore,\r\n        outcount: nowOutCountState,\r\n        base: runnerCount,\r\n        text_inf: freeWriteState,\r\n        pass: 0,\r\n        touched_coordinate: canvasX1 + \"_\" + canvasY1,\r\n        ball_kind: flag,\r\n        hit: isHit,\r\n        foreball: isFourball,\r\n        deadball: isDeadball,\r\n        pinch: isPinch\r\n    }\r\n\r\n    console.log(sendInfo)\r\n\r\n    fetch(backendUrl + \"/daseki/registered_daseki_update\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", },\r\n        body: JSON.stringify(sendInfo),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n            console.log(data)\r\n            setTrigger(!trigger)\r\n        })\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst canvasSize = 1000;\r\nconst homebase = 400;\r\n\r\nconst InputPastGame = () => {\r\n\r\n    //ページ遷移用\r\n    const navigate = useNavigate()\r\n    const PageTransition = (url) => {\r\n        navigate(url)\r\n    }\r\n\r\n    //urlから値を読み出す\r\n    const [searchParams] = useSearchParams();\r\n    const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n    const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n    const urlSchoolId = searchParams.get(\"urlSchoolId\")\r\n    const urlSchoolName = searchParams.get(\"urlSchoolName\")\r\n    const urlSchoolId2 = searchParams.get(\"urlSchoolId2\")\r\n    const urlSchoolName2 = searchParams.get(\"urlSchoolName2\")\r\n    const urlGameId = searchParams.get(\"urlGameId\")\r\n\r\n    //試合の一時テーブルが存在するかどうかを管理するステイト\r\n    const [isExistTmpTable, setIsExistTmpTable] = useState(false)\r\n\r\n    //Score記録 左が裏表、右が回数 イニングとは逆\r\n    const { Score } = require(\"../../../../DB/Score\")\r\n    const [scoreState, setScoreState] = useState(Score)\r\n\r\n    //Scoreの加算値の監視\r\n    const [addScoreState, setAddScoreState] = useState(0)\r\n\r\n    //今のイニング 左が回、右が表裏\r\n    const [nowIningState, setNowIningState] = useState([0, 0])\r\n\r\n    //自由記述内容を監視\r\n    const [freeWriteState, setFreeWriteState] = useState(\"\")//いらんかも\r\n\r\n    //自由記述編集モードのフラグ\r\n    const [freeWriteModeFlag, setFreeWriteModeFlag] = useState(false)\r\n\r\n    //多分打球の種類だと思われる\r\n    const [flag, setFlag] = useState(2);\r\n\r\n    //打者の結果を記録する(0:何もなし, 1:ヒット,2:四球, 3:死球)\r\n    const [batterResult, setBatterResult] = useState(0)\r\n\r\n\r\n    //緑プルダウン用\r\n    const [nowPosition, setNowPosition] = useState(15)\r\n\r\n    //アウトカウント\r\n    const [nowOutCountState, setNowOutCountState] = useState(0)\r\n\r\n    //ランナーカウント\r\n    const [runnerCountState, setRunnerCountState] = useState([false, false, false])\r\n\r\n    //選手登録情報を読み込む\r\n    const [registeredMember1, setRegisteredMember1] = useState([])\r\n    const [registeredMember2, setRegisteredMember2] = useState([])\r\n\r\n    //打席一覧情報のステイト\r\n    const [dasekiAll, setDasekiAll] = useState([{\r\n        at_bat_id: 1, ball_kind: \"2\", base: \"000\",\r\n        deadball: 0, foreball: 0, game_id: 1,\r\n        hit: 0, inning: 11, outcount: 3,\r\n        pass: 0, pinch: null, pitcher_id: 21, player_id: 7,\r\n        school_id: 1, score: 0, text_inf: \"データなし\",\r\n        total_score: 0, touched_coordinate: \"400_450\"\r\n    }])\r\n\r\n    //打席一覧情報のプルダウンの選択状況を管理するステイト\r\n    const [nowSelected, setNowSelected] = useState([0])\r\n\r\n    //打順と打者のリスト\r\n    const [battingOrder, setBattingOrder] = useState([[{ player_name_kanji: '丹羽 長秀' }, { player_name_kanji: '柴田 勝家' }], 0])\r\n    const [battingOrder2, setBattingOrder2] = useState([{ player_name_kanji: '丹羽 長秀' }, { player_name_kanji: '柴田 勝家' }])\r\n\r\n    //今の打順と今のピッチャーが誰なのかを2チーム文記録する\r\n    const [nowPlayingMember, setNowPlayingMember] = useState([{ batter: 0, pitcher: 0 }, { batter: 0, pitcher: 0 }])\r\n\r\n    //代打フラグ 4→15,12→6\r\n    const [isPinch, setIsPinch] = useState(null)\r\n\r\n    //代打で変更される前の打順を記録するステイト\r\n    const [latestBatOrder, setLatestBatOrder] = useState({ dasekiNum: 0, order: [] })\r\n\r\n    //パスボタンのステイトを定義 0か1か\r\n    const [isPass, setIsPass] = useState(0)\r\n\r\n    //データを読み込みを行うトリガー\r\n    const [trigger, setTrigger] = useState(true)\r\n\r\n    //編集モードであるかどうかを監視するステイト\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n\r\n\r\n    //画面解像度取得\r\n    var sw = document.documentElement.clientWidth; // 画面の横幅\r\n    var sh = document.documentElement.clientHeight; // 画面の高さ\r\n\r\n    // contextを状態として持つ\r\n    const [context, setContext] = useState(null)\r\n\r\n    //打球を消すためのステイト\r\n    const [deleteball, setDeleteBall] = useState(false)\r\n\r\n    const [canvasX1, setcanvasX1] = useState(0)\r\n    const [canvasY1, setcanvasY1] = useState(0)\r\n    //一つのStateで管理しようぜ的な試み\r\n    //const [canvasXY, setCanvasXY] = useState({x:0, y:0})\r\n\r\n    // コンポーネントの初期化完了後コンポーネント状態にコンテキストを登録\r\n\r\n    const homebase = 520;\r\n    const h = 70;\r\n    const l = -110;\r\n    const w = 0.03 * homebase;  //ベースの幅\r\n    const margin = 10;    //ベース位置調整用\r\n\r\n    useEffect(() => {\r\n        const canvas = document.getElementById(\"canvas\")\r\n        const canvasContext = canvas.getContext(\"2d\")\r\n        setContext(canvasContext)\r\n\r\n\r\n\r\n        canvas.addEventListener(\"click\", e => {\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            // ブラウザ上での座標を求める\r\n            const viewX = e.clientX - rect.left,\r\n                viewY = e.clientY - rect.top;\r\n\r\n            // 表示サイズとキャンバスの実サイズの比率を求める\r\n            const scaleWidth = canvas.clientWidth / canvas.width,\r\n                scaleHeight = canvas.clientHeight / canvas.height;\r\n\r\n            // ブラウザ上でのクリック座標をキャンバス上に変換\r\n            const canvasX = Math.floor(viewX / scaleWidth),\r\n                canvasY = Math.floor(viewY / scaleHeight);\r\n\r\n            console.log(canvasX, canvasY);\r\n            setcanvasX1(canvasX);\r\n            setcanvasY1(canvasY);\r\n        });\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (context !== null) {\r\n            Ground(context);\r\n        }\r\n    }, [context])\r\n\r\n\r\n    // 状態にコンテキストが登録されたらそれに対して操作できる\r\n    useEffect(() => {\r\n        if (context !== null) {\r\n\r\n            //削除\r\n            context.clearRect(0, 0, canvasSize, canvasSize);\r\n\r\n            Ground(context);\r\n\r\n            //ベースの色\r\n            let baseColor2 = [];\r\n            for (let i = 0; i < 3; i++) {\r\n                if (runnerCountState[i]) {\r\n                    baseColor2[i] = \"blue\";\r\n                    console.log(baseColor2[i]);\r\n                }\r\n                else {\r\n                    baseColor2[i] = \"white\";\r\n                }\r\n            }\r\n\r\n\r\n            context.strokeStyle = \"black\";\r\n\r\n            //３塁ベース\r\n            context.fillStyle = baseColor2[0];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 3 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.lineWidth = 1;\r\n            context.stroke();\r\n\r\n            //2塁ベース\r\n            context.fillStyle = baseColor2[1];\r\n            context.beginPath();\r\n            context.moveTo(homebase + l, homebase / 2 - margin + h);\r\n            context.lineTo(homebase - w + l, homebase / 2 + w - margin + h);\r\n            context.lineTo(homebase + l, homebase / 2 + w * 2 - margin + h);\r\n            context.lineTo(homebase + w + l, homebase / 2 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            //1塁ベース\r\n            context.fillStyle = baseColor2[2];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 5 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            battedBall(context, canvasX1, canvasY1, flag);\r\n\r\n        }\r\n    }, [canvasX1, canvasY1, flag, runnerCountState])\r\n\r\n\r\n\r\n    //変更開始\r\n\r\n    const delball = () => {\r\n        setDeleteBall(!deleteball);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (context !== null) {\r\n\r\n            //削除\r\n            context.clearRect(0, 0, canvasSize, canvasSize);\r\n\r\n            Ground(context);\r\n\r\n            //ベースの色\r\n            let baseColor2 = [];\r\n            for (let i = 0; i < 3; i++) {\r\n                if (runnerCountState[i]) {\r\n                    baseColor2[i] = \"blue\";\r\n                    console.log(baseColor2[i]);\r\n                }\r\n                else {\r\n                    baseColor2[i] = \"white\";\r\n                }\r\n            }\r\n\r\n\r\n            context.strokeStyle = \"black\";\r\n\r\n            //３塁ベース\r\n            context.fillStyle = baseColor2[0];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 3 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.lineWidth = 1;\r\n            context.stroke();\r\n\r\n            //2塁ベース\r\n            context.fillStyle = baseColor2[1];\r\n            context.beginPath();\r\n            context.moveTo(homebase + l, homebase / 2 - margin + h);\r\n            context.lineTo(homebase - w + l, homebase / 2 + w - margin + h);\r\n            context.lineTo(homebase + l, homebase / 2 + w * 2 - margin + h);\r\n            context.lineTo(homebase + w + l, homebase / 2 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            //1塁ベース\r\n            context.fillStyle = baseColor2[2];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 5 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n        }\r\n    }, [deleteball])\r\n\r\n    //変更終了\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //データベースからデータをもらうために呼び出す\r\n        // setBatter(setBattingOrder, setBattingOrder2, urlSchoolId, urlSchoolId2, urlGameId, nowPlayingMember, setNowPlayingMember)\r\n\r\n        //チーム1の選手登録情報を読み出す\r\n        loadRegisteredMember(setRegisteredMember1, urlTournamentId, urlSchoolId)\r\n\r\n        //チーム2の選手登録情報を読み出す\r\n        loadRegisteredMember(setRegisteredMember2, urlTournamentId, urlSchoolId2)\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //テーブル存在確認\r\n        TransmissionDasekiCall(urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId,\r\n            setNowIningState, setScoreState, setNowOutCountState,\r\n            setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2\r\n        )\r\n    }, [trigger])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"InputPlayGame\">\r\n            <TitleBar\r\n                TitleText={\"過去速報修正画面\"}\r\n                PageTransition={PageTransition}\r\n                valueUrl={-2}\r\n            />\r\n\r\n            <OptionButton />\r\n\r\n            <div className=\"parts\">\r\n                {\r\n                    <>\r\n                        <div className=\"scoreBoard\">\r\n                            {scoreBoard(scoreState, nowIningState, urlSchoolName, urlSchoolName2)}\r\n                        </div>\r\n                        <div className=\"optionButtons\">\r\n                        </div>\r\n                        <div className=\"outCountsAndRunnerCounts\">\r\n                            <div className=\"passButton\">\r\n                                {isPass === 1 &&\r\n                                    <button className=\"passButtonFalse\" onClick={() => setIsPass(0)}>パスを解除</button>\r\n                                }\r\n                                {isPass === 0 &&\r\n                                    <button className='passButtonTrue' onClick={() => { setIsPass(1) }}>パス</button>\r\n                                }\r\n                            </div>\r\n                            <div className='outCount'>\r\n                                <div className=\"outCountDisplay\">o</div>\r\n                                {outCount(nowOutCountState, setNowOutCountState)}\r\n                            </div>\r\n                            {runnerCount(runnerCountState, setRunnerCountState)}\r\n                        </div>\r\n                        <div className=\"BatterAndPitcher\">\r\n\r\n                        </div>\r\n                        <div className=\"BatterPitcher\">\r\n                            {/* プルダウン1  選手を表示するためのプルダウン */}\r\n                            <PullDownMember\r\n                                battingOrder={battingOrder}\r\n                                battingOrder2={battingOrder2}\r\n                                setBattingOrder={setBattingOrder}\r\n                                setBattingOrder2={setBattingOrder2}\r\n                                registeredMember1={registeredMember1}\r\n                                registeredMember2={registeredMember2}\r\n                                nowIningState={nowIningState}\r\n                                nowPlayingMember={nowPlayingMember}\r\n                                setNowPlayingMember={setNowPlayingMember}\r\n                                setIsPinch={setIsPinch}\r\n                                latestBatOrder={latestBatOrder}\r\n                                setLatestBatOrder={setLatestBatOrder}\r\n                                dasekiAll={dasekiAll}\r\n                                dasekiNum={dasekiAll.length}\r\n                            />\r\n                        </div>\r\n                        <div className=\"freeWrite\">\r\n                            {freeWrite(freeWriteState, setFreeWriteState, freeWriteModeFlag, setFreeWriteModeFlag)}\r\n                        </div>\r\n\r\n                        {/* プルダウン2 */}\r\n                        <PullDown\r\n                            nowPosition={nowPosition}\r\n                            setNowPosition={setNowPosition}\r\n                            setcanvasX1={setcanvasX1}\r\n                            setcanvasY1={setcanvasY1}\r\n                            setFlag={setFlag}\r\n                            setFreeWriteState={setFreeWriteState}\r\n                            setBatterResult={setBatterResult}\r\n                            addScoreState={addScoreState}\r\n                            GameEndPopup_field={GameEndPopup}\r\n                            TableRegister={TableRegister}\r\n                            urlGameId={urlGameId}\r\n                            TmpTableDelete={TmpTableDelete}\r\n                            DeleteDuringGame={DeleteDuringGame}\r\n                            CalculateBatAvg={CalculateBatAvg}\r\n                            nowOutCountState={nowOutCountState}\r\n                            setNowOutCountState={setNowOutCountState}\r\n                            schoolId1={urlSchoolId}\r\n                            schoolId2={urlSchoolId2}\r\n                        />\r\n                    </>}\r\n\r\n                {/* キャンバスについて */}\r\n                <div className=\"diamond\">\r\n                    <canvas width=\"800\" height=\"610\" id=\"canvas\" className='diamondPng'></canvas>\r\n                </div>\r\n\r\n                <div className=\"Buttons\">\r\n                    <div className=\"baseballButtons\">\r\n                        {BaseballButton(addScoreState, setAddScoreState)}\r\n                    </div>\r\n                    {!isEditMode &&\r\n                        <>\r\n                            <div className=\"updateButton\">\r\n                                {/* ポップアップ*/}\r\n                                <Popupfield\r\n                                    nowIningState={nowIningState} //今が何回なのか\r\n                                    setNowIningState={setNowIningState} //今が何回なのかの変更関数\r\n                                    addScoreState={addScoreState}\r\n                                    setAddScoreState={setAddScoreState}\r\n                                    scoreState={scoreState}\r\n                                    setScoreState={setScoreState}\r\n                                    nowOutCountState={nowOutCountState}\r\n                                    setNowOutCountState={setNowOutCountState}\r\n                                    DasekiRegister={DasekiRegister}\r\n                                    urlGameId={urlGameId}\r\n                                    urlSchoolId={urlSchoolId}\r\n                                    urlSchoolId2={urlSchoolId2}\r\n                                    nowPlayingMember={nowPlayingMember}\r\n                                    setNowPlayingMember={setNowPlayingMember}\r\n                                    battingOrder={battingOrder}\r\n                                    battingOrder2={battingOrder2}\r\n                                    runnerCountState={runnerCountState}\r\n                                    freeWriteState={freeWriteState}\r\n                                    setFreeWriteState={setFreeWriteState}\r\n                                    canvasX1={canvasX1}\r\n                                    setcanvasX1={setcanvasX1}\r\n                                    canvasY1={canvasY1}\r\n                                    setcanvasY1={setcanvasY1}\r\n                                    flag={flag}\r\n                                    batterResult={batterResult}\r\n                                    setBatterResult={setBatterResult}\r\n                                    isPinch={isPinch}\r\n                                    setIsPinch={setIsPinch}\r\n                                    TransmissionDasekiCall={TransmissionDasekiCall}\r\n                                    trigger={trigger}\r\n                                    setTrigger={setTrigger}\r\n                                    isPass={isPass}\r\n                                    setIsPass={setIsPass}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    }\r\n\r\n                </div>\r\n\r\n                {isEditMode &&\r\n                    makePulldown(0, dasekiAll, \"at_bat_id\", nowSelected, setNowSelected, urlSchoolName, urlSchoolName2,\r\n                        dasekiAll, setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n                        setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n                        battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n                    )\r\n                }\r\n\r\n                {/* 修正モード */}\r\n                {!isEditMode &&\r\n                    <button className='editButton'\r\n                        onClick={() => {\r\n                            setIsEditMode(true);\r\n                            editBattersBox(dasekiAll[nowSelected], dasekiAll, nowSelected,\r\n                                setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n                                setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n                                battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n                            )\r\n                        }}>修正モード\r\n                    </button>\r\n                }\r\n                {isEditMode &&\r\n                    <button className='editButton'\r\n                        onClick={() => {\r\n                            setIsEditMode(false)\r\n                            loardNowDaseki(setNowOutCountState, setNowIningState, setRunnerCountState, setScoreState,\r\n                                setNowPlayingMember, setFreeWriteState,\r\n                                dasekiAll, battingOrder, battingOrder2)\r\n                            setNowSelected([0])\r\n                        }}>速報入力に戻る\r\n                    </button>\r\n                }\r\n\r\n\r\n                {isEditMode &&\r\n                    <button className='editButton'\r\n                        onClick={() =>\r\n                            sendEdit(\r\n                                urlGameId,\r\n                                dasekiAll,\r\n                                nowSelected,\r\n                                nowIningState,\r\n                                addScoreState,\r\n                                scoreState,\r\n                                nowOutCountState,\r\n                                nowPlayingMember,\r\n                                battingOrder,\r\n                                battingOrder2,\r\n                                runnerCountState,\r\n                                freeWriteState,\r\n                                canvasX1,\r\n                                canvasY1,\r\n                                flag,\r\n                                batterResult,\r\n                                isPinch,\r\n                                trigger, \r\n                                setTrigger\r\n                            )}\r\n                    >修正確定</button>\r\n                }\r\n                {<button className='editButton' onClick={() => delball()}>打球削除</button>}\r\n            </div>\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default InputPastGame",{"ruleId":"1312","severity":1,"message":"1313","line":26,"column":70,"nodeType":"1314","messageId":"1315","endLine":26,"endColumn":90},{"ruleId":"1312","severity":1,"message":"1316","line":31,"column":72,"nodeType":"1314","messageId":"1315","endLine":31,"endColumn":97},{"ruleId":"1312","severity":1,"message":"1317","line":42,"column":54,"nodeType":"1314","messageId":"1315","endLine":42,"endColumn":68},{"ruleId":"1312","severity":1,"message":"1316","line":43,"column":76,"nodeType":"1314","messageId":"1315","endLine":43,"endColumn":101},{"ruleId":"1312","severity":1,"message":"1318","line":44,"column":64,"nodeType":"1314","messageId":"1315","endLine":44,"endColumn":77},{"ruleId":"1312","severity":1,"message":"1313","line":45,"column":81,"nodeType":"1314","messageId":"1315","endLine":45,"endColumn":101},{"ruleId":"1319","severity":1,"message":"1320","line":1,"column":17,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":26},{"ruleId":"1319","severity":1,"message":"1323","line":2,"column":10,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":23},{"ruleId":"1319","severity":1,"message":"1324","line":2,"column":25,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":30},{"ruleId":"1319","severity":1,"message":"1325","line":2,"column":32,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":38},{"ruleId":"1319","severity":1,"message":"1320","line":1,"column":17,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":26},{"ruleId":"1319","severity":1,"message":"1323","line":2,"column":10,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":23},{"ruleId":"1319","severity":1,"message":"1324","line":2,"column":25,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":30},{"ruleId":"1319","severity":1,"message":"1325","line":2,"column":32,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":38},{"ruleId":"1319","severity":1,"message":"1326","line":80,"column":11,"nodeType":"1321","messageId":"1322","endLine":80,"endColumn":23},{"ruleId":"1319","severity":1,"message":"1327","line":133,"column":11,"nodeType":"1321","messageId":"1322","endLine":133,"endColumn":27},{"ruleId":"1328","severity":1,"message":"1329","line":291,"column":8,"nodeType":"1330","endLine":291,"endColumn":10,"suggestions":"1331"},{"ruleId":"1332","severity":1,"message":"1333","line":11,"column":27,"nodeType":"1334","messageId":"1335","endLine":11,"endColumn":29},{"ruleId":"1332","severity":1,"message":"1333","line":60,"column":24,"nodeType":"1334","messageId":"1335","endLine":60,"endColumn":26},{"ruleId":"1319","severity":1,"message":"1336","line":77,"column":9,"nodeType":"1321","messageId":"1322","endLine":77,"endColumn":23},{"ruleId":"1328","severity":1,"message":"1337","line":90,"column":6,"nodeType":"1330","endLine":90,"endColumn":8,"suggestions":"1338"},{"ruleId":"1319","severity":1,"message":"1339","line":3,"column":10,"nodeType":"1321","messageId":"1322","endLine":3,"endColumn":17},{"ruleId":"1328","severity":1,"message":"1340","line":143,"column":8,"nodeType":"1330","endLine":143,"endColumn":10,"suggestions":"1341"},{"ruleId":"1319","severity":1,"message":"1342","line":167,"column":11,"nodeType":"1321","messageId":"1322","endLine":167,"endColumn":23},{"ruleId":"1319","severity":1,"message":"1343","line":2,"column":10,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":19},{"ruleId":"1319","severity":1,"message":"1344","line":4,"column":9,"nodeType":"1321","messageId":"1322","endLine":4,"endColumn":16},{"ruleId":"1319","severity":1,"message":"1345","line":72,"column":11,"nodeType":"1321","messageId":"1322","endLine":72,"endColumn":17},{"ruleId":"1319","severity":1,"message":"1346","line":80,"column":12,"nodeType":"1321","messageId":"1322","endLine":80,"endColumn":23},{"ruleId":"1328","severity":1,"message":"1347","line":136,"column":8,"nodeType":"1330","endLine":136,"endColumn":10,"suggestions":"1348"},{"ruleId":"1319","severity":1,"message":"1349","line":183,"column":11,"nodeType":"1321","messageId":"1322","endLine":183,"endColumn":23},{"ruleId":"1319","severity":1,"message":"1350","line":65,"column":5,"nodeType":"1321","messageId":"1322","endLine":65,"endColumn":8},{"ruleId":"1319","severity":1,"message":"1351","line":1,"column":17,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":25},{"ruleId":"1319","severity":1,"message":"1352","line":1,"column":27,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":36},{"ruleId":"1332","severity":1,"message":"1353","line":12,"column":40,"nodeType":"1334","messageId":"1354","endLine":12,"endColumn":42},{"ruleId":"1332","severity":1,"message":"1333","line":5,"column":35,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":37},{"ruleId":"1332","severity":1,"message":"1333","line":13,"column":35,"nodeType":"1334","messageId":"1335","endLine":13,"endColumn":37},{"ruleId":"1332","severity":1,"message":"1333","line":21,"column":35,"nodeType":"1334","messageId":"1335","endLine":21,"endColumn":37},{"ruleId":"1355","severity":1,"message":"1356","line":22,"column":25,"nodeType":"1314","endLine":22,"endColumn":37},{"ruleId":"1355","severity":1,"message":"1356","line":24,"column":29,"nodeType":"1314","endLine":24,"endColumn":41},{"ruleId":"1319","severity":1,"message":"1357","line":5,"column":10,"nodeType":"1321","messageId":"1322","endLine":5,"endColumn":22},{"ruleId":"1319","severity":1,"message":"1358","line":38,"column":12,"nodeType":"1321","messageId":"1322","endLine":38,"endColumn":22},{"ruleId":"1359","severity":1,"message":"1360","line":152,"column":23,"nodeType":"1361","messageId":"1362","endLine":152,"endColumn":25},{"ruleId":"1359","severity":1,"message":"1360","line":161,"column":60,"nodeType":"1361","messageId":"1362","endLine":161,"endColumn":62},{"ruleId":"1359","severity":1,"message":"1360","line":171,"column":62,"nodeType":"1361","messageId":"1362","endLine":171,"endColumn":64},{"ruleId":"1328","severity":1,"message":"1363","line":189,"column":8,"nodeType":"1330","endLine":189,"endColumn":34,"suggestions":"1364"},{"ruleId":"1319","severity":1,"message":"1365","line":7,"column":9,"nodeType":"1321","messageId":"1322","endLine":7,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1356","line":50,"column":13,"nodeType":"1314","endLine":50,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1356","line":52,"column":17,"nodeType":"1314","endLine":52,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":53,"column":17,"nodeType":"1314","endLine":53,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":54,"column":17,"nodeType":"1314","endLine":54,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":55,"column":17,"nodeType":"1314","endLine":55,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":56,"column":17,"nodeType":"1314","endLine":56,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":57,"column":17,"nodeType":"1314","endLine":57,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":58,"column":17,"nodeType":"1314","endLine":58,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":59,"column":17,"nodeType":"1314","endLine":59,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":60,"column":17,"nodeType":"1314","endLine":60,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":61,"column":17,"nodeType":"1314","endLine":61,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":62,"column":17,"nodeType":"1314","endLine":62,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":63,"column":17,"nodeType":"1314","endLine":63,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":64,"column":17,"nodeType":"1314","endLine":64,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":65,"column":17,"nodeType":"1314","endLine":65,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":69,"column":13,"nodeType":"1314","endLine":69,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1356","line":71,"column":17,"nodeType":"1314","endLine":71,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":73,"column":21,"nodeType":"1314","endLine":73,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1356","line":74,"column":21,"nodeType":"1314","endLine":74,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1356","line":75,"column":21,"nodeType":"1314","endLine":75,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1356","line":78,"column":17,"nodeType":"1314","endLine":78,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":80,"column":21,"nodeType":"1314","endLine":80,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":81,"column":21,"nodeType":"1314","endLine":81,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":82,"column":21,"nodeType":"1314","endLine":82,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":85,"column":17,"nodeType":"1314","endLine":85,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":87,"column":21,"nodeType":"1314","endLine":87,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":88,"column":21,"nodeType":"1314","endLine":88,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":89,"column":21,"nodeType":"1314","endLine":89,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":92,"column":17,"nodeType":"1314","endLine":92,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":94,"column":21,"nodeType":"1314","endLine":94,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":95,"column":21,"nodeType":"1314","endLine":95,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":96,"column":21,"nodeType":"1314","endLine":96,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":97,"column":21,"nodeType":"1314","endLine":97,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":100,"column":17,"nodeType":"1314","endLine":100,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":102,"column":21,"nodeType":"1314","endLine":102,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":103,"column":21,"nodeType":"1314","endLine":103,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":104,"column":21,"nodeType":"1314","endLine":104,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":109,"column":13,"nodeType":"1314","endLine":109,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1356","line":111,"column":17,"nodeType":"1314","endLine":111,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":113,"column":19,"nodeType":"1314","endLine":113,"endColumn":31},{"ruleId":"1355","severity":1,"message":"1356","line":114,"column":21,"nodeType":"1314","endLine":114,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":115,"column":21,"nodeType":"1314","endLine":115,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":116,"column":21,"nodeType":"1314","endLine":116,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":119,"column":17,"nodeType":"1314","endLine":119,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":120,"column":17,"nodeType":"1314","endLine":120,"endColumn":29},{"ruleId":"1366","severity":1,"message":"1367","line":131,"column":1,"nodeType":"1368","messageId":"1369","endLine":141,"endColumn":10},{"ruleId":"1319","severity":1,"message":"1370","line":19,"column":40,"nodeType":"1321","messageId":"1322","endLine":19,"endColumn":44},{"ruleId":"1312","severity":1,"message":"1313","line":43,"column":81,"nodeType":"1314","messageId":"1315","endLine":43,"endColumn":101},{"ruleId":"1312","severity":1,"message":"1316","line":49,"column":108,"nodeType":"1314","messageId":"1315","endLine":49,"endColumn":133},{"ruleId":"1319","severity":1,"message":"1371","line":4,"column":10,"nodeType":"1321","messageId":"1322","endLine":4,"endColumn":21},{"ruleId":"1319","severity":1,"message":"1372","line":137,"column":7,"nodeType":"1321","messageId":"1322","endLine":137,"endColumn":17},{"ruleId":"1319","severity":1,"message":"1373","line":144,"column":10,"nodeType":"1321","messageId":"1322","endLine":144,"endColumn":22},{"ruleId":"1319","severity":1,"message":"1374","line":159,"column":10,"nodeType":"1321","messageId":"1322","endLine":159,"endColumn":27},{"ruleId":"1319","severity":1,"message":"1375","line":161,"column":10,"nodeType":"1321","messageId":"1322","endLine":161,"endColumn":27},{"ruleId":"1319","severity":1,"message":"1376","line":185,"column":10,"nodeType":"1321","messageId":"1322","endLine":185,"endColumn":21},{"ruleId":"1319","severity":1,"message":"1377","line":187,"column":10,"nodeType":"1321","messageId":"1322","endLine":187,"endColumn":21},{"ruleId":"1319","severity":1,"message":"1378","line":308,"column":13,"nodeType":"1321","messageId":"1322","endLine":308,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1333","line":397,"column":25,"nodeType":"1334","messageId":"1335","endLine":397,"endColumn":27},{"ruleId":"1379","severity":1,"message":"1380","line":405,"column":15,"nodeType":"1321","messageId":"1381","endLine":405,"endColumn":19},{"ruleId":"1328","severity":1,"message":"1382","line":448,"column":6,"nodeType":"1330","endLine":448,"endColumn":18,"suggestions":"1383"},{"ruleId":"1319","severity":1,"message":"1384","line":453,"column":12,"nodeType":"1321","messageId":"1322","endLine":453,"endColumn":29},{"ruleId":"1319","severity":1,"message":"1385","line":483,"column":12,"nodeType":"1321","messageId":"1322","endLine":483,"endColumn":28},{"ruleId":"1319","severity":1,"message":"1386","line":507,"column":12,"nodeType":"1321","messageId":"1322","endLine":507,"endColumn":28},{"ruleId":"1328","severity":1,"message":"1387","line":327,"column":8,"nodeType":"1330","endLine":327,"endColumn":10,"suggestions":"1388"},{"ruleId":"1319","severity":1,"message":"1389","line":10,"column":10,"nodeType":"1321","messageId":"1322","endLine":10,"endColumn":18},{"ruleId":"1319","severity":1,"message":"1390","line":4,"column":10,"nodeType":"1321","messageId":"1322","endLine":4,"endColumn":18},{"ruleId":"1319","severity":1,"message":"1391","line":10,"column":8,"nodeType":"1321","messageId":"1322","endLine":10,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1333","line":92,"column":34,"nodeType":"1334","messageId":"1335","endLine":92,"endColumn":36},{"ruleId":"1332","severity":1,"message":"1333","line":104,"column":49,"nodeType":"1334","messageId":"1335","endLine":104,"endColumn":51},{"ruleId":"1332","severity":1,"message":"1333","line":107,"column":65,"nodeType":"1334","messageId":"1335","endLine":107,"endColumn":67},{"ruleId":"1332","severity":1,"message":"1333","line":121,"column":50,"nodeType":"1334","messageId":"1335","endLine":121,"endColumn":52},{"ruleId":"1332","severity":1,"message":"1333","line":124,"column":65,"nodeType":"1334","messageId":"1335","endLine":124,"endColumn":67},{"ruleId":"1332","severity":1,"message":"1333","line":358,"column":30,"nodeType":"1334","messageId":"1335","endLine":358,"endColumn":32},{"ruleId":"1332","severity":1,"message":"1333","line":410,"column":46,"nodeType":"1334","messageId":"1335","endLine":410,"endColumn":48},{"ruleId":"1332","severity":1,"message":"1333","line":600,"column":27,"nodeType":"1334","messageId":"1335","endLine":600,"endColumn":29},{"ruleId":"1332","severity":1,"message":"1333","line":777,"column":46,"nodeType":"1334","messageId":"1335","endLine":777,"endColumn":48},{"ruleId":"1332","severity":1,"message":"1333","line":782,"column":35,"nodeType":"1334","messageId":"1335","endLine":782,"endColumn":37},{"ruleId":"1319","severity":1,"message":"1392","line":853,"column":7,"nodeType":"1321","messageId":"1322","endLine":853,"endColumn":15},{"ruleId":"1319","severity":1,"message":"1393","line":866,"column":11,"nodeType":"1321","messageId":"1322","endLine":866,"endColumn":28},{"ruleId":"1319","severity":1,"message":"1394","line":949,"column":9,"nodeType":"1321","messageId":"1322","endLine":949,"endColumn":11},{"ruleId":"1319","severity":1,"message":"1395","line":950,"column":9,"nodeType":"1321","messageId":"1322","endLine":950,"endColumn":11},{"ruleId":"1328","severity":1,"message":"1396","line":1066,"column":8,"nodeType":"1330","endLine":1066,"endColumn":52,"suggestions":"1397"},{"ruleId":"1328","severity":1,"message":"1398","line":1082,"column":8,"nodeType":"1330","endLine":1082,"endColumn":10,"suggestions":"1399"},{"ruleId":"1328","severity":1,"message":"1398","line":1090,"column":8,"nodeType":"1330","endLine":1090,"endColumn":17,"suggestions":"1400"},{"ruleId":"1319","severity":1,"message":"1401","line":10,"column":9,"nodeType":"1321","messageId":"1322","endLine":10,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1333","line":213,"column":30,"nodeType":"1334","messageId":"1335","endLine":213,"endColumn":32},{"ruleId":"1332","severity":1,"message":"1333","line":214,"column":34,"nodeType":"1334","messageId":"1335","endLine":214,"endColumn":36},{"ruleId":"1332","severity":1,"message":"1333","line":223,"column":28,"nodeType":"1334","messageId":"1335","endLine":223,"endColumn":30},{"ruleId":"1332","severity":1,"message":"1333","line":224,"column":32,"nodeType":"1334","messageId":"1335","endLine":224,"endColumn":34},{"ruleId":"1328","severity":1,"message":"1402","line":306,"column":8,"nodeType":"1330","endLine":306,"endColumn":10,"suggestions":"1403"},{"ruleId":"1328","severity":1,"message":"1404","line":265,"column":8,"nodeType":"1330","endLine":265,"endColumn":10,"suggestions":"1405"},{"ruleId":"1328","severity":1,"message":"1404","line":269,"column":8,"nodeType":"1330","endLine":269,"endColumn":25,"suggestions":"1406"},{"ruleId":"1319","severity":1,"message":"1407","line":1,"column":27,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":33},{"ruleId":"1332","severity":1,"message":"1333","line":21,"column":22,"nodeType":"1334","messageId":"1335","endLine":21,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1333","line":34,"column":27,"nodeType":"1334","messageId":"1335","endLine":34,"endColumn":29},{"ruleId":"1332","severity":1,"message":"1333","line":60,"column":34,"nodeType":"1334","messageId":"1335","endLine":60,"endColumn":36},{"ruleId":"1332","severity":1,"message":"1333","line":69,"column":28,"nodeType":"1334","messageId":"1335","endLine":69,"endColumn":30},{"ruleId":"1332","severity":1,"message":"1333","line":163,"column":34,"nodeType":"1334","messageId":"1335","endLine":163,"endColumn":36},{"ruleId":"1319","severity":1,"message":"1344","line":275,"column":7,"nodeType":"1321","messageId":"1322","endLine":275,"endColumn":14},{"ruleId":"1328","severity":1,"message":"1404","line":299,"column":6,"nodeType":"1330","endLine":299,"endColumn":8,"suggestions":"1408"},{"ruleId":"1332","severity":1,"message":"1333","line":27,"column":24,"nodeType":"1334","messageId":"1335","endLine":27,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1333","line":72,"column":78,"nodeType":"1334","messageId":"1335","endLine":72,"endColumn":80},{"ruleId":"1319","severity":1,"message":"1409","line":136,"column":7,"nodeType":"1321","messageId":"1322","endLine":136,"endColumn":20},{"ruleId":"1332","severity":1,"message":"1333","line":278,"column":36,"nodeType":"1334","messageId":"1335","endLine":278,"endColumn":38},{"ruleId":"1332","severity":1,"message":"1333","line":295,"column":31,"nodeType":"1334","messageId":"1335","endLine":295,"endColumn":33},{"ruleId":"1332","severity":1,"message":"1333","line":422,"column":28,"nodeType":"1334","messageId":"1335","endLine":422,"endColumn":30},{"ruleId":"1319","severity":1,"message":"1345","line":440,"column":11,"nodeType":"1321","messageId":"1322","endLine":440,"endColumn":17},{"ruleId":"1319","severity":1,"message":"1346","line":450,"column":12,"nodeType":"1321","messageId":"1322","endLine":450,"endColumn":23},{"ruleId":"1319","severity":1,"message":"1410","line":460,"column":9,"nodeType":"1321","messageId":"1322","endLine":460,"endColumn":26},{"ruleId":"1328","severity":1,"message":"1411","line":542,"column":8,"nodeType":"1330","endLine":542,"endColumn":10,"suggestions":"1412"},{"ruleId":"1328","severity":1,"message":"1413","line":562,"column":8,"nodeType":"1330","endLine":562,"endColumn":17,"suggestions":"1414"},{"ruleId":"1319","severity":1,"message":"1349","line":574,"column":11,"nodeType":"1321","messageId":"1322","endLine":574,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1353","line":690,"column":59,"nodeType":"1334","messageId":"1354","endLine":690,"endColumn":61},{"ruleId":"1332","severity":1,"message":"1333","line":16,"column":22,"nodeType":"1334","messageId":"1335","endLine":16,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1353","line":283,"column":51,"nodeType":"1334","messageId":"1354","endLine":283,"endColumn":53},{"ruleId":"1319","severity":1,"message":"1415","line":8,"column":7,"nodeType":"1321","messageId":"1322","endLine":8,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1356","line":161,"column":13,"nodeType":"1314","endLine":161,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1356","line":163,"column":17,"nodeType":"1314","endLine":163,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":164,"column":17,"nodeType":"1314","endLine":164,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":165,"column":17,"nodeType":"1314","endLine":165,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":166,"column":17,"nodeType":"1314","endLine":166,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":167,"column":17,"nodeType":"1314","endLine":167,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":168,"column":17,"nodeType":"1314","endLine":168,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":169,"column":17,"nodeType":"1314","endLine":169,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":170,"column":17,"nodeType":"1314","endLine":170,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":171,"column":17,"nodeType":"1314","endLine":171,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":172,"column":17,"nodeType":"1314","endLine":172,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":173,"column":17,"nodeType":"1314","endLine":173,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":174,"column":17,"nodeType":"1314","endLine":174,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":175,"column":17,"nodeType":"1314","endLine":175,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":176,"column":17,"nodeType":"1314","endLine":176,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":180,"column":13,"nodeType":"1314","endLine":180,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1356","line":182,"column":17,"nodeType":"1314","endLine":182,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":184,"column":21,"nodeType":"1314","endLine":184,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1356","line":185,"column":21,"nodeType":"1314","endLine":185,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1356","line":186,"column":21,"nodeType":"1314","endLine":186,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1356","line":189,"column":17,"nodeType":"1314","endLine":189,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":191,"column":21,"nodeType":"1314","endLine":191,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":192,"column":21,"nodeType":"1314","endLine":192,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":193,"column":21,"nodeType":"1314","endLine":193,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":196,"column":17,"nodeType":"1314","endLine":196,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":198,"column":21,"nodeType":"1314","endLine":198,"endColumn":64},{"ruleId":"1355","severity":1,"message":"1356","line":199,"column":21,"nodeType":"1314","endLine":199,"endColumn":64},{"ruleId":"1355","severity":1,"message":"1356","line":200,"column":21,"nodeType":"1314","endLine":200,"endColumn":64},{"ruleId":"1355","severity":1,"message":"1356","line":203,"column":17,"nodeType":"1314","endLine":203,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":205,"column":21,"nodeType":"1314","endLine":205,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":206,"column":21,"nodeType":"1314","endLine":206,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":207,"column":21,"nodeType":"1314","endLine":207,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":208,"column":21,"nodeType":"1314","endLine":208,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":211,"column":17,"nodeType":"1314","endLine":211,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":213,"column":21,"nodeType":"1314","endLine":213,"endColumn":63},{"ruleId":"1355","severity":1,"message":"1356","line":214,"column":21,"nodeType":"1314","endLine":214,"endColumn":63},{"ruleId":"1355","severity":1,"message":"1356","line":215,"column":21,"nodeType":"1314","endLine":215,"endColumn":63},{"ruleId":"1355","severity":1,"message":"1356","line":216,"column":21,"nodeType":"1314","endLine":216,"endColumn":63},{"ruleId":"1355","severity":1,"message":"1356","line":221,"column":13,"nodeType":"1314","endLine":221,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1356","line":223,"column":17,"nodeType":"1314","endLine":223,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":226,"column":21,"nodeType":"1314","endLine":226,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":227,"column":21,"nodeType":"1314","endLine":227,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":228,"column":21,"nodeType":"1314","endLine":228,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":229,"column":21,"nodeType":"1314","endLine":229,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":233,"column":17,"nodeType":"1314","endLine":233,"endColumn":64},{"ruleId":"1355","severity":1,"message":"1356","line":234,"column":17,"nodeType":"1314","endLine":234,"endColumn":64},{"ruleId":"1366","severity":1,"message":"1367","line":256,"column":1,"nodeType":"1368","messageId":"1369","endLine":266,"endColumn":10},{"ruleId":"1332","severity":1,"message":"1333","line":5,"column":35,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":37},{"ruleId":"1332","severity":1,"message":"1333","line":13,"column":35,"nodeType":"1334","messageId":"1335","endLine":13,"endColumn":37},{"ruleId":"1332","severity":1,"message":"1333","line":21,"column":35,"nodeType":"1334","messageId":"1335","endLine":21,"endColumn":37},{"ruleId":"1332","severity":1,"message":"1333","line":59,"column":44,"nodeType":"1334","messageId":"1335","endLine":59,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1333","line":63,"column":33,"nodeType":"1334","messageId":"1335","endLine":63,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1353","line":15,"column":40,"nodeType":"1334","messageId":"1354","endLine":15,"endColumn":42},{"ruleId":"1319","severity":1,"message":"1351","line":1,"column":17,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":25},{"ruleId":"1319","severity":1,"message":"1352","line":1,"column":27,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":36},{"ruleId":"1319","severity":1,"message":"1416","line":2,"column":9,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1356","line":19,"column":55,"nodeType":"1314","endLine":19,"endColumn":92},{"ruleId":"1355","severity":1,"message":"1356","line":21,"column":29,"nodeType":"1314","endLine":21,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1356","line":23,"column":37,"nodeType":"1314","endLine":23,"endColumn":49},{"ruleId":"1355","severity":1,"message":"1356","line":44,"column":54,"nodeType":"1314","endLine":44,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":57,"column":49,"nodeType":"1314","endLine":57,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":64,"column":55,"nodeType":"1314","endLine":64,"endColumn":92},{"ruleId":"1355","severity":1,"message":"1356","line":65,"column":29,"nodeType":"1314","endLine":65,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1356","line":74,"column":46,"nodeType":"1314","endLine":74,"endColumn":58},{"ruleId":"1355","severity":1,"message":"1356","line":86,"column":55,"nodeType":"1314","endLine":86,"endColumn":92},{"ruleId":"1355","severity":1,"message":"1356","line":88,"column":29,"nodeType":"1314","endLine":88,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1356","line":91,"column":37,"nodeType":"1314","endLine":91,"endColumn":49},{"ruleId":"1355","severity":1,"message":"1356","line":108,"column":54,"nodeType":"1314","endLine":108,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":121,"column":46,"nodeType":"1314","endLine":121,"endColumn":58},{"ruleId":"1355","severity":1,"message":"1356","line":127,"column":55,"nodeType":"1314","endLine":127,"endColumn":92},{"ruleId":"1355","severity":1,"message":"1356","line":128,"column":29,"nodeType":"1314","endLine":128,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1356","line":137,"column":46,"nodeType":"1314","endLine":137,"endColumn":58},{"ruleId":"1366","severity":1,"message":"1367","line":155,"column":1,"nodeType":"1368","messageId":"1369","endLine":176,"endColumn":10},{"ruleId":"1319","severity":1,"message":"1407","line":1,"column":17,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":23},{"ruleId":"1319","severity":1,"message":"1370","line":2,"column":10,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":14},{"ruleId":"1319","severity":1,"message":"1417","line":39,"column":10,"nodeType":"1321","messageId":"1322","endLine":39,"endColumn":19},{"ruleId":"1319","severity":1,"message":"1418","line":39,"column":21,"nodeType":"1321","messageId":"1322","endLine":39,"endColumn":33},{"ruleId":"1319","severity":1,"message":"1419","line":40,"column":10,"nodeType":"1321","messageId":"1322","endLine":40,"endColumn":20},{"ruleId":"1319","severity":1,"message":"1420","line":40,"column":22,"nodeType":"1321","messageId":"1322","endLine":40,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1353","line":81,"column":51,"nodeType":"1334","messageId":"1354","endLine":81,"endColumn":53},{"ruleId":"1366","severity":1,"message":"1367","line":48,"column":1,"nodeType":"1368","messageId":"1369","endLine":64,"endColumn":11},{"ruleId":"1355","severity":1,"message":"1356","line":20,"column":29,"nodeType":"1314","endLine":20,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1356","line":22,"column":33,"nodeType":"1314","endLine":22,"endColumn":45},{"ruleId":"1355","severity":1,"message":"1356","line":35,"column":29,"nodeType":"1314","endLine":35,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1356","line":38,"column":29,"nodeType":"1314","endLine":38,"endColumn":41},{"ruleId":"1319","severity":1,"message":"1421","line":7,"column":9,"nodeType":"1321","messageId":"1322","endLine":7,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1356","line":59,"column":13,"nodeType":"1314","endLine":59,"endColumn":52},{"ruleId":"1332","severity":1,"message":"1333","line":7,"column":24,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1333","line":5,"column":24,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":26},{"ruleId":"1319","severity":1,"message":"1422","line":3,"column":8,"nodeType":"1321","messageId":"1322","endLine":3,"endColumn":15},{"ruleId":"1319","severity":1,"message":"1423","line":2,"column":23,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":38},{"ruleId":"1319","severity":1,"message":"1424","line":8,"column":7,"nodeType":"1321","messageId":"1322","endLine":8,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1356","line":75,"column":21,"nodeType":"1314","endLine":75,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":78,"column":21,"nodeType":"1314","endLine":78,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":99,"column":21,"nodeType":"1314","endLine":99,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":142,"column":29,"nodeType":"1314","endLine":142,"endColumn":41},{"ruleId":"1319","severity":1,"message":"1390","line":4,"column":10,"nodeType":"1321","messageId":"1322","endLine":4,"endColumn":18},{"ruleId":"1332","severity":1,"message":"1333","line":42,"column":24,"nodeType":"1334","messageId":"1335","endLine":42,"endColumn":26},{"ruleId":"1319","severity":1,"message":"1425","line":78,"column":7,"nodeType":"1321","messageId":"1322","endLine":78,"endColumn":20},{"ruleId":"1319","severity":1,"message":"1336","line":94,"column":11,"nodeType":"1321","messageId":"1322","endLine":94,"endColumn":25},{"ruleId":"1319","severity":1,"message":"1426","line":102,"column":11,"nodeType":"1321","messageId":"1322","endLine":102,"endColumn":31},{"ruleId":"1319","severity":1,"message":"1427","line":105,"column":12,"nodeType":"1321","messageId":"1322","endLine":105,"endColumn":25},{"ruleId":"1319","severity":1,"message":"1428","line":105,"column":27,"nodeType":"1321","messageId":"1322","endLine":105,"endColumn":43},{"ruleId":"1319","severity":1,"message":"1429","line":117,"column":11,"nodeType":"1321","messageId":"1322","endLine":117,"endColumn":22},{"ruleId":"1328","severity":1,"message":"1404","line":129,"column":8,"nodeType":"1330","endLine":129,"endColumn":10,"suggestions":"1430"},{"ruleId":"1332","severity":1,"message":"1353","line":150,"column":55,"nodeType":"1334","messageId":"1354","endLine":150,"endColumn":57},{"ruleId":"1332","severity":1,"message":"1353","line":180,"column":55,"nodeType":"1334","messageId":"1354","endLine":180,"endColumn":57},{"ruleId":"1332","severity":1,"message":"1353","line":205,"column":53,"nodeType":"1334","messageId":"1354","endLine":205,"endColumn":55},{"ruleId":"1319","severity":1,"message":"1371","line":4,"column":10,"nodeType":"1321","messageId":"1322","endLine":4,"endColumn":21},{"ruleId":"1319","severity":1,"message":"1372","line":137,"column":7,"nodeType":"1321","messageId":"1322","endLine":137,"endColumn":17},{"ruleId":"1319","severity":1,"message":"1373","line":144,"column":10,"nodeType":"1321","messageId":"1322","endLine":144,"endColumn":22},{"ruleId":"1319","severity":1,"message":"1374","line":159,"column":10,"nodeType":"1321","messageId":"1322","endLine":159,"endColumn":27},{"ruleId":"1319","severity":1,"message":"1375","line":161,"column":10,"nodeType":"1321","messageId":"1322","endLine":161,"endColumn":27},{"ruleId":"1319","severity":1,"message":"1376","line":185,"column":10,"nodeType":"1321","messageId":"1322","endLine":185,"endColumn":21},{"ruleId":"1319","severity":1,"message":"1377","line":187,"column":10,"nodeType":"1321","messageId":"1322","endLine":187,"endColumn":21},{"ruleId":"1319","severity":1,"message":"1378","line":308,"column":13,"nodeType":"1321","messageId":"1322","endLine":308,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1333","line":397,"column":25,"nodeType":"1334","messageId":"1335","endLine":397,"endColumn":27},{"ruleId":"1379","severity":1,"message":"1380","line":405,"column":15,"nodeType":"1321","messageId":"1381","endLine":405,"endColumn":19},{"ruleId":"1328","severity":1,"message":"1382","line":448,"column":6,"nodeType":"1330","endLine":448,"endColumn":18,"suggestions":"1431"},{"ruleId":"1319","severity":1,"message":"1384","line":453,"column":12,"nodeType":"1321","messageId":"1322","endLine":453,"endColumn":29},{"ruleId":"1319","severity":1,"message":"1385","line":483,"column":12,"nodeType":"1321","messageId":"1322","endLine":483,"endColumn":28},{"ruleId":"1319","severity":1,"message":"1386","line":507,"column":12,"nodeType":"1321","messageId":"1322","endLine":507,"endColumn":28},{"ruleId":"1319","severity":1,"message":"1407","line":1,"column":17,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":23},{"ruleId":"1319","severity":1,"message":"1370","line":2,"column":10,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":14},{"ruleId":"1319","severity":1,"message":"1417","line":39,"column":10,"nodeType":"1321","messageId":"1322","endLine":39,"endColumn":19},{"ruleId":"1319","severity":1,"message":"1418","line":39,"column":21,"nodeType":"1321","messageId":"1322","endLine":39,"endColumn":33},{"ruleId":"1319","severity":1,"message":"1419","line":40,"column":10,"nodeType":"1321","messageId":"1322","endLine":40,"endColumn":20},{"ruleId":"1319","severity":1,"message":"1420","line":40,"column":22,"nodeType":"1321","messageId":"1322","endLine":40,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1353","line":81,"column":51,"nodeType":"1334","messageId":"1354","endLine":81,"endColumn":53},{"ruleId":"1319","severity":1,"message":"1407","line":1,"column":17,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":23},{"ruleId":"1319","severity":1,"message":"1370","line":2,"column":10,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":14},{"ruleId":"1319","severity":1,"message":"1417","line":39,"column":10,"nodeType":"1321","messageId":"1322","endLine":39,"endColumn":19},{"ruleId":"1319","severity":1,"message":"1418","line":39,"column":21,"nodeType":"1321","messageId":"1322","endLine":39,"endColumn":33},{"ruleId":"1319","severity":1,"message":"1419","line":40,"column":10,"nodeType":"1321","messageId":"1322","endLine":40,"endColumn":20},{"ruleId":"1319","severity":1,"message":"1420","line":40,"column":22,"nodeType":"1321","messageId":"1322","endLine":40,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1353","line":81,"column":51,"nodeType":"1334","messageId":"1354","endLine":81,"endColumn":53},{"ruleId":"1319","severity":1,"message":"1432","line":16,"column":10,"nodeType":"1321","messageId":"1322","endLine":16,"endColumn":21},{"ruleId":"1328","severity":1,"message":"1433","line":234,"column":6,"nodeType":"1330","endLine":234,"endColumn":50,"suggestions":"1434"},{"ruleId":"1319","severity":1,"message":"1370","line":13,"column":40,"nodeType":"1321","messageId":"1322","endLine":13,"endColumn":44},{"ruleId":"1312","severity":1,"message":"1313","line":36,"column":81,"nodeType":"1314","messageId":"1315","endLine":36,"endColumn":101},{"ruleId":"1312","severity":1,"message":"1316","line":43,"column":108,"nodeType":"1314","messageId":"1315","endLine":43,"endColumn":133},{"ruleId":"1319","severity":1,"message":"1390","line":4,"column":10,"nodeType":"1321","messageId":"1322","endLine":4,"endColumn":18},{"ruleId":"1319","severity":1,"message":"1389","line":10,"column":10,"nodeType":"1321","messageId":"1322","endLine":10,"endColumn":18},{"ruleId":"1328","severity":1,"message":"1387","line":327,"column":8,"nodeType":"1330","endLine":327,"endColumn":10,"suggestions":"1435"},{"ruleId":"1319","severity":1,"message":"1407","line":1,"column":17,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":23},{"ruleId":"1319","severity":1,"message":"1370","line":2,"column":10,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":14},{"ruleId":"1319","severity":1,"message":"1417","line":39,"column":10,"nodeType":"1321","messageId":"1322","endLine":39,"endColumn":19},{"ruleId":"1319","severity":1,"message":"1418","line":39,"column":21,"nodeType":"1321","messageId":"1322","endLine":39,"endColumn":33},{"ruleId":"1319","severity":1,"message":"1419","line":40,"column":10,"nodeType":"1321","messageId":"1322","endLine":40,"endColumn":20},{"ruleId":"1319","severity":1,"message":"1420","line":40,"column":22,"nodeType":"1321","messageId":"1322","endLine":40,"endColumn":35},{"ruleId":"1332","severity":1,"message":"1353","line":81,"column":51,"nodeType":"1334","messageId":"1354","endLine":81,"endColumn":53},{"ruleId":"1319","severity":1,"message":"1401","line":10,"column":9,"nodeType":"1321","messageId":"1322","endLine":10,"endColumn":15},{"ruleId":"1319","severity":1,"message":"1436","line":171,"column":11,"nodeType":"1321","messageId":"1322","endLine":171,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1333","line":215,"column":30,"nodeType":"1334","messageId":"1335","endLine":215,"endColumn":32},{"ruleId":"1332","severity":1,"message":"1333","line":216,"column":34,"nodeType":"1334","messageId":"1335","endLine":216,"endColumn":36},{"ruleId":"1332","severity":1,"message":"1333","line":225,"column":28,"nodeType":"1334","messageId":"1335","endLine":225,"endColumn":30},{"ruleId":"1332","severity":1,"message":"1333","line":226,"column":32,"nodeType":"1334","messageId":"1335","endLine":226,"endColumn":34},{"ruleId":"1328","severity":1,"message":"1437","line":307,"column":8,"nodeType":"1330","endLine":307,"endColumn":10,"suggestions":"1438"},{"ruleId":"1328","severity":1,"message":"1439","line":313,"column":8,"nodeType":"1330","endLine":313,"endColumn":23,"suggestions":"1440"},{"ruleId":"1332","severity":1,"message":"1333","line":62,"column":37,"nodeType":"1334","messageId":"1335","endLine":62,"endColumn":39},{"ruleId":"1328","severity":1,"message":"1404","line":268,"column":8,"nodeType":"1330","endLine":268,"endColumn":10,"suggestions":"1441"},{"ruleId":"1328","severity":1,"message":"1404","line":272,"column":8,"nodeType":"1330","endLine":272,"endColumn":25,"suggestions":"1442"},{"ruleId":"1319","severity":1,"message":"1391","line":10,"column":8,"nodeType":"1321","messageId":"1322","endLine":10,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1333","line":95,"column":34,"nodeType":"1334","messageId":"1335","endLine":95,"endColumn":36},{"ruleId":"1332","severity":1,"message":"1333","line":107,"column":49,"nodeType":"1334","messageId":"1335","endLine":107,"endColumn":51},{"ruleId":"1332","severity":1,"message":"1333","line":110,"column":65,"nodeType":"1334","messageId":"1335","endLine":110,"endColumn":67},{"ruleId":"1332","severity":1,"message":"1333","line":124,"column":50,"nodeType":"1334","messageId":"1335","endLine":124,"endColumn":52},{"ruleId":"1332","severity":1,"message":"1333","line":127,"column":65,"nodeType":"1334","messageId":"1335","endLine":127,"endColumn":67},{"ruleId":"1332","severity":1,"message":"1333","line":338,"column":30,"nodeType":"1334","messageId":"1335","endLine":338,"endColumn":32},{"ruleId":"1332","severity":1,"message":"1333","line":390,"column":46,"nodeType":"1334","messageId":"1335","endLine":390,"endColumn":48},{"ruleId":"1332","severity":1,"message":"1333","line":580,"column":27,"nodeType":"1334","messageId":"1335","endLine":580,"endColumn":29},{"ruleId":"1332","severity":1,"message":"1333","line":759,"column":46,"nodeType":"1334","messageId":"1335","endLine":759,"endColumn":48},{"ruleId":"1332","severity":1,"message":"1333","line":764,"column":35,"nodeType":"1334","messageId":"1335","endLine":764,"endColumn":37},{"ruleId":"1319","severity":1,"message":"1392","line":836,"column":7,"nodeType":"1321","messageId":"1322","endLine":836,"endColumn":15},{"ruleId":"1319","severity":1,"message":"1393","line":849,"column":11,"nodeType":"1321","messageId":"1322","endLine":849,"endColumn":28},{"ruleId":"1319","severity":1,"message":"1443","line":857,"column":12,"nodeType":"1321","messageId":"1322","endLine":857,"endColumn":27},{"ruleId":"1319","severity":1,"message":"1444","line":857,"column":29,"nodeType":"1321","messageId":"1322","endLine":857,"endColumn":47},{"ruleId":"1319","severity":1,"message":"1394","line":932,"column":9,"nodeType":"1321","messageId":"1322","endLine":932,"endColumn":11},{"ruleId":"1319","severity":1,"message":"1395","line":933,"column":9,"nodeType":"1321","messageId":"1322","endLine":933,"endColumn":11},{"ruleId":"1328","severity":1,"message":"1445","line":1052,"column":8,"nodeType":"1330","endLine":1052,"endColumn":52,"suggestions":"1446"},{"ruleId":"1328","severity":1,"message":"1447","line":1123,"column":8,"nodeType":"1330","endLine":1123,"endColumn":20,"suggestions":"1448"},{"ruleId":"1328","severity":1,"message":"1449","line":1138,"column":8,"nodeType":"1330","endLine":1138,"endColumn":10,"suggestions":"1450"},{"ruleId":"1328","severity":1,"message":"1398","line":1146,"column":8,"nodeType":"1330","endLine":1146,"endColumn":17,"suggestions":"1451"},{"ruleId":"1319","severity":1,"message":"1407","line":1,"column":27,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":33},{"ruleId":"1332","severity":1,"message":"1333","line":21,"column":22,"nodeType":"1334","messageId":"1335","endLine":21,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1333","line":34,"column":27,"nodeType":"1334","messageId":"1335","endLine":34,"endColumn":29},{"ruleId":"1332","severity":1,"message":"1333","line":60,"column":34,"nodeType":"1334","messageId":"1335","endLine":60,"endColumn":36},{"ruleId":"1332","severity":1,"message":"1333","line":69,"column":28,"nodeType":"1334","messageId":"1335","endLine":69,"endColumn":30},{"ruleId":"1332","severity":1,"message":"1333","line":163,"column":34,"nodeType":"1334","messageId":"1335","endLine":163,"endColumn":36},{"ruleId":"1319","severity":1,"message":"1344","line":275,"column":7,"nodeType":"1321","messageId":"1322","endLine":275,"endColumn":14},{"ruleId":"1328","severity":1,"message":"1404","line":299,"column":6,"nodeType":"1330","endLine":299,"endColumn":8,"suggestions":"1452"},{"ruleId":"1332","severity":1,"message":"1333","line":16,"column":22,"nodeType":"1334","messageId":"1335","endLine":16,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1333","line":27,"column":17,"nodeType":"1334","messageId":"1335","endLine":27,"endColumn":19},{"ruleId":"1332","severity":1,"message":"1333","line":150,"column":20,"nodeType":"1334","messageId":"1335","endLine":150,"endColumn":22},{"ruleId":"1332","severity":1,"message":"1353","line":315,"column":51,"nodeType":"1334","messageId":"1354","endLine":315,"endColumn":53},{"ruleId":"1332","severity":1,"message":"1333","line":27,"column":24,"nodeType":"1334","messageId":"1335","endLine":27,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1333","line":72,"column":78,"nodeType":"1334","messageId":"1335","endLine":72,"endColumn":80},{"ruleId":"1319","severity":1,"message":"1409","line":136,"column":7,"nodeType":"1321","messageId":"1322","endLine":136,"endColumn":20},{"ruleId":"1332","severity":1,"message":"1333","line":278,"column":36,"nodeType":"1334","messageId":"1335","endLine":278,"endColumn":38},{"ruleId":"1332","severity":1,"message":"1333","line":295,"column":31,"nodeType":"1334","messageId":"1335","endLine":295,"endColumn":33},{"ruleId":"1332","severity":1,"message":"1333","line":422,"column":28,"nodeType":"1334","messageId":"1335","endLine":422,"endColumn":30},{"ruleId":"1319","severity":1,"message":"1345","line":440,"column":11,"nodeType":"1321","messageId":"1322","endLine":440,"endColumn":17},{"ruleId":"1319","severity":1,"message":"1346","line":450,"column":12,"nodeType":"1321","messageId":"1322","endLine":450,"endColumn":23},{"ruleId":"1319","severity":1,"message":"1410","line":460,"column":9,"nodeType":"1321","messageId":"1322","endLine":460,"endColumn":26},{"ruleId":"1328","severity":1,"message":"1411","line":542,"column":8,"nodeType":"1330","endLine":542,"endColumn":10,"suggestions":"1453"},{"ruleId":"1328","severity":1,"message":"1413","line":562,"column":8,"nodeType":"1330","endLine":562,"endColumn":17,"suggestions":"1454"},{"ruleId":"1319","severity":1,"message":"1349","line":574,"column":11,"nodeType":"1321","messageId":"1322","endLine":574,"endColumn":23},{"ruleId":"1332","severity":1,"message":"1353","line":690,"column":59,"nodeType":"1334","messageId":"1354","endLine":690,"endColumn":61},{"ruleId":"1366","severity":1,"message":"1367","line":48,"column":1,"nodeType":"1368","messageId":"1369","endLine":64,"endColumn":11},{"ruleId":"1319","severity":1,"message":"1415","line":8,"column":7,"nodeType":"1321","messageId":"1322","endLine":8,"endColumn":26},{"ruleId":"1319","severity":1,"message":"1416","line":2,"column":9,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1356","line":19,"column":55,"nodeType":"1314","endLine":19,"endColumn":92},{"ruleId":"1355","severity":1,"message":"1356","line":21,"column":29,"nodeType":"1314","endLine":21,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1356","line":23,"column":37,"nodeType":"1314","endLine":23,"endColumn":49},{"ruleId":"1355","severity":1,"message":"1356","line":44,"column":54,"nodeType":"1314","endLine":44,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":57,"column":49,"nodeType":"1314","endLine":57,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":64,"column":55,"nodeType":"1314","endLine":64,"endColumn":92},{"ruleId":"1355","severity":1,"message":"1356","line":65,"column":29,"nodeType":"1314","endLine":65,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1356","line":74,"column":46,"nodeType":"1314","endLine":74,"endColumn":58},{"ruleId":"1355","severity":1,"message":"1356","line":86,"column":55,"nodeType":"1314","endLine":86,"endColumn":92},{"ruleId":"1355","severity":1,"message":"1356","line":88,"column":29,"nodeType":"1314","endLine":88,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1356","line":91,"column":37,"nodeType":"1314","endLine":91,"endColumn":49},{"ruleId":"1355","severity":1,"message":"1356","line":108,"column":54,"nodeType":"1314","endLine":108,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":121,"column":46,"nodeType":"1314","endLine":121,"endColumn":58},{"ruleId":"1355","severity":1,"message":"1356","line":127,"column":55,"nodeType":"1314","endLine":127,"endColumn":92},{"ruleId":"1355","severity":1,"message":"1356","line":128,"column":29,"nodeType":"1314","endLine":128,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1356","line":137,"column":46,"nodeType":"1314","endLine":137,"endColumn":58},{"ruleId":"1366","severity":1,"message":"1367","line":155,"column":1,"nodeType":"1368","messageId":"1369","endLine":176,"endColumn":10},{"ruleId":"1355","severity":1,"message":"1356","line":161,"column":13,"nodeType":"1314","endLine":161,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1356","line":163,"column":17,"nodeType":"1314","endLine":163,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":164,"column":17,"nodeType":"1314","endLine":164,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":165,"column":17,"nodeType":"1314","endLine":165,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":166,"column":17,"nodeType":"1314","endLine":166,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":167,"column":17,"nodeType":"1314","endLine":167,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":168,"column":17,"nodeType":"1314","endLine":168,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":169,"column":17,"nodeType":"1314","endLine":169,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":170,"column":17,"nodeType":"1314","endLine":170,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":171,"column":17,"nodeType":"1314","endLine":171,"endColumn":60},{"ruleId":"1355","severity":1,"message":"1356","line":172,"column":17,"nodeType":"1314","endLine":172,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":173,"column":17,"nodeType":"1314","endLine":173,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":174,"column":17,"nodeType":"1314","endLine":174,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":175,"column":17,"nodeType":"1314","endLine":175,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":176,"column":17,"nodeType":"1314","endLine":176,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1356","line":180,"column":13,"nodeType":"1314","endLine":180,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1356","line":182,"column":17,"nodeType":"1314","endLine":182,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":184,"column":21,"nodeType":"1314","endLine":184,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1356","line":185,"column":21,"nodeType":"1314","endLine":185,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1356","line":186,"column":21,"nodeType":"1314","endLine":186,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1356","line":189,"column":17,"nodeType":"1314","endLine":189,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":191,"column":21,"nodeType":"1314","endLine":191,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":192,"column":21,"nodeType":"1314","endLine":192,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":193,"column":21,"nodeType":"1314","endLine":193,"endColumn":62},{"ruleId":"1355","severity":1,"message":"1356","line":196,"column":17,"nodeType":"1314","endLine":196,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":198,"column":21,"nodeType":"1314","endLine":198,"endColumn":64},{"ruleId":"1355","severity":1,"message":"1356","line":199,"column":21,"nodeType":"1314","endLine":199,"endColumn":64},{"ruleId":"1355","severity":1,"message":"1356","line":200,"column":21,"nodeType":"1314","endLine":200,"endColumn":64},{"ruleId":"1355","severity":1,"message":"1356","line":203,"column":17,"nodeType":"1314","endLine":203,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":205,"column":21,"nodeType":"1314","endLine":205,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":206,"column":21,"nodeType":"1314","endLine":206,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":207,"column":21,"nodeType":"1314","endLine":207,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":208,"column":21,"nodeType":"1314","endLine":208,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":211,"column":17,"nodeType":"1314","endLine":211,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":213,"column":21,"nodeType":"1314","endLine":213,"endColumn":63},{"ruleId":"1355","severity":1,"message":"1356","line":214,"column":21,"nodeType":"1314","endLine":214,"endColumn":63},{"ruleId":"1355","severity":1,"message":"1356","line":215,"column":21,"nodeType":"1314","endLine":215,"endColumn":63},{"ruleId":"1355","severity":1,"message":"1356","line":216,"column":21,"nodeType":"1314","endLine":216,"endColumn":63},{"ruleId":"1355","severity":1,"message":"1356","line":221,"column":13,"nodeType":"1314","endLine":221,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1356","line":223,"column":17,"nodeType":"1314","endLine":223,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1356","line":226,"column":21,"nodeType":"1314","endLine":226,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":227,"column":21,"nodeType":"1314","endLine":227,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":228,"column":21,"nodeType":"1314","endLine":228,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":229,"column":21,"nodeType":"1314","endLine":229,"endColumn":66},{"ruleId":"1355","severity":1,"message":"1356","line":233,"column":17,"nodeType":"1314","endLine":233,"endColumn":64},{"ruleId":"1355","severity":1,"message":"1356","line":234,"column":17,"nodeType":"1314","endLine":234,"endColumn":64},{"ruleId":"1366","severity":1,"message":"1367","line":256,"column":1,"nodeType":"1368","messageId":"1369","endLine":266,"endColumn":10},{"ruleId":"1355","severity":1,"message":"1356","line":35,"column":29,"nodeType":"1314","endLine":35,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1356","line":38,"column":29,"nodeType":"1314","endLine":38,"endColumn":41},{"ruleId":"1319","severity":1,"message":"1423","line":2,"column":23,"nodeType":"1321","messageId":"1322","endLine":2,"endColumn":38},{"ruleId":"1319","severity":1,"message":"1424","line":8,"column":7,"nodeType":"1321","messageId":"1322","endLine":8,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1356","line":75,"column":21,"nodeType":"1314","endLine":75,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":78,"column":21,"nodeType":"1314","endLine":78,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":99,"column":21,"nodeType":"1314","endLine":99,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1356","line":142,"column":29,"nodeType":"1314","endLine":142,"endColumn":41},{"ruleId":"1319","severity":1,"message":"1422","line":3,"column":8,"nodeType":"1321","messageId":"1322","endLine":3,"endColumn":15},{"ruleId":"1332","severity":1,"message":"1353","line":15,"column":40,"nodeType":"1334","messageId":"1354","endLine":15,"endColumn":42},{"ruleId":"1332","severity":1,"message":"1333","line":67,"column":44,"nodeType":"1334","messageId":"1335","endLine":67,"endColumn":46},{"ruleId":"1332","severity":1,"message":"1333","line":71,"column":33,"nodeType":"1334","messageId":"1335","endLine":71,"endColumn":35},{"ruleId":"1355","severity":1,"message":"1356","line":60,"column":13,"nodeType":"1314","endLine":60,"endColumn":52},{"ruleId":"1319","severity":1,"message":"1351","line":1,"column":17,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":25},{"ruleId":"1319","severity":1,"message":"1352","line":1,"column":27,"nodeType":"1321","messageId":"1322","endLine":1,"endColumn":36},{"ruleId":"1332","severity":1,"message":"1333","line":7,"column":24,"nodeType":"1334","messageId":"1335","endLine":7,"endColumn":26},{"ruleId":"1332","severity":1,"message":"1333","line":5,"column":24,"nodeType":"1334","messageId":"1335","endLine":5,"endColumn":26},{"ruleId":"1328","severity":1,"message":"1455","line":117,"column":8,"nodeType":"1330","endLine":117,"endColumn":23,"suggestions":"1456"},{"ruleId":"1332","severity":1,"message":"1333","line":15,"column":22,"nodeType":"1334","messageId":"1335","endLine":15,"endColumn":24},{"ruleId":"1332","severity":1,"message":"1333","line":26,"column":17,"nodeType":"1334","messageId":"1335","endLine":26,"endColumn":19},{"ruleId":"1319","severity":1,"message":"1457","line":69,"column":9,"nodeType":"1321","messageId":"1322","endLine":69,"endColumn":20},{"ruleId":"1319","severity":1,"message":"1457","line":77,"column":9,"nodeType":"1321","messageId":"1322","endLine":77,"endColumn":20},{"ruleId":"1332","severity":1,"message":"1353","line":148,"column":42,"nodeType":"1334","messageId":"1354","endLine":148,"endColumn":44},{"ruleId":"1319","severity":1,"message":"1391","line":10,"column":8,"nodeType":"1321","messageId":"1322","endLine":10,"endColumn":17},{"ruleId":"1332","severity":1,"message":"1333","line":93,"column":34,"nodeType":"1334","messageId":"1335","endLine":93,"endColumn":36},{"ruleId":"1332","severity":1,"message":"1333","line":105,"column":49,"nodeType":"1334","messageId":"1335","endLine":105,"endColumn":51},{"ruleId":"1332","severity":1,"message":"1333","line":108,"column":65,"nodeType":"1334","messageId":"1335","endLine":108,"endColumn":67},{"ruleId":"1332","severity":1,"message":"1333","line":122,"column":50,"nodeType":"1334","messageId":"1335","endLine":122,"endColumn":52},{"ruleId":"1332","severity":1,"message":"1333","line":125,"column":65,"nodeType":"1334","messageId":"1335","endLine":125,"endColumn":67},{"ruleId":"1332","severity":1,"message":"1333","line":336,"column":30,"nodeType":"1334","messageId":"1335","endLine":336,"endColumn":32},{"ruleId":"1332","severity":1,"message":"1333","line":388,"column":46,"nodeType":"1334","messageId":"1335","endLine":388,"endColumn":48},{"ruleId":"1332","severity":1,"message":"1333","line":578,"column":27,"nodeType":"1334","messageId":"1335","endLine":578,"endColumn":29},{"ruleId":"1332","severity":1,"message":"1333","line":757,"column":46,"nodeType":"1334","messageId":"1335","endLine":757,"endColumn":48},{"ruleId":"1332","severity":1,"message":"1333","line":762,"column":35,"nodeType":"1334","messageId":"1335","endLine":762,"endColumn":37},{"ruleId":"1319","severity":1,"message":"1392","line":834,"column":7,"nodeType":"1321","messageId":"1322","endLine":834,"endColumn":15},{"ruleId":"1319","severity":1,"message":"1393","line":847,"column":11,"nodeType":"1321","messageId":"1322","endLine":847,"endColumn":28},{"ruleId":"1319","severity":1,"message":"1443","line":855,"column":12,"nodeType":"1321","messageId":"1322","endLine":855,"endColumn":27},{"ruleId":"1319","severity":1,"message":"1444","line":855,"column":29,"nodeType":"1321","messageId":"1322","endLine":855,"endColumn":47},{"ruleId":"1319","severity":1,"message":"1394","line":930,"column":9,"nodeType":"1321","messageId":"1322","endLine":930,"endColumn":11},{"ruleId":"1319","severity":1,"message":"1395","line":931,"column":9,"nodeType":"1321","messageId":"1322","endLine":931,"endColumn":11},{"ruleId":"1328","severity":1,"message":"1396","line":1049,"column":8,"nodeType":"1330","endLine":1049,"endColumn":52,"suggestions":"1458"},{"ruleId":"1328","severity":1,"message":"1447","line":1116,"column":8,"nodeType":"1330","endLine":1116,"endColumn":20,"suggestions":"1459"},{"ruleId":"1328","severity":1,"message":"1449","line":1132,"column":8,"nodeType":"1330","endLine":1132,"endColumn":10,"suggestions":"1460"},{"ruleId":"1328","severity":1,"message":"1398","line":1140,"column":8,"nodeType":"1330","endLine":1140,"endColumn":17,"suggestions":"1461"},"react/jsx-pascal-case","Imported JSX component Input_Tournament must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Sokuho_Input_Makegame must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Input_mode must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Pre_Input must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'selectMember' is assigned a value but never used.","'initialSetMember' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initialSetMember1', 'initialSetMember2', 'initialSetMember3', 'initialSetMember4', 'initialSetMember5', 'initialSetMember6', 'initialSetMember7', 'initialSetMember8', 'initialSetMember9', and 'setPositionNo'. Either include them or remove the dependency array.","ArrayExpression",["1462"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'PageTransition' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Schools'. Either include it or remove the dependency array.",["1463"],"'Schools' is defined but never used.","React Hook useEffect has missing dependencies: 'initialSetTeamA' and 'initialSetTeamB'. Either include them or remove the dependency array.",["1464"],"'handleGoPage' is assigned a value but never used.","'myIndexOf' is defined but never used.","'Schools' is assigned a value but never used.","'number' is assigned a value but never used.","'schoolState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadMember'. Either include it or remove the dependency array.",["1465"],"'selectSchool' is assigned a value but never used.","'cnt' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'updateButton' is defined but never used.","'canvasCopy' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.",["1466"],"'handleClick1' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Link' is defined but never used.","'useNavigate' is defined but never used.","'countStyle' is assigned a value but never used.","'searchParams' is assigned a value but never used.","'tournamentMember1' is assigned a value but never used.","'tournamentMember2' is assigned a value but never used.","'totalScore1' is assigned a value but never used.","'totalScore2' is assigned a value but never used.","'startMember' is assigned a value but never used.","no-redeclare","'rind' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'tournamentMember'. Either include it or remove the dependency array.",["1467"],"'change_ball_count' is defined but never used.","'change_str_count' is defined but never used.","'change_out_count' is defined but never used.","React Hook useEffect has missing dependencies: 'initialSetMember', 'initialSetMember_team2', 'setPositionNo', and 'setPositionNo_team2'. Either include them or remove the dependency array.",["1468"],"'isSubmit' is assigned a value but never used.","'TitleBar' is defined but never used.","'EditPoint' is defined but never used.","'homebase' is assigned a value but never used.","'urlTournamentName' is assigned a value but never used.","'sw' is assigned a value but never used.","'sh' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'context', 'l', and 'w'. Either include them or remove the dependency array.",["1469"],"React Hook useEffect has missing dependencies: 'urlGameId', 'urlSchoolId', 'urlSchoolId2', and 'urlTournamentId'. Either include them or remove the dependency array.",["1470"],["1471"],"'Member' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isEmptyFlag', 'urlGameId', 'urlSchoolId', 'urlSchoolId2', and 'urlTournamentId'. Either include them or remove the dependency array.",["1472"],"React Hook useEffect has a missing dependency: 'urlTournamentId'. Either include it or remove the dependency array.",["1473"],["1474"],"'useRef' is defined but never used.",["1475"],"'setBacknumber' is assigned a value but never used.","'selectedMemberNum' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'urlSchoolId' and 'urlTournamentId'. Either include them or remove the dependency array.",["1476"],"React Hook useEffect has missing dependencies: 'selectedMember', 'uniformNumberArray', 'urlSchoolId', and 'urlTournamentId'. Either include them or remove the dependency array.",["1477"],"'changeFreeWriteMode' is assigned a value but never used.","'Position' is assigned a value but never used.","'birthYear' is assigned a value but never used.","'setBirthYear' is assigned a value but never used.","'birthMonth' is assigned a value but never used.","'setBirthMonth' is assigned a value but never used.","'funcGL' is assigned a value but never used.","'isEnpty' is defined but never used.","'useSearchParams' is defined but never used.","'frontendUrl' is assigned a value but never used.","'RefDuringGame' is assigned a value but never used.","'urlTournamentOpening' is assigned a value but never used.","'rgsTournament' is assigned a value but never used.","'setRgsTournament' is assigned a value but never used.","'optionArray' is assigned a value but never used.",["1478"],["1479"],"'membersData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'schoolsData'. Either include it or remove the dependency array.",["1480"],["1481"],"'fetch1Result' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isEmptyFlag', 'urlSchoolId', 'urlSchoolId2', and 'urlTournamentId'. Either include them or remove the dependency array.",["1482"],"React Hook useEffect has missing dependencies: 'urlGameId', 'urlSchoolId', and 'urlSchoolId2'. Either include them or remove the dependency array.",["1483"],["1484"],["1485"],"'isExistTmpTable' is assigned a value but never used.","'setIsExistTmpTable' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'context', 'deleteball', 'l', and 'w'. Either include them or remove the dependency array.",["1486"],"React Hook useEffect has missing dependencies: 'context', 'l', 'runnerCountState', and 'w'. Either include them or remove the dependency array.",["1487"],"React Hook useEffect has missing dependencies: 'urlSchoolId', 'urlSchoolId2', and 'urlTournamentId'. Either include them or remove the dependency array.",["1488"],["1489"],["1490"],["1491"],["1492"],"React Hook useEffect has a missing dependency: 'urlGameId'. Either include it or remove the dependency array.",["1493"],"'FetchReturn' is assigned a value but never used.",["1494"],["1495"],["1496"],["1497"],{"desc":"1498","fix":"1499"},{"desc":"1500","fix":"1501"},{"desc":"1502","fix":"1503"},{"desc":"1504","fix":"1505"},{"desc":"1506","fix":"1507"},{"desc":"1508","fix":"1509"},{"desc":"1510","fix":"1511"},{"desc":"1512","fix":"1513"},{"desc":"1514","fix":"1515"},{"desc":"1516","fix":"1517"},{"desc":"1518","fix":"1519"},{"desc":"1520","fix":"1521"},{"desc":"1522","fix":"1523"},{"desc":"1520","fix":"1524"},{"desc":"1525","fix":"1526"},{"desc":"1527","fix":"1528"},{"desc":"1520","fix":"1529"},{"desc":"1508","fix":"1530"},{"desc":"1531","fix":"1532"},{"desc":"1510","fix":"1533"},{"desc":"1534","fix":"1535"},{"desc":"1536","fix":"1537"},{"desc":"1520","fix":"1538"},{"desc":"1522","fix":"1539"},{"desc":"1540","fix":"1541"},{"desc":"1542","fix":"1543"},{"desc":"1544","fix":"1545"},{"desc":"1516","fix":"1546"},{"desc":"1520","fix":"1547"},{"desc":"1525","fix":"1548"},{"desc":"1527","fix":"1549"},{"desc":"1550","fix":"1551"},{"desc":"1512","fix":"1552"},{"desc":"1542","fix":"1553"},{"desc":"1544","fix":"1554"},{"desc":"1516","fix":"1555"},"Update the dependencies array to be: [initialSetMember1, initialSetMember2, initialSetMember3, initialSetMember4, initialSetMember5, initialSetMember6, initialSetMember7, initialSetMember8, initialSetMember9, setPositionNo]",{"range":"1556","text":"1557"},"Update the dependencies array to be: [Schools]",{"range":"1558","text":"1559"},"Update the dependencies array to be: [initialSetTeamA, initialSetTeamB]",{"range":"1560","text":"1561"},"Update the dependencies array to be: [loadMember]",{"range":"1562","text":"1563"},"Update the dependencies array to be: [canvasX1, canvasY1, context, flag]",{"range":"1564","text":"1565"},"Update the dependencies array to be: [autoUpdate, tournamentMember]",{"range":"1566","text":"1567"},"Update the dependencies array to be: [initialSetMember, initialSetMember_team2, setPositionNo, setPositionNo_team2]",{"range":"1568","text":"1569"},"Update the dependencies array to be: [canvasX1, canvasY1, context, flag, l, runnerCountState, w]",{"range":"1570","text":"1571"},"Update the dependencies array to be: [urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId]",{"range":"1572","text":"1573"},"Update the dependencies array to be: [trigger, urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId]",{"range":"1574","text":"1575"},"Update the dependencies array to be: [isEmptyFlag, urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId]",{"range":"1576","text":"1577"},"Update the dependencies array to be: [urlTournamentId]",{"range":"1578","text":"1579"},"Update the dependencies array to be: [Schools, Venues, urlTournamentId]",{"range":"1580","text":"1581"},{"range":"1582","text":"1579"},"Update the dependencies array to be: [urlSchoolId, urlTournamentId]",{"range":"1583","text":"1584"},"Update the dependencies array to be: [selectedMember, trigger, uniformNumberArray, urlSchoolId, urlTournamentId]",{"range":"1585","text":"1586"},{"range":"1587","text":"1579"},{"range":"1588","text":"1567"},"Update the dependencies array to be: [uSelectSchool, uSelectGrade, uSelectOption, schoolsData]",{"range":"1589","text":"1590"},{"range":"1591","text":"1569"},"Update the dependencies array to be: [isEmptyFlag, urlSchoolId, urlSchoolId2, urlTournamentId]",{"range":"1592","text":"1593"},"Update the dependencies array to be: [urlGameId, urlSchoolId, urlSchoolId2, useEffectFlag]",{"range":"1594","text":"1595"},{"range":"1596","text":"1579"},{"range":"1597","text":"1581"},"Update the dependencies array to be: [canvasX1, canvasY1, context, deleteball, flag, l, runnerCountState, w]",{"range":"1598","text":"1599"},"Update the dependencies array to be: [context, deleteball, l, runnerCountState, w]",{"range":"1600","text":"1601"},"Update the dependencies array to be: [urlSchoolId, urlSchoolId2, urlTournamentId]",{"range":"1602","text":"1603"},{"range":"1604","text":"1575"},{"range":"1605","text":"1579"},{"range":"1606","text":"1584"},{"range":"1607","text":"1586"},"Update the dependencies array to be: [urlGameId, useEffectFlag]",{"range":"1608","text":"1609"},{"range":"1610","text":"1571"},{"range":"1611","text":"1601"},{"range":"1612","text":"1603"},{"range":"1613","text":"1575"},[11526,11528],"[initialSetMember1, initialSetMember2, initialSetMember3, initialSetMember4, initialSetMember5, initialSetMember6, initialSetMember7, initialSetMember8, initialSetMember9, setPositionNo]",[2233,2235],"[Schools]",[4176,4178],"[initialSetTeamA, initialSetTeamB]",[4992,4994],"[loadMember]",[6052,6078],"[canvasX1, canvasY1, context, flag]",[12488,12500],"[autoUpdate, tournamentMember]",[13848,13850],"[initialSetMember, initialSetMember_team2, setPositionNo, setPositionNo_team2]",[40255,40299],"[canvasX1, canvasY1, context, flag, l, runnerCountState, w]",[40786,40788],"[urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId]",[41137,41146],"[trigger, urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId]",[9489,9491],"[isEmptyFlag, urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId]",[7381,7383],"[urlTournamentId]",[7472,7489],"[Schools, Venues, urlTournamentId]",[8062,8064],[18113,18115],"[urlSchoolId, urlTournamentId]",[18652,18661],"[selectedMember, trigger, uniformNumberArray, urlSchoolId, urlTournamentId]",[3975,3977],[12486,12498],[6473,6517],"[uSelectSchool, uSelectGrade, uSelectOption, schoolsData]",[13848,13850],[9353,9355],"[isEmptyFlag, urlSchoolId, urlSchoolId2, urlTournamentId]",[9604,9619],"[urlGameId, urlSchoolId, urlSchoolId2, useEffectFlag]",[7528,7530],[7619,7636],[40091,40135],"[canvasX1, canvasY1, context, deleteball, flag, l, runnerCountState, w]",[42523,42535],"[context, deleteball, l, runnerCountState, w]",[42981,42983],"[urlSchoolId, urlSchoolId2, urlTournamentId]",[43297,43306],[8062,8064],[18113,18115],[18652,18661],[3943,3958],"[urlGameId, useEffectFlag]",[40018,40062],[42398,42410],[42858,42860],[43183,43192]]
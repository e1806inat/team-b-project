{"ast":null,"code":"import _slicedToArray from\"C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{scoreBoard}from'./comSokuho/scoreBoard';import{outCount}from'./comSokuho/outCount';import{runnerCount}from'./comSokuho/runnerCount';import{freeWrite}from'./comSokuho/freeWrite';import{BaseballButton}from'./comSokuho/baseballButton';import{updateButton}from'./comSokuho/updateButton';import\"./comSokuho/CSS/scoreBoard.css\";import pic from\"../../../../DB/diamond.png\";import{useEffect,useState}from'react';import Popupfield from\"./comSokuho/onisi_popup/onisi_popup\";import GameEndPopup from\"./comSokuho/GameEndPopup/GameEndPopup\";import EditPoint from\"./comSokuho/scoreCorrection/EditPoint\";import OptionButton from'../../../OtherPage/optionFunc/OptionButton';//プルダウン\nimport{PullDown}from'./comSokuho/PullDown/PullDown';import{PullDownMember}from'./comSokuho/PullDown/PullDownMember';import{useSearchParams}from'react-router-dom';//選手読み込み\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var setBatter=function setBatter(setBattingOrder,setBattingOrder2,urlSchoolId,urlSchoolId2,urlGameId,nowPlayingMember,setNowPlayingMember){var ditectPitcher=function ditectPitcher(data){var result=0;data.map(function(data,ind){if(data.position===\"ピッチャー\"){result=ind;}});return result;};fetch(\"http://localhost:5000/member/starting_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:urlGameId,school_id:urlSchoolId})}).then(function(response){return response.json();}).then(function(data1){console.log(data1);setBattingOrder(data1);fetch(\"http://localhost:5000/member/starting_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:urlGameId,school_id:urlSchoolId2})}).then(function(response){return response.json();}).then(function(data2){console.log(data2);setBattingOrder2(data2);nowPlayingMember[0].pitcher=ditectPitcher(data2);nowPlayingMember[1].pitcher=ditectPitcher(data1);setNowPlayingMember(nowPlayingMember);});});};//一時打席情報登録用のテーブル作成\nvar TmpTableCreate=function TmpTableCreate(urlGameId){fetch(\"http://localhost:5000/daseki/tmp_table_create\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({table_name:urlGameId})}).then(function(response){return response.text();}).then(function(data){console.log(data);});};//テーブル存在確認\nvar TmpTableCheck=function TmpTableCheck(urlGameId,TmpTableCreate,TmpDasekiCall,urlTournamentId,urlSchoolId,urlSchoolId2,setNowIningState,setScoreState,setNowOutCountState,registeredMember1,registeredMember2,setNowPlayingMember,battingOrder,battingOrder2,setRunnerCountState){fetch(\"http://localhost:5000/daseki/tmp_table_check\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({table_name:urlGameId})}).then(function(response){return response.text();}).then(function(data){console.log(data);if(data===\"not exist\"){TmpTableCreate(urlGameId);}else if(data===\"exist\"){console.log(data);TmpDasekiCall(urlGameId,urlTournamentId,urlSchoolId,urlSchoolId2,setNowIningState,setScoreState,setNowOutCountState,registeredMember1,registeredMember2,setNowPlayingMember,battingOrder,battingOrder2,setRunnerCountState);}});};////試合情報受け取り（速報用）\nvar TmpDasekiCall=function TmpDasekiCall(urlGameId,urlTournamentId,urlSchoolId,urlSchoolId2,setNowIningState,setScoreState,setNowOutCountState,registeredMember1,registeredMember2,setNowPlayingMember,battingOrder,battingOrder2,setRunnerCountState){fetch(\"http://localhost:5000/daseki/tmp_daseki_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({table_name:urlGameId})}).then(function(response){return response.json();}).then(function(data){console.log(data);var latestDasaki=data[data.length-1];//イニング取得\nif(Math.floor(latestDasaki.inning/100)>=1){setNowIningState([latestDasaki.inning%100-1,Math.floor(latestDasaki.inning/100)-1]);}else{setNowIningState([latestDasaki.inning%10-1,Math.floor(latestDasaki.inning/10)-1]);}//アウトカウント取得\nsetNowOutCountState(latestDasaki.outcount);//ランナー取得\nsetRunnerCountState([latestDasaki.base[0]===\"1\",latestDasaki.base[1]===\"1\",latestDasaki.base[2]===\"1\"]);//スコアの取得\nvar initialSchoolId=data[0].school_id;var _require=require(\"../../../../DB/Score\"),Score=_require.Score;var SolveScore=Score;var inningCount=0;var leastSchoolId=data[0].school_id;data.map(function(u){if(initialSchoolId===u.school_id){if(SolveScore[0][inningCount]===null)SolveScore[0][inningCount]=0;if(leastSchoolId!==u.school_id)inningCount=inningCount+1;console.log(SolveScore[0][inningCount]);SolveScore[0][inningCount]=SolveScore[0][inningCount]+u.score;leastSchoolId=u.school_id;}else{if(SolveScore[1][inningCount]===null)SolveScore[1][inningCount]=0;SolveScore[1][inningCount]=SolveScore[1][inningCount]+u.score;leastSchoolId=u.school_id;}});console.log(SolveScore);setScoreState(SolveScore);//今現在のプレイヤー取得\nif(latestDasaki.inning/100>=2||Math.floor(latestDasaki.inning/10)===2){fetch(\"http://localhost:5000/member/tournament_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({tournament_id:urlTournamentId,school_id:urlSchoolId2})}).then(function(response){return response.json();}).then(function(data){});}else if(Math.floor(latestDasaki.inning/100)===1||Math.floor(latestDasaki.inning/10)===1){fetch(\"http://localhost:5000/member/tournament_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({tournament_id:urlTournamentId,school_id:urlSchoolId})}).then(function(response){return response.json();}).then(function(data){return data;});console.log(latestDasaki.player_id);console.log(registeredMember1.filter(function(u){return u.player_id===6;}));}});};//一時打席情報登録用のテーブルに打席情報登録（UPSERTを使うかも）\nvar DasekiRegister=function DasekiRegister(sendInfo){fetch(\"http://localhost:5000/daseki/daseki_register\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(sendInfo)}).then(function(response){return response.text();}).then(function(data){console.log(data);});};//選手登録された選手読み込む\nvar loadRegisteredMember=function loadRegisteredMember(setRegisteredMember,urlTournamentId,urlSchoolId){fetch(\"http://localhost:5000/member/tournament_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({tournament_id:urlTournamentId,school_id:urlSchoolId})}).then(function(response){return response.json();}).then(function(data){console.log(data);setRegisteredMember(data);});};var canvasSize=1000;var homebase=400;var InputPlayGame=function InputPlayGame(){//urlから値を読み出す\nvar _useSearchParams=useSearchParams(),_useSearchParams2=_slicedToArray(_useSearchParams,1),searchParams=_useSearchParams2[0];var urlTournamentId=searchParams.get(\"urlTournamentId\");var urlTournamentName=searchParams.get(\"urlTournamentName\");var urlSchoolId=searchParams.get(\"urlSchoolId\");var urlSchoolName=searchParams.get(\"urlSchoolName\");var urlSchoolId2=searchParams.get(\"urlSchoolId2\");var urlSchoolName2=searchParams.get(\"urlSchoolName2\");var urlGameId=searchParams.get(\"urlGameId\");//Score記録\nvar _require2=require(\"../../../../DB/Score\"),Score=_require2.Score;var _useState=useState(Score),_useState2=_slicedToArray(_useState,2),scoreState=_useState2[0],setScoreState=_useState2[1];//Scoreの加算値の監視\nvar _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),addScoreState=_useState4[0],setAddScoreState=_useState4[1];//今のイニング\nvar _useState5=useState([0,0]),_useState6=_slicedToArray(_useState5,2),nowIningState=_useState6[0],setNowIningState=_useState6[1];//自由記述内容を監視\nvar _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),freeWriteState=_useState8[0],setFreeWriteState=_useState8[1];//いらんかも\n//自由記述編集モードのフラグ\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),freeWriteModeFlag=_useState10[0],setFreeWriteModeFlag=_useState10[1];//多分打球の種類だと思われる\nvar _useState11=useState(2),_useState12=_slicedToArray(_useState11,2),flag=_useState12[0],setFlag=_useState12[1];//打者の結果を記録する(0:何もなし, 1:ヒット,2:四球, 3:死球)\nvar _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),batterResult=_useState14[0],setBatterResult=_useState14[1];//緑プルダウン用\nvar _useState15=useState(15),_useState16=_slicedToArray(_useState15,2),nowPosition=_useState16[0],setNowPosition=_useState16[1];//アウトカウント\nvar _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),nowOutCountState=_useState18[0],setNowOutCountState=_useState18[1];//ランナーカウント\nvar _useState19=useState([false,false,false]),_useState20=_slicedToArray(_useState19,2),runnerCountState=_useState20[0],setRunnerCountState=_useState20[1];//選手登録情報を読み込む\nvar _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),registeredMember1=_useState22[0],setRegisteredMember1=_useState22[1];var _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),registeredMember2=_useState24[0],setRegisteredMember2=_useState24[1];//打順と打者のリスト\nvar _useState25=useState([[{player_name_kanji:'丹羽 長秀'},{player_name_kanji:'柴田 勝家'}],0]),_useState26=_slicedToArray(_useState25,2),battingOrder=_useState26[0],setBattingOrder=_useState26[1];var _useState27=useState([[{player_name_kanji:'丹羽 長秀'},{player_name_kanji:'柴田 勝家'}],0]),_useState28=_slicedToArray(_useState27,2),battingOrder2=_useState28[0],setBattingOrder2=_useState28[1];//今の打順と今のピッチャーが誰なのかを2チーム文記録する\nvar _useState29=useState([{batter:0,pitcher:0},{batter:0,pitcher:0}]),_useState30=_slicedToArray(_useState29,2),nowPlayingMember=_useState30[0],setNowPlayingMember=_useState30[1];//代打フラグ 0なら代打でない 1なら代打\nvar _useState31=useState(0),_useState32=_slicedToArray(_useState31,2),isPinch=_useState32[0],setIsPinch=_useState32[1];//画面解像度取得\nvar sw=document.documentElement.clientWidth;// 画面の横幅\nvar sh=document.documentElement.clientHeight;// 画面の高さ\nconsole.log(sw+\"+\"+sh);// contextを状態として持つ\nvar _useState33=useState(null),_useState34=_slicedToArray(_useState33,2),context=_useState34[0],setContext=_useState34[1];var _useState35=useState(0),_useState36=_slicedToArray(_useState35,2),canvasX1=_useState36[0],setcanvasX1=_useState36[1];var _useState37=useState(0),_useState38=_slicedToArray(_useState37,2),canvasY1=_useState38[0],setcanvasY1=_useState38[1];//一つのStateで管理しようぜ的な試み\n//const [canvasXY, setCanvasXY] = useState({x:0, y:0})\n// コンポーネントの初期化完了後コンポーネント状態にコンテキストを登録\nuseEffect(function(){var canvas=document.getElementById(\"canvas\");var canvasContext=canvas.getContext(\"2d\");setContext(canvasContext);canvas.addEventListener(\"click\",function(e){var rect=e.target.getBoundingClientRect();// ブラウザ上での座標を求める\nvar viewX=e.clientX-rect.left,viewY=e.clientY-rect.top;// 表示サイズとキャンバスの実サイズの比率を求める\nvar scaleWidth=canvas.clientWidth/canvas.width,scaleHeight=canvas.clientHeight/canvas.height;// ブラウザ上でのクリック座標をキャンバス上に変換\nvar canvasX=Math.floor(viewX/scaleWidth),canvasY=Math.floor(viewY/scaleHeight);console.log(canvasX,canvasY);setcanvasX1(canvasX);setcanvasY1(canvasY);});},[]);// 状態にコンテキストが登録されたらそれに対して操作できる\nuseEffect(function(){if(context!==null){//setLoaded(true)\n//}\n// 波線描画\n// 0度状態でキャンバス中心〜マウス座標までの距離分の波線を描画して、マウス座標との角度分、回転する\nvar drawWaveLine=function drawWaveLine(x,y,mx,my,amplitude,waveLen,color,ctx){var BEGIN=0,CTRL=1,END=2;var x1=0,y1=1;console.log(\"関数内\");var distance=calcDistance(x,y,mx,my);var cycle=Math.floor(distance/waveLen);var ps=[[x,y],[0,0],[x,y]];ctx.save();ctx.strokeStyle=color;ctx.beginPath();ctx.moveTo(ps[BEGIN][x1],ps[BEGIN][y1]);var rad=calcRadian(x,y,mx,my);if(0!==rad){ctx.translate(x,y);ctx.rotate(rad);ctx.translate(-x,-y);}for(var i=0;i<cycle;i++){ps[END][x1]+=waveLen;ps[CTRL][x1]=ps[BEGIN][x1]+(ps[END][x1]-ps[BEGIN][x1])*0.5;ps[CTRL][y1]=ps[BEGIN][y1]+(i%2!==0?-amplitude:amplitude);ctx.quadraticCurveTo(ps[CTRL][x1],ps[CTRL][y1],ps[END][x1],ps[END][y1]);ps[BEGIN][x1]=ps[END][x1];ps[BEGIN][y1]=ps[END][y1];}ps[END][x1]+=distance-calcDistance(x,y,ps[END][x1],ps[END][y1]);ps[CTRL][x1]=ps[BEGIN][x1]+(ps[END][x1]-ps[BEGIN][x1])*0.5;ps[CTRL][y1]=ps[BEGIN][y1]+(cycle%2!==0?-amplitude:amplitude);ctx.quadraticCurveTo(ps[CTRL][x1],ps[CTRL][y1],ps[END][x1],ps[END][y1]);ctx.stroke();ctx.restore();};// 2点間座標からラジアン算出\nvar calcRadian=function calcRadian(x,y,mx,my){return Math.atan2(my-y,mx-x);};// 2点間座標の距離算出\nvar calcDistance=function calcDistance(x,y,mx,my){return Math.hypot(my-y,mx-x);};//const img = new Image()\n//img.src = \"img.jpg\" // 描画する画像など\n//img.onload = () => {\n//context.drawImage(img, 0, 0)\n// 更にこれに続いて何か処理をしたい場合\n//削除\ncontext.clearRect(0,0,canvasSize,canvasSize);//緑グラウンド\ncontext.beginPath();context.fillStyle=\"green\";context.moveTo(homebase,homebase);context.arc(homebase,homebase,homebase,-Math.PI/4,5*Math.PI/4,true);context.closePath();context.fill();//茶グラウンド\ncontext.beginPath();context.fillStyle=\"sienna\";context.moveTo(homebase,homebase);context.arc(homebase,homebase,3.5*homebase/5,-Math.PI/4,5*Math.PI/4,true);context.closePath();context.fill();//白線\ncontext.beginPath();context.moveTo(homebase,homebase);context.lineTo(homebase*5/4,homebase*3/4);context.lineTo(homebase,homebase/2);context.lineTo(homebase*3/4,homebase*3/4);context.strokeStyle=\"white\";context.lineWidth=2;context.closePath();context.stroke();var w=0.03*homebase;//ベースの幅\nvar margin=10;//ベース位置調整用\n//ベースの色\nvar baseColor2=[];for(var i=0;i<3;i++){if(runnerCountState[i]){baseColor2[i]=\"blue\";console.log(baseColor2[i]);}else{baseColor2[i]=\"white\";}}context.strokeStyle=\"black\";//３塁ベース\ncontext.fillStyle=baseColor2[2];context.beginPath();context.moveTo(homebase*3/4,homebase*3/4-margin);context.lineTo(homebase*3/4-w,homebase*3/4+w-margin);context.lineTo(homebase*3/4,homebase*3/4+w*2-margin);context.lineTo(homebase*3/4+w,homebase*3/4+w-margin);context.closePath();context.fill();context.lineWidth=1;context.stroke();//2塁ベース\ncontext.fillStyle=baseColor2[1];context.beginPath();context.moveTo(homebase,homebase/2-margin);context.lineTo(homebase-w,homebase/2+w-margin);context.lineTo(homebase,homebase/2+w*2-margin);context.lineTo(homebase+w,homebase/2+w-margin);context.closePath();context.fill();context.stroke();//1塁ベース\ncontext.fillStyle=baseColor2[0];context.beginPath();context.moveTo(homebase*5/4,homebase*3/4-margin);context.lineTo(homebase*5/4-w,homebase*3/4+w-margin);context.lineTo(homebase*5/4,homebase*3/4+w*2-margin);context.lineTo(homebase*5/4+w,homebase*3/4+w-margin);context.closePath();context.fill();context.stroke();context.fillStyle=\"white\";//ホームベース\ncontext.beginPath();context.moveTo(homebase+w*2/3,homebase-w*2/3);context.lineTo(homebase-w*2/3,homebase-w*2/3);context.lineTo(homebase-w*2/3,homebase+w/3);context.lineTo(homebase,homebase+w);context.lineTo(homebase+w*2/3,homebase+w/3);context.closePath();context.fill();context.stroke();//打球\ncontext.beginPath();context.moveTo(homebase,homebase);// let flag = 2;   //１が直線、２がフライ、3がゴロ\nif(flag===1){console.log(\"flag1\");context.lineTo(canvasX1,canvasY1);}if(flag===2){var start={x:500,y:500};var cp={x:500,y:start.y/5*3};//ここで曲がり具合調整\nconsole.log(\"flag2\");context.quadraticCurveTo(cp.x,cp.y,canvasX1,canvasY1);}if(flag===3){console.log(\"flag3\");drawWaveLine(500,500,canvasX1,canvasY1,20,20,\"red\",context);}context.strokeStyle=\"red\";context.lineWidth=5;context.stroke();}},[canvasX1,canvasY1,flag,runnerCountState]);useEffect(function(){//データベースからデータをもらうために呼び出す\nsetBatter(setBattingOrder,setBattingOrder2,urlSchoolId,urlSchoolId2,urlGameId,nowPlayingMember,setNowPlayingMember);loadRegisteredMember(setRegisteredMember1,urlTournamentId,urlSchoolId);loadRegisteredMember(setRegisteredMember2,urlTournamentId,urlSchoolId2);//テーブル存在確認\nTmpTableCheck(urlGameId,TmpTableCreate,TmpDasekiCall,urlTournamentId,urlSchoolId,urlSchoolId2,setNowIningState,setScoreState,setNowOutCountState,registeredMember1,registeredMember2,setNowPlayingMember,battingOrder,battingOrder2,setRunnerCountState);//一時打席情報登録用のテーブル作成\n},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"InputPlayGame\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u901F\\u5831\\u5165\\u529B\\u753B\\u9762\"}),/*#__PURE__*/_jsx(EditPoint,{}),/*#__PURE__*/_jsx(OptionButton,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"parts\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"scoreBoard\",children:scoreBoard(scoreState,nowIningState,urlSchoolName,urlSchoolName2)}),/*#__PURE__*/_jsx(\"div\",{className:\"optionButtons\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"outCountsAndRunnerCounts\",children:[outCount(nowOutCountState,setNowOutCountState),runnerCount(runnerCountState,setRunnerCountState)]}),/*#__PURE__*/_jsx(\"div\",{className:\"BatterAndPitcher\"}),/*#__PURE__*/_jsx(\"div\",{className:\"BatterPitcher\",children:/*#__PURE__*/_jsx(PullDownMember,{battingOrder:battingOrder,battingOrder2:battingOrder2,setBattingOrder:setBattingOrder,registeredMember1:registeredMember1,registeredMember2:registeredMember2,nowIningState:nowIningState,nowPlayingMember:nowPlayingMember,setNowPlayingMember:setNowPlayingMember,setIsPinch:setIsPinch})}),/*#__PURE__*/_jsx(\"div\",{className:\"freeWrite\",children:freeWrite(freeWriteState,setFreeWriteState,freeWriteModeFlag,setFreeWriteModeFlag)}),/*#__PURE__*/_jsx(PullDown,{nowPosition:nowPosition,setNowPosition:setNowPosition,setcanvasX1:setcanvasX1,setcanvasY1:setcanvasY1,setFlag:setFlag,setFreeWriteState:setFreeWriteState,setBatterResult:setBatterResult,addScoreState:addScoreState,GameEndPopup_field:GameEndPopup}),/*#__PURE__*/_jsx(\"div\",{className:\"diamond\",children:/*#__PURE__*/_jsx(\"canvas\",{width:\"800\",height:\"800\",id:\"canvas\",className:\"diamondPng\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Buttons\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"baseballButtons\",children:BaseballButton(addScoreState,setAddScoreState)}),/*#__PURE__*/_jsx(\"div\",{className:\"updateButton\",children:/*#__PURE__*/_jsx(Popupfield,{nowIningState:nowIningState//今が何回なのか\n,setNowIningState:setNowIningState//今が何回なのかの変更関数\n,addScoreState:addScoreState,setAddScoreState:setAddScoreState,scoreState:scoreState,setScoreState:setScoreState,nowOutCountState:nowOutCountState,setNowOutCountState:setNowOutCountState,DasekiRegister:DasekiRegister,urlGameId:urlGameId,urlSchoolId:urlSchoolId,urlSchoolId2:urlSchoolId2,nowPlayingMember:nowPlayingMember,setNowPlayingMember:setNowPlayingMember,battingOrder:battingOrder,battingOrder2:battingOrder2,runnerCountState:runnerCountState,freeWriteState:freeWriteState,setFreeWriteState:setFreeWriteState,canvasX1:canvasX1,setcanvasX1:setcanvasX1,canvasY1:canvasY1,setcanvasY1:setcanvasY1,flag:flag,batterResult:batterResult,setBatterResult:setBatterResult,isPinch:isPinch,setIsPinch:setIsPinch})})]})]})]});};export default InputPlayGame;","map":{"version":3,"names":["scoreBoard","outCount","runnerCount","freeWrite","BaseballButton","updateButton","pic","useEffect","useState","Popupfield","GameEndPopup","EditPoint","OptionButton","PullDown","PullDownMember","useSearchParams","setBatter","setBattingOrder","setBattingOrder2","urlSchoolId","urlSchoolId2","urlGameId","nowPlayingMember","setNowPlayingMember","ditectPitcher","data","result","map","ind","position","fetch","method","mode","headers","body","JSON","stringify","game_id","school_id","then","response","json","data1","console","log","data2","pitcher","TmpTableCreate","table_name","text","TmpTableCheck","TmpDasekiCall","urlTournamentId","setNowIningState","setScoreState","setNowOutCountState","registeredMember1","registeredMember2","battingOrder","battingOrder2","setRunnerCountState","latestDasaki","length","Math","floor","inning","outcount","base","initialSchoolId","require","Score","SolveScore","inningCount","leastSchoolId","u","score","tournament_id","player_id","filter","DasekiRegister","sendInfo","loadRegisteredMember","setRegisteredMember","canvasSize","homebase","InputPlayGame","searchParams","get","urlTournamentName","urlSchoolName","urlSchoolName2","scoreState","addScoreState","setAddScoreState","nowIningState","freeWriteState","setFreeWriteState","freeWriteModeFlag","setFreeWriteModeFlag","flag","setFlag","batterResult","setBatterResult","nowPosition","setNowPosition","nowOutCountState","runnerCountState","setRegisteredMember1","setRegisteredMember2","player_name_kanji","batter","isPinch","setIsPinch","sw","document","documentElement","clientWidth","sh","clientHeight","context","setContext","canvasX1","setcanvasX1","canvasY1","setcanvasY1","canvas","getElementById","canvasContext","getContext","addEventListener","e","rect","target","getBoundingClientRect","viewX","clientX","left","viewY","clientY","top","scaleWidth","width","scaleHeight","height","canvasX","canvasY","drawWaveLine","x","y","mx","my","amplitude","waveLen","color","ctx","BEGIN","CTRL","END","x1","y1","distance","calcDistance","cycle","ps","save","strokeStyle","beginPath","moveTo","rad","calcRadian","translate","rotate","i","quadraticCurveTo","stroke","restore","atan2","hypot","clearRect","fillStyle","arc","PI","closePath","fill","lineTo","lineWidth","w","margin","baseColor2","start","cp"],"sources":["C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project/frontend/src/AllPage/InputAll/Sokuho/SokuhoPlaygame/InputPlayGame.jsx"],"sourcesContent":["import { scoreBoard } from './comSokuho/scoreBoard';\r\nimport { outCount } from './comSokuho/outCount'\r\nimport { runnerCount } from './comSokuho/runnerCount';\r\nimport { freeWrite } from './comSokuho/freeWrite'\r\nimport { BaseballButton } from './comSokuho/baseballButton'\r\nimport { updateButton } from './comSokuho/updateButton'\r\nimport \"./comSokuho/CSS/scoreBoard.css\"\r\nimport pic from \"../../../../DB/diamond.png\"\r\nimport { useEffect, useState } from 'react';\r\nimport Popupfield from \"./comSokuho/onisi_popup/onisi_popup\";\r\nimport GameEndPopup from \"./comSokuho/GameEndPopup/GameEndPopup\"\r\nimport EditPoint from \"./comSokuho/scoreCorrection/EditPoint\"\r\nimport OptionButton from '../../../OtherPage/optionFunc/OptionButton';\r\n\r\n//プルダウン\r\nimport { PullDown } from './comSokuho/PullDown/PullDown'\r\nimport { PullDownMember } from './comSokuho/PullDown/PullDownMember'\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\n\r\n//選手読み込み\r\nconst setBatter = (setBattingOrder, setBattingOrder2, urlSchoolId, urlSchoolId2, urlGameId, nowPlayingMember, setNowPlayingMember) => {\r\n    const ditectPitcher = (data) => {\r\n        let result = 0\r\n        data.map((data, ind) => {\r\n            if (data.position === \"ピッチャー\") {\r\n                result = ind\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n\r\n    fetch(\"http://localhost:5000/member/starting_member_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data1) => {\r\n            console.log(data1);\r\n            setBattingOrder(data1)\r\n\r\n            fetch(\"http://localhost:5000/member/starting_member_call\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId2 }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data2) => {\r\n                    console.log(data2);\r\n                    setBattingOrder2(data2)\r\n                    nowPlayingMember[0].pitcher = ditectPitcher(data2)\r\n                    nowPlayingMember[1].pitcher = ditectPitcher(data1)\r\n                    setNowPlayingMember(nowPlayingMember)\r\n                })\r\n        })\r\n}\r\n\r\n//一時打席情報登録用のテーブル作成\r\nconst TmpTableCreate = (urlGameId) => {\r\n\r\n    fetch(\"http://localhost:5000/daseki/tmp_table_create\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(data) })\r\n}\r\n\r\n//テーブル存在確認\r\nconst TmpTableCheck = (urlGameId, TmpTableCreate, TmpDasekiCall, urlTournamentId, urlSchoolId, urlSchoolId2,\r\n    setNowIningState, setScoreState, setNowOutCountState, registeredMember1, registeredMember2,\r\n    setNowPlayingMember, battingOrder, battingOrder2, setRunnerCountState\r\n) => {\r\n\r\n    fetch(\"http://localhost:5000/daseki/tmp_table_check\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n            console.log(data)\r\n            if (data === \"not exist\") { TmpTableCreate(urlGameId) }\r\n            else if (data === \"exist\") {\r\n                console.log(data);\r\n                TmpDasekiCall(urlGameId, urlTournamentId, urlSchoolId, urlSchoolId2,\r\n                    setNowIningState, setScoreState, setNowOutCountState, registeredMember1, registeredMember2,\r\n                    setNowPlayingMember, battingOrder, battingOrder2, setRunnerCountState\r\n                )\r\n            }\r\n        })\r\n}\r\n\r\n////試合情報受け取り（速報用）\r\nconst TmpDasekiCall = (urlGameId, urlTournamentId, urlSchoolId, urlSchoolId2,\r\n    setNowIningState, setScoreState, setNowOutCountState, registeredMember1, registeredMember2,\r\n    setNowPlayingMember, battingOrder, battingOrder2, setRunnerCountState) => {\r\n\r\n    fetch(\"http://localhost:5000/daseki/tmp_daseki_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log(data)\r\n\r\n            let latestDasaki = data[data.length - 1]\r\n\r\n            //イニング取得\r\n            if (Math.floor(latestDasaki.inning / 100) >= 1) {\r\n                setNowIningState([latestDasaki.inning % 100 - 1, Math.floor(latestDasaki.inning / 100) - 1])\r\n            }\r\n            else {\r\n                setNowIningState([latestDasaki.inning % 10 - 1, Math.floor(latestDasaki.inning / 10) - 1])\r\n            }\r\n\r\n            //アウトカウント取得\r\n            setNowOutCountState(latestDasaki.outcount)\r\n\r\n            //ランナー取得\r\n            setRunnerCountState([latestDasaki.base[0] === \"1\", latestDasaki.base[1] === \"1\", latestDasaki.base[2] === \"1\"])\r\n\r\n            //スコアの取得\r\n            let initialSchoolId = data[0].school_id;\r\n            const { Score } = require(\"../../../../DB/Score\")\r\n            let SolveScore = Score\r\n            let inningCount = 0\r\n            let leastSchoolId = data[0].school_id\r\n            data.map((u) => {\r\n                if (initialSchoolId === u.school_id) {\r\n                    if (SolveScore[0][inningCount] === null) SolveScore[0][inningCount] = 0\r\n                    if (leastSchoolId !== u.school_id) inningCount = inningCount + 1\r\n                    console.log(SolveScore[0][inningCount])\r\n                    SolveScore[0][inningCount] = SolveScore[0][inningCount] + u.score\r\n                    leastSchoolId = u.school_id\r\n                }\r\n                else {\r\n                    if (SolveScore[1][inningCount] === null) SolveScore[1][inningCount] = 0\r\n                    SolveScore[1][inningCount] = SolveScore[1][inningCount] + u.score\r\n                    leastSchoolId = u.school_id\r\n                }\r\n            })\r\n\r\n            console.log(SolveScore)\r\n            setScoreState(SolveScore)\r\n\r\n\r\n            //今現在のプレイヤー取得\r\n            if ((latestDasaki.inning / 100 >= 2) || (Math.floor(latestDasaki.inning / 10) === 2)) {\r\n                fetch(\"http://localhost:5000/member/tournament_member_call\", {\r\n                    method: \"POST\",\r\n                    mode: \"cors\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId2 }),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => { })\r\n            }\r\n            else if ((Math.floor(latestDasaki.inning / 100) === 1) || (Math.floor(latestDasaki.inning / 10) === 1)) {\r\n                fetch(\"http://localhost:5000/member/tournament_member_call\", {\r\n                    method: \"POST\",\r\n                    mode: \"cors\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((data) => { return data })\r\n\r\n                console.log(latestDasaki.player_id)\r\n                console.log(registeredMember1.filter((u) => u.player_id === 6))\r\n            }\r\n        })\r\n}\r\n\r\n//一時打席情報登録用のテーブルに打席情報登録（UPSERTを使うかも）\r\nconst DasekiRegister = (sendInfo) => {\r\n\r\n    fetch(\"http://localhost:5000/daseki/daseki_register\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(sendInfo),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n            console.log(data)\r\n        })\r\n}\r\n\r\n\r\n//選手登録された選手読み込む\r\nconst loadRegisteredMember = (setRegisteredMember, urlTournamentId, urlSchoolId) => {\r\n\r\n    fetch(\"http://localhost:5000/member/tournament_member_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", },\r\n        body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => { console.log(data); setRegisteredMember(data) })\r\n}\r\n\r\n\r\n\r\nconst canvasSize = 1000;\r\nconst homebase = 400;\r\n\r\nconst InputPlayGame = () => {\r\n    //urlから値を読み出す\r\n    const [searchParams] = useSearchParams();\r\n    const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n    const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n    const urlSchoolId = searchParams.get(\"urlSchoolId\")\r\n    const urlSchoolName = searchParams.get(\"urlSchoolName\")\r\n    const urlSchoolId2 = searchParams.get(\"urlSchoolId2\")\r\n    const urlSchoolName2 = searchParams.get(\"urlSchoolName2\")\r\n    const urlGameId = searchParams.get(\"urlGameId\")\r\n\r\n    //Score記録\r\n    const { Score } = require(\"../../../../DB/Score\")\r\n    const [scoreState, setScoreState] = useState(Score)\r\n\r\n    //Scoreの加算値の監視\r\n    const [addScoreState, setAddScoreState] = useState(0)\r\n\r\n    //今のイニング\r\n    const [nowIningState, setNowIningState] = useState([0, 0])\r\n\r\n    //自由記述内容を監視\r\n    const [freeWriteState, setFreeWriteState] = useState(\"\")//いらんかも\r\n\r\n    //自由記述編集モードのフラグ\r\n    const [freeWriteModeFlag, setFreeWriteModeFlag] = useState(false)\r\n\r\n    //多分打球の種類だと思われる\r\n    const [flag, setFlag] = useState(2);\r\n\r\n    //打者の結果を記録する(0:何もなし, 1:ヒット,2:四球, 3:死球)\r\n    const [batterResult, setBatterResult] = useState(0)\r\n\r\n\r\n    //緑プルダウン用\r\n    const [nowPosition, setNowPosition] = useState(15)\r\n\r\n    //アウトカウント\r\n    const [nowOutCountState, setNowOutCountState] = useState(0)\r\n\r\n    //ランナーカウント\r\n    const [runnerCountState, setRunnerCountState] = useState([false, false, false])\r\n\r\n    //選手登録情報を読み込む\r\n    const [registeredMember1, setRegisteredMember1] = useState([])\r\n    const [registeredMember2, setRegisteredMember2] = useState([])\r\n\r\n    //打順と打者のリスト\r\n    const [battingOrder, setBattingOrder] = useState([[{ player_name_kanji: '丹羽 長秀' }, { player_name_kanji: '柴田 勝家' }], 0])\r\n    const [battingOrder2, setBattingOrder2] = useState([[{ player_name_kanji: '丹羽 長秀' }, { player_name_kanji: '柴田 勝家' }], 0])\r\n\r\n    //今の打順と今のピッチャーが誰なのかを2チーム文記録する\r\n    const [nowPlayingMember, setNowPlayingMember] = useState([{ batter: 0, pitcher: 0 }, { batter: 0, pitcher: 0 }])\r\n\r\n    //代打フラグ 0なら代打でない 1なら代打\r\n    const [isPinch, setIsPinch] = useState(0)\r\n\r\n    //画面解像度取得\r\n    var sw = document.documentElement.clientWidth; // 画面の横幅\r\n    var sh = document.documentElement.clientHeight; // 画面の高さ\r\n    console.log(sw + \"+\" + sh)\r\n\r\n    // contextを状態として持つ\r\n    const [context, setContext] = useState(null)\r\n\r\n\r\n    const [canvasX1, setcanvasX1] = useState(0)\r\n    const [canvasY1, setcanvasY1] = useState(0)\r\n    //一つのStateで管理しようぜ的な試み\r\n    //const [canvasXY, setCanvasXY] = useState({x:0, y:0})\r\n\r\n    // コンポーネントの初期化完了後コンポーネント状態にコンテキストを登録\r\n\r\n    useEffect(() => {\r\n        const canvas = document.getElementById(\"canvas\")\r\n        const canvasContext = canvas.getContext(\"2d\")\r\n        setContext(canvasContext)\r\n\r\n\r\n\r\n        canvas.addEventListener(\"click\", e => {\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            // ブラウザ上での座標を求める\r\n            const viewX = e.clientX - rect.left,\r\n                viewY = e.clientY - rect.top;\r\n\r\n            // 表示サイズとキャンバスの実サイズの比率を求める\r\n            const scaleWidth = canvas.clientWidth / canvas.width,\r\n                scaleHeight = canvas.clientHeight / canvas.height;\r\n\r\n            // ブラウザ上でのクリック座標をキャンバス上に変換\r\n            const canvasX = Math.floor(viewX / scaleWidth),\r\n                canvasY = Math.floor(viewY / scaleHeight);\r\n\r\n            console.log(canvasX, canvasY);\r\n            setcanvasX1(canvasX);\r\n            setcanvasY1(canvasY);\r\n        });\r\n    }, [])\r\n\r\n\r\n\r\n    // 状態にコンテキストが登録されたらそれに対して操作できる\r\n    useEffect(() => {\r\n        if (context !== null) {\r\n            //const img = new Image()\r\n            //img.src = \"img.jpg\" // 描画する画像など\r\n\r\n\r\n            //img.onload = () => {\r\n\r\n            //context.drawImage(img, 0, 0)\r\n            // 更にこれに続いて何か処理をしたい場合\r\n\r\n            //削除\r\n            context.clearRect(0, 0, canvasSize, canvasSize);\r\n\r\n            //緑グラウンド\r\n            context.beginPath();\r\n            context.fillStyle = \"green\";\r\n            context.moveTo(homebase, homebase);\r\n            context.arc(homebase, homebase, homebase, -Math.PI / 4, 5 * Math.PI / 4, true);\r\n            context.closePath();\r\n            context.fill();\r\n\r\n            //茶グラウンド\r\n            context.beginPath();\r\n            context.fillStyle = \"sienna\";\r\n            context.moveTo(homebase, homebase);\r\n            context.arc(homebase, homebase, 3.5 * homebase / 5, -Math.PI / 4, 5 * Math.PI / 4, true);\r\n            context.closePath();\r\n            context.fill();\r\n\r\n            //白線\r\n            context.beginPath();\r\n            context.moveTo(homebase, homebase);\r\n            context.lineTo(homebase * 5 / 4, homebase * 3 / 4);\r\n            context.lineTo(homebase, homebase / 2);\r\n            context.lineTo(homebase * 3 / 4, homebase * 3 / 4);\r\n            context.strokeStyle = \"white\";\r\n            context.lineWidth = 2;\r\n            context.closePath();\r\n            context.stroke();\r\n\r\n\r\n            const w = 0.03 * homebase;  //ベースの幅\r\n            const margin = 10;    //ベース位置調整用\r\n\r\n            //ベースの色\r\n            let baseColor2 = [];\r\n            for (let i = 0; i < 3; i++) {\r\n                if (runnerCountState[i]) {\r\n                    baseColor2[i] = \"blue\";\r\n                    console.log(baseColor2[i]);\r\n                }\r\n                else {\r\n                    baseColor2[i] = \"white\";\r\n                }\r\n            }\r\n\r\n\r\n            context.strokeStyle = \"black\";\r\n\r\n            //３塁ベース\r\n            context.fillStyle = baseColor2[2];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 3 / 4, homebase * 3 / 4 - margin);\r\n            context.lineTo(homebase * 3 / 4 - w, homebase * 3 / 4 + w - margin);\r\n            context.lineTo(homebase * 3 / 4, homebase * 3 / 4 + w * 2 - margin);\r\n            context.lineTo(homebase * 3 / 4 + w, homebase * 3 / 4 + w - margin);\r\n            context.closePath();\r\n            context.fill();\r\n            context.lineWidth = 1;\r\n            context.stroke();\r\n\r\n            //2塁ベース\r\n            context.fillStyle = baseColor2[1];\r\n            context.beginPath();\r\n            context.moveTo(homebase, homebase / 2 - margin);\r\n            context.lineTo(homebase - w, homebase / 2 + w - margin);\r\n            context.lineTo(homebase, homebase / 2 + w * 2 - margin);\r\n            context.lineTo(homebase + w, homebase / 2 + w - margin);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            //1塁ベース\r\n            context.fillStyle = baseColor2[0];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 5 / 4, homebase * 3 / 4 - margin);\r\n            context.lineTo(homebase * 5 / 4 - w, homebase * 3 / 4 + w - margin);\r\n            context.lineTo(homebase * 5 / 4, homebase * 3 / 4 + w * 2 - margin);\r\n            context.lineTo(homebase * 5 / 4 + w, homebase * 3 / 4 + w - margin);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            context.fillStyle = \"white\";\r\n            //ホームベース\r\n            context.beginPath();\r\n            context.moveTo(homebase + w * 2 / 3, homebase - w * 2 / 3);\r\n            context.lineTo(homebase - w * 2 / 3, homebase - w * 2 / 3);\r\n            context.lineTo(homebase - w * 2 / 3, homebase + w / 3);\r\n            context.lineTo(homebase, homebase + w);\r\n            context.lineTo(homebase + w * 2 / 3, homebase + w / 3);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n\r\n            //打球\r\n            context.beginPath();\r\n            context.moveTo(homebase, homebase);\r\n\r\n            // let flag = 2;   //１が直線、２がフライ、3がゴロ\r\n\r\n            if (flag === 1) {\r\n                console.log(\"flag1\")\r\n                context.lineTo(canvasX1, canvasY1)\r\n            }\r\n            if (flag === 2) {\r\n                let start = { x: 500, y: 500 };\r\n                let cp = { x: 500, y: start.y / 5 * 3 };    //ここで曲がり具合調整\r\n                console.log(\"flag2\")\r\n                context.quadraticCurveTo(cp.x, cp.y, canvasX1, canvasY1);\r\n            }\r\n            if (flag === 3) {\r\n                console.log(\"flag3\")\r\n                drawWaveLine(500, 500, canvasX1, canvasY1, 20, 20, \"red\", context);\r\n            }\r\n\r\n            context.strokeStyle = \"red\";\r\n            context.lineWidth = 5;\r\n            context.stroke();\r\n\r\n            //setLoaded(true)\r\n            //}\r\n\r\n\r\n\r\n\r\n            // 波線描画\r\n            // 0度状態でキャンバス中心〜マウス座標までの距離分の波線を描画して、マウス座標との角度分、回転する\r\n\r\n            function drawWaveLine(x, y, mx, my, amplitude, waveLen, color, ctx) {\r\n                const BEGIN = 0, CTRL = 1, END = 2;\r\n                const x1 = 0, y1 = 1;\r\n                console.log(\"関数内\")\r\n                var distance = calcDistance(x, y, mx, my);\r\n                var cycle = Math.floor(distance / waveLen);\r\n                var ps = [[x, y], [0, 0], [x, y]];\r\n\r\n                ctx.save();\r\n                ctx.strokeStyle = color;\r\n                ctx.beginPath();\r\n\r\n                ctx.moveTo(ps[BEGIN][x1], ps[BEGIN][y1]);\r\n\r\n                var rad = calcRadian(x, y, mx, my);\r\n                if (0 !== rad) {\r\n                    ctx.translate(x, y);\r\n                    ctx.rotate(rad);\r\n                    ctx.translate(-x, -y);\r\n                }\r\n\r\n                for (var i = 0; i < cycle; i++) {\r\n                    ps[END][x1] += waveLen;\r\n                    ps[CTRL][x1] = ps[BEGIN][x1] + ((ps[END][x1] - ps[BEGIN][x1]) * 0.5);\r\n                    ps[CTRL][y1] = ps[BEGIN][y1] + ((i % 2 !== 0) ? -amplitude : amplitude);\r\n\r\n                    ctx.quadraticCurveTo(ps[CTRL][x1], ps[CTRL][y1], ps[END][x1], ps[END][y1]);\r\n\r\n                    ps[BEGIN][x1] = ps[END][x1];\r\n                    ps[BEGIN][y1] = ps[END][y1];\r\n                }\r\n\r\n                ps[END][x1] += distance - calcDistance(x, y, ps[END][x1], ps[END][y1]);\r\n                ps[CTRL][x1] = ps[BEGIN][x1] + ((ps[END][x1] - ps[BEGIN][x1]) * 0.5);\r\n                ps[CTRL][y1] = ps[BEGIN][y1] + (((cycle) % 2 !== 0) ? -amplitude : amplitude);\r\n\r\n                ctx.quadraticCurveTo(ps[CTRL][x1], ps[CTRL][y1], ps[END][x1], ps[END][y1]);\r\n\r\n                ctx.stroke();\r\n                ctx.restore();\r\n            }\r\n\r\n            // 2点間座標からラジアン算出\r\n            function calcRadian(x, y, mx, my) {\r\n                return Math.atan2(my - y, mx - x);\r\n            }\r\n\r\n            // 2点間座標の距離算出\r\n            function calcDistance(x, y, mx, my) {\r\n                return Math.hypot(my - y, mx - x);\r\n            }\r\n        }\r\n    }, [canvasX1, canvasY1, flag, runnerCountState])\r\n\r\n    useEffect(() => {\r\n        //データベースからデータをもらうために呼び出す\r\n        setBatter(setBattingOrder, setBattingOrder2, urlSchoolId, urlSchoolId2, urlGameId, nowPlayingMember, setNowPlayingMember)\r\n        loadRegisteredMember(setRegisteredMember1, urlTournamentId, urlSchoolId)\r\n        loadRegisteredMember(setRegisteredMember2, urlTournamentId, urlSchoolId2)\r\n\r\n        //テーブル存在確認\r\n        TmpTableCheck(urlGameId, TmpTableCreate, TmpDasekiCall, urlTournamentId, urlSchoolId, urlSchoolId2,\r\n            setNowIningState, setScoreState, setNowOutCountState, registeredMember1, registeredMember2,\r\n            setNowPlayingMember, battingOrder, battingOrder2, setRunnerCountState,\r\n        )\r\n        //一時打席情報登録用のテーブル作成\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"InputPlayGame\">\r\n            <h1>速報入力画面</h1>\r\n            <EditPoint></EditPoint>\r\n            <OptionButton></OptionButton>\r\n            <div className=\"parts\">\r\n                <div className=\"scoreBoard\">\r\n                    {scoreBoard(scoreState, nowIningState, urlSchoolName, urlSchoolName2)}\r\n                </div>\r\n                <div className=\"optionButtons\">\r\n                </div>\r\n                <div className=\"outCountsAndRunnerCounts\">\r\n                    {outCount(nowOutCountState, setNowOutCountState)}\r\n                    {runnerCount(runnerCountState, setRunnerCountState)}\r\n                </div>\r\n                <div className=\"BatterAndPitcher\">\r\n\r\n                </div>\r\n                <div className=\"BatterPitcher\">\r\n                    {/* プルダウン1  選手を表示するためのプルダウン */}\r\n                    <PullDownMember\r\n                        battingOrder={battingOrder}\r\n                        battingOrder2={battingOrder2}\r\n                        setBattingOrder={setBattingOrder}\r\n                        registeredMember1={registeredMember1}\r\n                        registeredMember2={registeredMember2}\r\n                        nowIningState={nowIningState}\r\n                        nowPlayingMember={nowPlayingMember}\r\n                        setNowPlayingMember={setNowPlayingMember}\r\n                        setIsPinch={setIsPinch}\r\n                    />\r\n                </div>\r\n                <div className=\"freeWrite\">\r\n                    {freeWrite(freeWriteState, setFreeWriteState, freeWriteModeFlag, setFreeWriteModeFlag)}\r\n                </div>\r\n\r\n                {/* プルダウン2 */}\r\n                <PullDown\r\n                    nowPosition={nowPosition}\r\n                    setNowPosition={setNowPosition}\r\n                    setcanvasX1={setcanvasX1}\r\n                    setcanvasY1={setcanvasY1}\r\n                    setFlag={setFlag}\r\n                    setFreeWriteState={setFreeWriteState}\r\n                    setBatterResult={setBatterResult}\r\n                    addScoreState={addScoreState}\r\n                    GameEndPopup_field={GameEndPopup}\r\n                />\r\n\r\n                <div className=\"diamond\">\r\n\r\n                    <canvas width=\"800\" height=\"800\" id=\"canvas\" className='diamondPng'></canvas>\r\n                </div>\r\n                <div className=\"Buttons\">\r\n                    <div className=\"baseballButtons\">\r\n                        {BaseballButton(addScoreState, setAddScoreState)}\r\n                    </div>\r\n                    <div className=\"updateButton\">\r\n                        {/* ポップアップ*/}\r\n                        <Popupfield\r\n                            nowIningState={nowIningState} //今が何回なのか\r\n                            setNowIningState={setNowIningState} //今が何回なのかの変更関数\r\n                            addScoreState={addScoreState}\r\n                            setAddScoreState={setAddScoreState}\r\n                            scoreState={scoreState}\r\n                            setScoreState={setScoreState}\r\n                            nowOutCountState={nowOutCountState}\r\n                            setNowOutCountState={setNowOutCountState}\r\n                            DasekiRegister={DasekiRegister}\r\n                            urlGameId={urlGameId}\r\n                            urlSchoolId={urlSchoolId}\r\n                            urlSchoolId2={urlSchoolId2}\r\n                            nowPlayingMember={nowPlayingMember}\r\n                            setNowPlayingMember={setNowPlayingMember}\r\n                            battingOrder={battingOrder}\r\n                            battingOrder2={battingOrder2}\r\n                            runnerCountState={runnerCountState}\r\n                            freeWriteState={freeWriteState}\r\n                            setFreeWriteState={setFreeWriteState}\r\n                            canvasX1={canvasX1}\r\n                            setcanvasX1={setcanvasX1}\r\n                            canvasY1={canvasY1}\r\n                            setcanvasY1={setcanvasY1}\r\n                            flag={flag}\r\n                            batterResult={batterResult}\r\n                            setBatterResult={setBatterResult}\r\n                            isPinch={isPinch}\r\n                            setIsPinch={setIsPinch}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default InputPlayGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
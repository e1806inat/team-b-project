{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morim\\\\Desktop\\\\my_folder\\\\school\\\\lesson\\\\ensyu\\\\code\\\\team-b-project-output\\\\team-b-project\\\\frontend\\\\src\\\\AllPage\\\\OtherPage\\\\RegisterVenue\\\\RegisterVenue.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { OptionButton } from '../optionFunc/OptionButton';\nimport { TitleBar } from \"../TitleBar/TitleBar\";\nimport EditVenuePopup from \"./com/EditVenuePopup/EditVenuePopup\";\n\n//バックエンドのurlを取得\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst backendUrl = require(\"../../../DB/communication\").backendUrl;\n\n//送られた文字列がどれか空ならtrue\nconst isEnpty = strArray => {\n  let flag = false;\n  strArray.map(str => {\n    if (!str) {\n      flag = true;\n    }\n  });\n  return flag;\n};\n\n//送る文字列が被っていればtrue\nconst isDuplicate = (Array, key, id) => {\n  let flag = false;\n  Array.map(u => {\n    if (u[id] === key) {\n      flag = true;\n    }\n  });\n  console.log(key);\n  return flag;\n};\n\n//大会を読み込む\nconst readTournament = setTournamentData => {\n  fetch(backendUrl + \"/tournament/tournament_call\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.json()).then(data => setTournamentData(data));\n};\n\n//追加ボタン押したとき\nconst addVenue = (venueArray, setVenueArray, nowVenueName) => {\n  //被りチェック\n  if (venueArray.some(v => v.venue_name === nowVenueName)) {\n    console.log(\"名前被ってます\");\n  } else if (nowVenueName === \"\") {\n    console.log(\"空白です\");\n  } else {\n    console.log(nowVenueName + \"を登録します\");\n    fetch(backendUrl + \"/venue/venue_register\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"venue_name\": nowVenueName\n      })\n    }).then(() => loadVenue(setVenueArray));\n  }\n};\n\n//大会の情報を修正する\nconst editTournament = (urlTournamentId, newTournamentName, openingDate, TournamentData, setTournamentData) => {\n  if (TournamentData.some(v => v.tournament_name === newTournamentName)) {\n    console.log(\"名前被ってます\");\n  } else {\n    fetch(backendUrl + \"/tournament/tournament_edit\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        tournament_id: urlTournamentId,\n        tournament_name: newTournamentName,\n        opening: openingDate\n      })\n    }).then(response => response.text()).then(data => readTournament(setTournamentData));\n  }\n};\n\n//削除\nconst tournamentDelete = tournamentId => {\n  fetch(backendUrl + \"/tournament/tournament_edit\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      tournament_id: tournamentId\n    })\n  }).then(response => response.text()).then(data => {\n    if (data === \"OK\") console.log(\"削除しました\");\n  });\n\n  // console.log(tournamentId + \"削除しました\")\n};\n\nconst loadVenue = setVenueArray => {\n  fetch(backendUrl + \"/venue/venue_call\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.json()).then(data => {\n    setVenueArray(data);\n  });\n\n  // console.log(tournamentId + \"削除しました\")\n};\n\nconst editVenue = async (venueId, venueName) => {\n  const Fetch = fetch(backendUrl + \"/venue/venue_edit\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      venue_id: venueId,\n      venue_name: venueName\n    })\n  });\n  const FetchReturn = (await Fetch).text();\n};\nconst deleteVenue = async venueId => {\n  const Fetch = fetch(backendUrl + \"/venue/venue_edit\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      venue_id: venueId\n    })\n  });\n  const FetchReturn = (await Fetch).text();\n};\nexport const RegisterVenue = () => {\n  _s();\n  //プルダウンの選択肢の値\n  const initialYear = 2020;\n  const endYear = 2040;\n  const initialMonth = 1;\n  const endMonth = 12;\n  const initialday = 1;\n  const endDay = 31;\n\n  //プルダウンのリスト作成\n  let yearArray = [];\n  for (let i = initialYear; i <= endYear; i++) {\n    yearArray = [...yearArray, {\n      year: i\n    }];\n  }\n  let monthArray = [];\n  for (let i = initialMonth; i <= endMonth; i++) {\n    monthArray = [...monthArray, {\n      month: i\n    }];\n  }\n  let dayArray = [];\n  for (let i = initialday; i <= endDay; i++) {\n    dayArray = [...dayArray, {\n      day: i\n    }];\n  }\n\n  //大会の日付を入力するときのステイト1:年, 2:月, 3:日\n  const [nowOpeningDate, setNowOpeningDate] = useState([0, 0, 0]);\n\n  //大会の日付を編集するときのステイト1:年, 2:月, 3:日\n  const [editOpeningDate, setEditOpeningDate] = useState([0, 0, 0]);\n\n  //会場名を入力する時のステイト\n  const [nowVenueName, setNowVenueName] = useState(\"\");\n\n  //会場のリストを管理するステイト\n  const [venueArray, setVenueArray] = useState([]);\n\n  //編集中の大会名を管理するステイト\n  const [editingVenueName, setEditingVenueName] = useState(\"\");\n\n  //編集するか削除するかのチェックボックスを管理するステイト,trueなら編集,falseなら削除\n  const [EorDcheckBox, setEorDcheckBox] = useState(true);\n\n  //文字分割のための箱を用意\n  let dateArray = {\n    \"year\": \"\",\n    \"month\": \"\",\n    \"day\": \"\"\n  };\n\n  //適当な初期値\n  let [TournamentData, setTournamentData] = useState([{\n    \"tournament_name\": '第31回春大会',\n    \"tournament_id\": '55',\n    \"opening\": \"2022-03-01\"\n  }, {\n    \"tournament_name\": '第9回松山大会',\n    \"tournament_id\": '56',\n    \"opening\": \"2022-02-01\"\n  }, {\n    \"tournament_name\": '第5回伊予大会',\n    \"tournament_id\": '57',\n    \"opening\": \"2022-01-01\"\n  }, {\n    \"tournament_name\": '第22回秋大会',\n    \"tournament_id\": '58',\n    \"opening\": \"2021-08-01\"\n  }]);\n\n  //ページ遷移用\n  const navigate = useNavigate();\n  const PageTransition = url => {\n    navigate(url);\n  };\n  useEffect(() => {\n    loadVenue(setVenueArray);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n      TitleText: \"大会入力選択画面\",\n      PageTransition: PageTransition,\n      valueUrl: -1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"headline\",\n      children: \"\\u4F1A\\u5834\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"whole1\",\n      children: [\"\\u4F1A\\u5834\\u540D\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setNowVenueName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), isEnpty([nowVenueName]) && /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn_In_to\",\n        onClick: () => {},\n        children: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), !isEnpty([nowVenueName]) && /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn_In_to\",\n        onClick: () => {\n          addVenue(venueArray, setVenueArray, nowVenueName);\n        },\n        children: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"headline\",\n      children: \"\\u4F1A\\u5834\\u7DE8\\u96C6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"whole\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tournamentList\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tournaments\",\n          children: venueArray.map((Venue, ind) => {\n            if (Venue.length !== 0) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(EditVenuePopup, {\n                  sendClassName: \"btn_In_to1\",\n                  Venue: Venue,\n                  ind: ind,\n                  editVenue: editVenue,\n                  venueArray: venueArray,\n                  setVenueArray: setVenueArray,\n                  editingVenueName: editingVenueName,\n                  setEditingVenueName: setEditingVenueName,\n                  EorDcheckBox: EorDcheckBox,\n                  setEorDcheckBox: setEorDcheckBox,\n                  deleteVenue: deleteVenue,\n                  loadVenue: loadVenue,\n                  isDuplicate: isDuplicate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterVenue, \"YRFvRyTNyAMo0RY6dkaomYujvxU=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterVenue;\nexport default RegisterVenue;\nvar _c;\n$RefreshReg$(_c, \"RegisterVenue\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","OptionButton","TitleBar","EditVenuePopup","backendUrl","require","isEnpty","strArray","flag","map","str","isDuplicate","Array","key","id","u","console","log","readTournament","setTournamentData","fetch","method","mode","headers","then","response","json","data","addVenue","venueArray","setVenueArray","nowVenueName","some","v","venue_name","body","JSON","stringify","loadVenue","editTournament","urlTournamentId","newTournamentName","openingDate","TournamentData","tournament_name","tournament_id","opening","text","tournamentDelete","tournamentId","editVenue","venueId","venueName","Fetch","venue_id","FetchReturn","deleteVenue","RegisterVenue","initialYear","endYear","initialMonth","endMonth","initialday","endDay","yearArray","i","year","monthArray","month","dayArray","day","nowOpeningDate","setNowOpeningDate","editOpeningDate","setEditOpeningDate","setNowVenueName","editingVenueName","setEditingVenueName","EorDcheckBox","setEorDcheckBox","dateArray","navigate","PageTransition","url","e","target","value","Venue","ind","length"],"sources":["C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project-output/team-b-project/frontend/src/AllPage/OtherPage/RegisterVenue/RegisterVenue.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { OptionButton } from '../optionFunc/OptionButton'\r\nimport { TitleBar } from \"../TitleBar/TitleBar\";\r\nimport EditVenuePopup from \"./com/EditVenuePopup/EditVenuePopup\";\r\n\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../DB/communication\").backendUrl;\r\n\r\n\r\n//送られた文字列がどれか空ならtrue\r\nconst isEnpty = (strArray) => {\r\n  let flag = false\r\n  strArray.map((str) => {\r\n    if (!str) {\r\n      flag = true\r\n    }\r\n  })\r\n  return flag\r\n}\r\n\r\n//送る文字列が被っていればtrue\r\nconst isDuplicate = (Array, key, id) => {\r\n  let flag = false\r\n  Array.map((u) => {\r\n    if (u[id] === key) {\r\n      flag = true\r\n    }\r\n  })\r\n  console.log(key)\r\n  return flag\r\n}\r\n\r\n//大会を読み込む\r\nconst readTournament = (setTournamentData) => {\r\n  fetch(backendUrl + \"/tournament/tournament_call\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => setTournamentData(data))\r\n}\r\n\r\n\r\n\r\n\r\n//追加ボタン押したとき\r\nconst addVenue = (venueArray,setVenueArray, nowVenueName,) => {\r\n\r\n  //被りチェック\r\n  if (venueArray.some((v) => v.venue_name === nowVenueName)) {\r\n    console.log(\"名前被ってます\")\r\n  }\r\n  else if (nowVenueName === \"\") {\r\n    console.log(\"空白です\")\r\n  }\r\n  else {\r\n    console.log(nowVenueName + \"を登録します\")\r\n\r\n    fetch(backendUrl + \"/venue/venue_register\", {\r\n      method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n      body: JSON.stringify({ \"venue_name\": nowVenueName }),\r\n    })\r\n      .then(() => loadVenue(setVenueArray))\r\n  }\r\n}\r\n\r\n//大会の情報を修正する\r\nconst editTournament = (urlTournamentId, newTournamentName, openingDate, TournamentData, setTournamentData) => {\r\n  if (TournamentData.some((v) => v.tournament_name === newTournamentName)) {\r\n    console.log(\"名前被ってます\")\r\n  }\r\n  else {\r\n    fetch(backendUrl + \"/tournament/tournament_edit\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\", },\r\n      body: JSON.stringify({ tournament_id: urlTournamentId, tournament_name: newTournamentName, opening: openingDate }),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => readTournament(setTournamentData))\r\n  }\r\n}\r\n\r\n//削除\r\nconst tournamentDelete = (tournamentId) => {\r\n  fetch(backendUrl + \"/tournament/tournament_edit\", {\r\n    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", }, body: JSON.stringify({ tournament_id: tournamentId }),\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => { if (data === \"OK\") console.log(\"削除しました\") })\r\n\r\n  // console.log(tournamentId + \"削除しました\")\r\n}\r\n\r\n\r\nconst loadVenue = (setVenueArray) => {\r\n  fetch(backendUrl + \"/venue/venue_call\", {\r\n    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", }\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => { setVenueArray(data) })\r\n\r\n  // console.log(tournamentId + \"削除しました\")\r\n}\r\n\r\nconst editVenue = async (venueId, venueName) => {\r\n  const Fetch = fetch(backendUrl + \"/venue/venue_edit\", {\r\n    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", }\r\n    , body: JSON.stringify({ venue_id: venueId, venue_name: venueName }),\r\n  })\r\n  const FetchReturn = (await Fetch).text()\r\n}\r\n\r\nconst deleteVenue = async (venueId) => {\r\n  const Fetch = fetch(backendUrl + \"/venue/venue_edit\", {\r\n    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", }\r\n    , body: JSON.stringify({ venue_id: venueId }),\r\n  })\r\n  const FetchReturn = (await Fetch).text()\r\n}\r\n\r\n\r\n\r\nexport const RegisterVenue = () => {\r\n\r\n  //プルダウンの選択肢の値\r\n  const initialYear = 2020\r\n  const endYear = 2040\r\n  const initialMonth = 1\r\n  const endMonth = 12\r\n  const initialday = 1\r\n  const endDay = 31\r\n\r\n  //プルダウンのリスト作成\r\n  let yearArray = []\r\n  for (let i = initialYear; i <= endYear; i++) { yearArray = [...yearArray, { year: i }] }\r\n\r\n  let monthArray = []\r\n  for (let i = initialMonth; i <= endMonth; i++) { monthArray = [...monthArray, { month: i }] }\r\n\r\n  let dayArray = []\r\n  for (let i = initialday; i <= endDay; i++) { dayArray = [...dayArray, { day: i }] }\r\n\r\n  //大会の日付を入力するときのステイト1:年, 2:月, 3:日\r\n  const [nowOpeningDate, setNowOpeningDate] = useState([0, 0, 0])\r\n\r\n  //大会の日付を編集するときのステイト1:年, 2:月, 3:日\r\n  const [editOpeningDate, setEditOpeningDate] = useState([0, 0, 0])\r\n\r\n  //会場名を入力する時のステイト\r\n  const [nowVenueName, setNowVenueName] = useState(\"\")\r\n\r\n  //会場のリストを管理するステイト\r\n  const [venueArray, setVenueArray] = useState([])\r\n\r\n  //編集中の大会名を管理するステイト\r\n  const [editingVenueName, setEditingVenueName] = useState(\"\")\r\n\r\n  //編集するか削除するかのチェックボックスを管理するステイト,trueなら編集,falseなら削除\r\n  const [EorDcheckBox, setEorDcheckBox] = useState(true)\r\n\r\n\r\n  //文字分割のための箱を用意\r\n  let dateArray = { \"year\": \"\", \"month\": \"\", \"day\": \"\" }\r\n\r\n  //適当な初期値\r\n  let [TournamentData, setTournamentData] = useState([\r\n    { \"tournament_name\": '第31回春大会', \"tournament_id\": '55', \"opening\": \"2022-03-01\" },\r\n    { \"tournament_name\": '第9回松山大会', \"tournament_id\": '56', \"opening\": \"2022-02-01\" },\r\n    { \"tournament_name\": '第5回伊予大会', \"tournament_id\": '57', \"opening\": \"2022-01-01\" },\r\n    { \"tournament_name\": '第22回秋大会', \"tournament_id\": '58', \"opening\": \"2021-08-01\" }\r\n  ])\r\n\r\n  //ページ遷移用\r\n  const navigate = useNavigate()\r\n  const PageTransition = (url) => {\r\n    navigate(url)\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    loadVenue(setVenueArray)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <TitleBar\r\n        TitleText={\"大会入力選択画面\"}\r\n        PageTransition={PageTransition}\r\n        valueUrl={-1}\r\n      />\r\n\r\n      <OptionButton />\r\n\r\n\r\n      <div class=\"headline\">会場追加</div>\r\n      <div class=\"whole1\">\r\n        会場名\r\n        <input type=\"text\" onChange={(e) => { setNowVenueName(e.target.value) }} />\r\n        <br />\r\n\r\n        {/* 追加ボタン */}\r\n        {isEnpty([nowVenueName]) &&\r\n          <button\r\n            class=\"btn_In_to\"\r\n            onClick={() => { }}>追加\r\n          </button>\r\n        }\r\n\r\n        {!isEnpty([nowVenueName]) &&\r\n          <button\r\n            class=\"btn_In_to\"\r\n            onClick={() => {\r\n              addVenue(venueArray, setVenueArray, nowVenueName)\r\n            }}>追加\r\n          </button>\r\n        }\r\n\r\n      </div>\r\n\r\n      <div class=\"headline\">会場編集</div>\r\n      <div class=\"whole\">\r\n        <div className=\"tournamentList\">\r\n          <div className=\"tournaments\">\r\n\r\n            {venueArray.map((Venue, ind) => {\r\n              if (Venue.length !== 0) {\r\n                return (\r\n                  <>\r\n                    <EditVenuePopup\r\n                      sendClassName=\"btn_In_to1\"\r\n                      Venue={Venue}\r\n                      ind={ind}\r\n                      editVenue={editVenue}\r\n                      venueArray={venueArray}\r\n                      setVenueArray={setVenueArray}\r\n                      editingVenueName={editingVenueName}\r\n                      setEditingVenueName={setEditingVenueName}\r\n                      EorDcheckBox={EorDcheckBox}\r\n                      setEorDcheckBox={setEorDcheckBox}\r\n                      deleteVenue={deleteVenue}\r\n                      loadVenue={loadVenue}\r\n                      isDuplicate={isDuplicate}\r\n                    />\r\n\r\n                  </>\r\n                )\r\n              }\r\n            })}\r\n\r\n            {/* {TournamentData.map((Tournament, ind) => {\r\n\r\n              if (Tournament.tournament_name !== null) {\r\n                //文字分割\r\n                dateArray = dateSplit(Tournament.opening)\r\n\r\n                return (\r\n                  <div className=\"tournament\">\r\n                    <div className=\"days\">\r\n                      <span>{dateArray.year}年{dateArray.month}月{dateArray.day}日</span>\r\n                    </div>\r\n                    <div className=\"tournamentName\">\r\n                      {isDeleteMode &&\r\n                        <>\r\n                          <EditVenuePopup\r\n                            sendClassName=\"btn_In_to1\"\r\n                            Tournament={Tournament}\r\n                            ind={ind}\r\n                            editTournament={editTournament}\r\n                            editOpeningDate={editOpeningDate}\r\n                            setEditOpeningDate={setEditOpeningDate}\r\n                            yearArray={yearArray}\r\n                            monthArray={monthArray}\r\n                            dayArray={dayArray}\r\n                            makePulldown={makePulldown}\r\n                            TournamentData={TournamentData}\r\n                            setTournamentData={setTournamentData}\r\n                            editingTnmtName={editingTnmtName}\r\n                            setEditingTnmtName={setEditingTnmtName}\r\n                            EorDcheckBox={EorDcheckBox}\r\n                            setEorDcheckBox={setEorDcheckBox}\r\n                            tournamentDelete={tournamentDelete}\r\n                            readTournament={readTournament}\r\n                            dateSplit={dateSplit}\r\n                            isDuplicate={isDuplicate}\r\n                          />\r\n                        </>\r\n\r\n                      }\r\n                      {!isDeleteMode &&\r\n                        <button\r\n                          className=\"btn_In_to1\"\r\n                          onClick={() =>\r\n                            PageTransition(\r\n                              \"inputschool?urlTournamentId=\" +\r\n                              Tournament.tournament_id +\r\n                              \"&urlTournamentName=\" +\r\n                              Tournament.tournament_name\r\n                            )\r\n                          }>\r\n                          {Tournament.tournament_name}\r\n                        </button>\r\n                      }\r\n                      <br />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n\r\n            })} */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterVenue;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
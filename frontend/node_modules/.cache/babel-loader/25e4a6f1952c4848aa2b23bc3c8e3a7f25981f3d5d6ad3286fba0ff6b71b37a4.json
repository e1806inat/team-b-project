{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project-output/team-b-project/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project-output/team-b-project/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project-output/team-b-project/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project-output/team-b-project/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useNavigate}from'react-router-dom';import{TitleBar}from\"../../../OtherPage/TitleBar/TitleBar\";import{MenuBar}from\"../../../OtherPage/optionFunc/MenuBar\";import EditTournamentPopup from\"./com/EditTournamentPopup/EditTournamentPopup\";import{useCookies}from'react-cookie';import\"./InputTournament.css\";//バックエンドのurlを取得\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var backendUrl=require(\"../../../../DB/communication\").backendUrl;//フロントの階層urlを取得\nvar routeUrl=require(\"../../../../DB/communication\").routeUrl;//送られた文字列がどれか空ならtrue\nvar isEnpty=function isEnpty(strArray){var flag=false;strArray.map(function(str){if(!str){flag=true;}});return flag;};//送る文字列が被っていればtrue\nvar isDuplicate=function isDuplicate(Array,key,id){var flag=false;Array.map(function(u){if(u[id]===key){flag=true;}});console.log(key);return flag;};//大会を読み込む\nvar readTournament=function readTournament(setTournamentData){fetch(backendUrl+\"/tournament/tournament_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"}}).then(function(response){return response.json();}).then(function(data){return setTournamentData(data);});};//文字分割\nvar dateSplit=function dateSplit(nowdate){if(nowdate!==null){var dateArray=nowdate.split('-');dateArray={\"year\":dateArray[0],\"month\":dateArray[1],\"day\":dateArray[2]};return dateArray;}};//自作プルダウン\nvar makePulldown=function makePulldown(pulldownId,ArrayList,idText,nowSelected,setNowSelected){//pulldownIdは0でいいです。\n//ArrayListは表示したい要素を並べた配列です、普通の配列ではなく連想配列です。\n//idテキストは連想配列の属性を書きます。\n//nowSelectedは今プルダウンで何が選択されているかが入ります。初期値は[0]で、これは0番目の値が選択されている状態です。\n//setNowSelectedはnowSelecedの値をuseStateの機能で上書きする関数です。setNowSelected(更新値)とすれば、nowSelectedに更新値が入ります。\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"select\",{id:\"tekitouni\",onChange:function onChange(e){//ステイトが変化すると再描画させるための文、これがないと再描画されない\n//なお、消すと再描画はされないが内部は変化する\nnowSelected=nowSelected.slice(0,nowSelected.length);nowSelected[pulldownId]=e.target.value;setNowSelected(nowSelected);console.log(nowSelected);},children:ArrayList.map(function(component,ind){return/*#__PURE__*/_jsx(\"option\",{value:ind,children:component[idText]});})})});};//追加ボタン押したとき\nvar handleTournament=function handleTournament(setTournamentData,yearArray,monthArray,dayArray,nowOpeningDate,nowTournamentName,TournamentData){console.log(yearArray[nowOpeningDate[0]].year+\"-\"+monthArray[nowOpeningDate[1]].month+\"-\"+dayArray[nowOpeningDate[2]].day);//被りチェック\nif(TournamentData.some(function(v){return v.tournament_name===nowTournamentName;})){console.log(\"名前被ってます\");}else if(nowTournamentName===\"\"){console.log(\"空白です\");}else{console.log(nowTournamentName+\"を登録します\");fetch(backendUrl+\"/tournament/tournament_register\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},//body: JSON.stringify({ email:login_id , password:login_ps }),\nbody:JSON.stringify({\"tournament_name\":nowTournamentName,\"opening\":yearArray[nowOpeningDate[0]].year+\"-\"+monthArray[nowOpeningDate[1]].month+\"-\"+dayArray[nowOpeningDate[2]].day})}).then(function(){return readTournament1(TournamentData,setTournamentData);});}};//大会を読み込む\nvar readTournament1=function readTournament1(TournamentData,setTournamentData){fetch(backendUrl+\"/tournament/tournament_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"}}).then(function(response){return response.json();}).then(function(data){var count=0;data.map(function(u){if(TournamentData.some(function(v){return u.tournament_name===v.tournament_name;}))count++;console.log(TournamentData.some(function(v){return u.tournament_name===v.tournament_name;}));});if(count!==data.length){setTournamentData(data);console.log(\"aaiiuu\");}});};//大会の情報を修正する\nvar editTournament=function editTournament(urlTournamentId,newTournamentName,openingDate,TournamentData,setTournamentData){if(TournamentData.some(function(v){return v.tournament_name===newTournamentName;})){console.log(\"名前被ってます\");}else{fetch(backendUrl+\"/tournament/tournament_edit\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({tournament_id:urlTournamentId,tournament_name:newTournamentName,opening:openingDate})}).then(function(response){return response.text();}).then(function(data){return readTournament1([],setTournamentData);});}};//削除\nvar tournamentDelete=function tournamentDelete(tournamentId,setTournamentData){fetch(backendUrl+\"/tournament/tournament_edit\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({tournament_id:tournamentId})}).then(function(response){return response.text();}).then(function(data){if(data===\"OK\"){console.log(\"削除しました\");readTournament1([],setTournamentData);}});// console.log(tournamentId + \"削除しました\")\n};export var Input_Tournament=function Input_Tournament(){//クッキー関連\nvar _useCookies=useCookies(),_useCookies2=_slicedToArray(_useCookies,3),cookies=_useCookies2[0],setCookie=_useCookies2[1],removeCookie=_useCookies2[2];//プルダウンの選択肢の値\nvar initialYear=2020;var endYear=2040;var initialMonth=1;var endMonth=12;var initialday=1;var endDay=31;//プルダウンのリスト作成\nvar yearArray=[];for(var i=initialYear;i<=endYear;i++){yearArray=[].concat(_toConsumableArray(yearArray),[{year:i}]);}var monthArray=[];for(var _i=initialMonth;_i<=endMonth;_i++){monthArray=[].concat(_toConsumableArray(monthArray),[{month:_i}]);}var dayArray=[];for(var _i2=initialday;_i2<=endDay;_i2++){dayArray=[].concat(_toConsumableArray(dayArray),[{day:_i2}]);}//大会の日付を入力するときのステイト1:年, 2:月, 3:日\nvar _useState=useState([0,0,0]),_useState2=_slicedToArray(_useState,2),nowOpeningDate=_useState2[0],setNowOpeningDate=_useState2[1];//大会の日付を編集するときのステイト1:年, 2:月, 3:日\nvar _useState3=useState([0,0,0]),_useState4=_slicedToArray(_useState3,2),editOpeningDate=_useState4[0],setEditOpeningDate=_useState4[1];//大会名を入力する時のステイト\nvar _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),nowTournamentName=_useState6[0],setNowTournamentName=_useState6[1];//削除モードを管理するステイト\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isDeleteMode=_useState8[0],setIsDeleteMode=_useState8[1];//編集中の大会名を管理するステイト\nvar _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),editingTnmtName=_useState10[0],setEditingTnmtName=_useState10[1];//編集するか削除するかのチェックボックスを管理するステイト,trueなら編集,falseなら削除\nvar _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),EorDcheckBox=_useState12[0],setEorDcheckBox=_useState12[1];//文字分割のための箱を用意\nvar dateArray={\"year\":\"\",\"month\":\"\",\"day\":\"\"};//適当な初期値\nvar _useState13=useState([{\"tournament_name\":'第31回春大会',\"tournament_id\":'55',\"opening\":\"2022-03-01\"},{\"tournament_name\":'第9回松山大会',\"tournament_id\":'56',\"opening\":\"2022-02-01\"},{\"tournament_name\":'第5回伊予大会',\"tournament_id\":'57',\"opening\":\"2022-01-01\"},{\"tournament_name\":'第22回秋大会',\"tournament_id\":'58',\"opening\":\"2021-08-01\"}]),_useState14=_slicedToArray(_useState13,2),TournamentData=_useState14[0],setTournamentData=_useState14[1];//ページ遷移用\nvar navigate=useNavigate();var PageTransition=function PageTransition(url){navigate(url);};useEffect(function(){readTournament1(TournamentData,setTournamentData);},[TournamentData]);//セッション関連\nuseEffect(function(){var gameStart=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var CheckSess,sess;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(backendUrl+\"/auth/check_sess\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionID:cookies.sessionID})});case 2:CheckSess=_context.sent;_context.next=5;return CheckSess.text();case 5:sess=_context.sent;console.log(sess);console.log(cookies.sessionID);if(sess==='logout'){PageTransition(routeUrl+\"/login\");}case 9:case\"end\":return _context.stop();}}},_callee);}));return function gameStart(){return _ref.apply(this,arguments);};}();gameStart();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TitleBar,{TitleText:\"大会入力選択画面\",PageTransition:PageTransition,valueUrl:-1}),/*#__PURE__*/_jsx(MenuBar,{menuArray:[]}),/*#__PURE__*/_jsx(\"div\",{class:\"headline\",children:\"\\u5927\\u4F1A\\u4F5C\\u6210\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"whole1\",children:[\"\\u5927\\u4F1A\\u540D\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(e){setNowTournamentName(e.target.value);}}),/*#__PURE__*/_jsx(\"br\",{}),\"\\u65E5\\u4ED8\",/*#__PURE__*/_jsxs(\"label\",{children:[makePulldown(0,yearArray,\"year\",nowOpeningDate,setNowOpeningDate),\"\\u5E74\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[makePulldown(1,monthArray,\"month\",nowOpeningDate,setNowOpeningDate),\"\\u6708\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[makePulldown(2,dayArray,\"day\",nowOpeningDate,setNowOpeningDate),\"\\u65E5\"]}),/*#__PURE__*/_jsx(\"br\",{}),isEnpty([nowTournamentName])&&/*#__PURE__*/_jsx(\"button\",{class:\"btn_In_to\",onClick:function onClick(){},children:\"\\u8FFD\\u52A0\"}),!isEnpty([nowTournamentName])&&/*#__PURE__*/_jsx(\"button\",{class:\"btn_In_to\",onClick:function onClick(){handleTournament(setTournamentData,yearArray,monthArray,dayArray,nowOpeningDate,nowTournamentName,TournamentData);},children:\"\\u8FFD\\u52A0\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){setIsDeleteMode(!isDeleteMode);},children:[isDeleteMode&&\"大会編集中\",!isDeleteMode&&\"大会編集モード\"]})]}),/*#__PURE__*/_jsx(\"div\",{class:\"headline\",children:\"\\u5927\\u4F1A\\u9078\\u629E\"}),/*#__PURE__*/_jsx(\"div\",{class:\"whole\",children:/*#__PURE__*/_jsx(\"div\",{className:\"tournamentList\",children:/*#__PURE__*/_jsx(\"div\",{className:\"tournaments\",children:TournamentData.map(function(Tournament,ind){if(Tournament.tournament_name!==null){//文字分割\ndateArray=dateSplit(Tournament.opening);return/*#__PURE__*/_jsxs(\"div\",{className:\"tournament\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"days\",children:/*#__PURE__*/_jsxs(\"span\",{children:[dateArray.year,\"\\u5E74\",dateArray.month,\"\\u6708\",dateArray.day,\"\\u65E5\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"tournamentName\",children:[isDeleteMode&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(EditTournamentPopup,{sendClassName:\"btn_In_to1\",Tournament:Tournament,ind:ind,editTournament:editTournament,editOpeningDate:editOpeningDate,setEditOpeningDate:setEditOpeningDate,yearArray:yearArray,monthArray:monthArray,dayArray:dayArray,makePulldown:makePulldown,TournamentData:TournamentData,setTournamentData:setTournamentData,editingTnmtName:editingTnmtName,setEditingTnmtName:setEditingTnmtName,EorDcheckBox:EorDcheckBox,setEorDcheckBox:setEorDcheckBox,tournamentDelete:tournamentDelete,readTournament:readTournament,dateSplit:dateSplit,isDuplicate:isDuplicate})}),!isDeleteMode&&/*#__PURE__*/_jsx(\"button\",{className:\"btn_In_to1\",onClick:function onClick(){return PageTransition(\"inputschool?urlTournamentId=\"+Tournament.tournament_id+\"&urlTournamentName=\"+Tournament.tournament_name);},children:Tournament.tournament_name}),/*#__PURE__*/_jsx(\"br\",{})]})]});}})})})})]});};export default Input_Tournament;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","TitleBar","MenuBar","EditTournamentPopup","useCookies","backendUrl","require","routeUrl","isEnpty","strArray","flag","map","str","isDuplicate","Array","key","id","u","console","log","readTournament","setTournamentData","fetch","method","mode","headers","then","response","json","data","dateSplit","nowdate","dateArray","split","makePulldown","pulldownId","ArrayList","idText","nowSelected","setNowSelected","e","slice","length","target","value","component","ind","handleTournament","yearArray","monthArray","dayArray","nowOpeningDate","nowTournamentName","TournamentData","year","month","day","some","v","tournament_name","body","JSON","stringify","readTournament1","count","editTournament","urlTournamentId","newTournamentName","openingDate","tournament_id","opening","text","tournamentDelete","tournamentId","Input_Tournament","cookies","setCookie","removeCookie","initialYear","endYear","initialMonth","endMonth","initialday","endDay","i","setNowOpeningDate","editOpeningDate","setEditOpeningDate","setNowTournamentName","isDeleteMode","setIsDeleteMode","editingTnmtName","setEditingTnmtName","EorDcheckBox","setEorDcheckBox","navigate","PageTransition","url","gameStart","sessionID","CheckSess","sess","Tournament"],"sources":["C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project-output/team-b-project/frontend/src/AllPage/InputAll/PreInput/InputTournamentPage/Input_Tournament.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\nimport { MenuBar } from \"../../../OtherPage/optionFunc/MenuBar\"\r\nimport EditTournamentPopup from \"./com/EditTournamentPopup/EditTournamentPopup\";\r\nimport { useCookies } from 'react-cookie'\r\n\r\nimport \"./InputTournament.css\"\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n//フロントの階層urlを取得\r\nconst routeUrl = require(\"../../../../DB/communication\").routeUrl;\r\n\r\n\r\n//送られた文字列がどれか空ならtrue\r\nconst isEnpty = (strArray) => {\r\n  let flag = false\r\n  strArray.map((str) => {\r\n    if (!str) {\r\n      flag = true\r\n    }\r\n  })\r\n  return flag\r\n}\r\n\r\n//送る文字列が被っていればtrue\r\nconst isDuplicate = (Array, key, id) => {\r\n  let flag = false\r\n  Array.map((u) => {\r\n    if (u[id] === key) {\r\n      flag = true\r\n    }\r\n  })\r\n  console.log(key)\r\n  return flag\r\n}\r\n\r\n//大会を読み込む\r\nconst readTournament = (setTournamentData) => {\r\n  fetch(backendUrl + \"/tournament/tournament_call\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => setTournamentData(data))\r\n}\r\n\r\n\r\n\r\n\r\n//文字分割\r\nconst dateSplit = (nowdate) => {\r\n  if (nowdate !== null) {\r\n    let dateArray = nowdate.split('-');\r\n    dateArray = { \"year\": dateArray[0], \"month\": dateArray[1], \"day\": dateArray[2] }\r\n    return dateArray\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//自作プルダウン\r\nconst makePulldown = (pulldownId, ArrayList, idText, nowSelected, setNowSelected) => {\r\n  //pulldownIdは0でいいです。\r\n  //ArrayListは表示したい要素を並べた配列です、普通の配列ではなく連想配列です。\r\n  //idテキストは連想配列の属性を書きます。\r\n  //nowSelectedは今プルダウンで何が選択されているかが入ります。初期値は[0]で、これは0番目の値が選択されている状態です。\r\n  //setNowSelectedはnowSelecedの値をuseStateの機能で上書きする関数です。setNowSelected(更新値)とすれば、nowSelectedに更新値が入ります。\r\n\r\n  return (\r\n    <>\r\n      <select id=\"tekitouni\"\r\n        onChange={(e) => {\r\n          //ステイトが変化すると再描画させるための文、これがないと再描画されない\r\n          //なお、消すと再描画はされないが内部は変化する\r\n          nowSelected = nowSelected.slice(0, nowSelected.length);\r\n          nowSelected[pulldownId] = e.target.value\r\n          setNowSelected(nowSelected)\r\n          console.log(nowSelected)\r\n        }\r\n        }>\r\n        {ArrayList.map((component, ind) => (\r\n          <option value={ind}>{component[idText]}</option>\r\n        ))\r\n        }\r\n      </select>\r\n    </>\r\n  )\r\n}\r\n\r\n//追加ボタン押したとき\r\nconst handleTournament = (\r\n  setTournamentData,\r\n  yearArray,\r\n  monthArray,\r\n  dayArray,\r\n  nowOpeningDate,\r\n  nowTournamentName,\r\n  TournamentData\r\n) => {\r\n  console.log(\r\n    yearArray[nowOpeningDate[0]].year + \"-\" +\r\n    monthArray[nowOpeningDate[1]].month + \"-\" +\r\n    dayArray[nowOpeningDate[2]].day\r\n  )\r\n\r\n  //被りチェック\r\n  if (TournamentData.some((v) => v.tournament_name === nowTournamentName)) {\r\n    console.log(\"名前被ってます\")\r\n  }\r\n  else if (nowTournamentName === \"\") {\r\n    console.log(\"空白です\")\r\n  }\r\n  else {\r\n    console.log(nowTournamentName + \"を登録します\")\r\n\r\n    fetch(backendUrl + \"/tournament/tournament_register\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //body: JSON.stringify({ email:login_id , password:login_ps }),\r\n      body: JSON.stringify({\r\n        \"tournament_name\": nowTournamentName,\r\n        \"opening\":\r\n          yearArray[nowOpeningDate[0]].year + \"-\" +\r\n          monthArray[nowOpeningDate[1]].month + \"-\" +\r\n          dayArray[nowOpeningDate[2]].day\r\n      }),\r\n    })\r\n      .then(() => readTournament1(TournamentData, setTournamentData))\r\n  }\r\n}\r\n\r\n//大会を読み込む\r\nconst readTournament1 = (TournamentData, setTournamentData) => {\r\n  fetch(\r\n    backendUrl + \"/tournament/tournament_call\", {\r\n    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n\r\n      let count = 0\r\n      data.map((u) => {\r\n        if (TournamentData.some((v) => u.tournament_name === v.tournament_name)) count++\r\n\r\n        console.log(TournamentData.some((v) => u.tournament_name === v.tournament_name))\r\n      })\r\n      if (count !== data.length) { setTournamentData(data); console.log(\"aaiiuu\") }\r\n    })\r\n}\r\n\r\n//大会の情報を修正する\r\nconst editTournament = (urlTournamentId, newTournamentName, openingDate, TournamentData, setTournamentData) => {\r\n  if (TournamentData.some((v) => v.tournament_name === newTournamentName)) {\r\n    console.log(\"名前被ってます\")\r\n  }\r\n  else {\r\n    fetch(backendUrl + \"/tournament/tournament_edit\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\", },\r\n      body: JSON.stringify({ tournament_id: urlTournamentId, tournament_name: newTournamentName, opening: openingDate }),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => readTournament1([], setTournamentData))\r\n  }\r\n}\r\n\r\n//削除\r\nconst tournamentDelete = (tournamentId, setTournamentData) => {\r\n  fetch(backendUrl + \"/tournament/tournament_edit\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: { \"Content-Type\": \"application/json\", },\r\n    body: JSON.stringify({ tournament_id: tournamentId }),\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => { if (data === \"OK\") { console.log(\"削除しました\"); readTournament1([], setTournamentData) } })\r\n\r\n  // console.log(tournamentId + \"削除しました\")\r\n}\r\n\r\n\r\n\r\n\r\nexport const Input_Tournament = () => {\r\n\r\n  //クッキー関連\r\n  const [cookies, setCookie, removeCookie] = useCookies();\r\n\r\n  //プルダウンの選択肢の値\r\n  const initialYear = 2020\r\n  const endYear = 2040\r\n  const initialMonth = 1\r\n  const endMonth = 12\r\n  const initialday = 1\r\n  const endDay = 31\r\n\r\n  //プルダウンのリスト作成\r\n  let yearArray = []\r\n  for (let i = initialYear; i <= endYear; i++) { yearArray = [...yearArray, { year: i }] }\r\n\r\n  let monthArray = []\r\n  for (let i = initialMonth; i <= endMonth; i++) { monthArray = [...monthArray, { month: i }] }\r\n\r\n  let dayArray = []\r\n  for (let i = initialday; i <= endDay; i++) { dayArray = [...dayArray, { day: i }] }\r\n\r\n  //大会の日付を入力するときのステイト1:年, 2:月, 3:日\r\n  const [nowOpeningDate, setNowOpeningDate] = useState([0, 0, 0])\r\n\r\n  //大会の日付を編集するときのステイト1:年, 2:月, 3:日\r\n  const [editOpeningDate, setEditOpeningDate] = useState([0, 0, 0])\r\n\r\n  //大会名を入力する時のステイト\r\n  const [nowTournamentName, setNowTournamentName] = useState(\"\")\r\n\r\n  //削除モードを管理するステイト\r\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\r\n\r\n  //編集中の大会名を管理するステイト\r\n  const [editingTnmtName, setEditingTnmtName] = useState(\"\")\r\n\r\n  //編集するか削除するかのチェックボックスを管理するステイト,trueなら編集,falseなら削除\r\n  const [EorDcheckBox, setEorDcheckBox] = useState(true)\r\n\r\n\r\n  //文字分割のための箱を用意\r\n  let dateArray = { \"year\": \"\", \"month\": \"\", \"day\": \"\" }\r\n\r\n  //適当な初期値\r\n  let [TournamentData, setTournamentData] = useState([\r\n    { \"tournament_name\": '第31回春大会', \"tournament_id\": '55', \"opening\": \"2022-03-01\" },\r\n    { \"tournament_name\": '第9回松山大会', \"tournament_id\": '56', \"opening\": \"2022-02-01\" },\r\n    { \"tournament_name\": '第5回伊予大会', \"tournament_id\": '57', \"opening\": \"2022-01-01\" },\r\n    { \"tournament_name\": '第22回秋大会', \"tournament_id\": '58', \"opening\": \"2021-08-01\" }\r\n  ])\r\n\r\n  //ページ遷移用\r\n  const navigate = useNavigate()\r\n  const PageTransition = (url) => {\r\n    navigate(url)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    readTournament1(TournamentData, setTournamentData)\r\n  }, [TournamentData])\r\n\r\n\r\n  //セッション関連\r\n  useEffect(() => {\r\n    const gameStart = async () => {\r\n      const CheckSess = await fetch(backendUrl + \"/auth/check_sess\",\r\n        {\r\n          method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n          body: JSON.stringify({ sessionID: cookies.sessionID })\r\n        })\r\n      const sess = await CheckSess.text();\r\n      console.log(sess)\r\n      console.log(cookies.sessionID)\r\n      if (sess === 'logout') {\r\n        PageTransition(routeUrl + \"/login\");\r\n      }\r\n    }\r\n    gameStart()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <TitleBar\r\n        TitleText={\"大会入力選択画面\"}\r\n        PageTransition={PageTransition}\r\n        valueUrl={-1}\r\n      />\r\n\r\n      <MenuBar\r\n        menuArray={[]}\r\n      />\r\n\r\n\r\n      <div class=\"headline\">大会作成</div>\r\n      <div class=\"whole1\">\r\n        大会名\r\n        <input type=\"text\" onChange={(e) => { setNowTournamentName(e.target.value) }} />\r\n        <br />\r\n        日付\r\n        <label>\r\n          {makePulldown(0, yearArray, \"year\", nowOpeningDate, setNowOpeningDate)}年\r\n        </label>\r\n        <label>\r\n          {makePulldown(1, monthArray, \"month\", nowOpeningDate, setNowOpeningDate)}月\r\n        </label>\r\n        <label>\r\n          {makePulldown(2, dayArray, \"day\", nowOpeningDate, setNowOpeningDate)}日\r\n        </label>\r\n        <br />\r\n\r\n        {/* 追加ボタン */}\r\n        {isEnpty([nowTournamentName]) &&\r\n          <button\r\n            class=\"btn_In_to\"\r\n            onClick={() => { }}>追加\r\n          </button>\r\n        }\r\n\r\n        {!isEnpty([nowTournamentName]) &&\r\n          <button\r\n            class=\"btn_In_to\"\r\n            onClick={() => {\r\n              handleTournament(\r\n                setTournamentData, yearArray, monthArray, dayArray, nowOpeningDate, nowTournamentName, TournamentData\r\n              )\r\n            }}>追加\r\n          </button>\r\n        }\r\n\r\n        {/* 編集・削除モードボタン */}\r\n        <button\r\n          onClick={() => { setIsDeleteMode(!isDeleteMode) }}\r\n        >{isDeleteMode && \"大会編集中\"}{!isDeleteMode && \"大会編集モード\"}</button>\r\n\r\n      </div>\r\n\r\n      <div class=\"headline\">大会選択</div>\r\n      <div class=\"whole\">\r\n        <div className=\"tournamentList\">\r\n          <div className=\"tournaments\">\r\n\r\n            {TournamentData.map((Tournament, ind) => {\r\n\r\n              if (Tournament.tournament_name !== null) {\r\n                //文字分割\r\n                dateArray = dateSplit(Tournament.opening)\r\n\r\n                return (\r\n                  <div className=\"tournament\">\r\n                    <div className=\"days\">\r\n                      <span>{dateArray.year}年{dateArray.month}月{dateArray.day}日</span>\r\n                    </div>\r\n                    <div className=\"tournamentName\">\r\n                      {isDeleteMode &&\r\n                        <>\r\n                          <EditTournamentPopup\r\n                            sendClassName=\"btn_In_to1\"\r\n                            Tournament={Tournament}\r\n                            ind={ind}\r\n                            editTournament={editTournament}\r\n                            editOpeningDate={editOpeningDate}\r\n                            setEditOpeningDate={setEditOpeningDate}\r\n                            yearArray={yearArray}\r\n                            monthArray={monthArray}\r\n                            dayArray={dayArray}\r\n                            makePulldown={makePulldown}\r\n                            TournamentData={TournamentData}\r\n                            setTournamentData={setTournamentData}\r\n                            editingTnmtName={editingTnmtName}\r\n                            setEditingTnmtName={setEditingTnmtName}\r\n                            EorDcheckBox={EorDcheckBox}\r\n                            setEorDcheckBox={setEorDcheckBox}\r\n                            tournamentDelete={tournamentDelete}\r\n                            readTournament={readTournament}\r\n                            dateSplit={dateSplit}\r\n                            isDuplicate={isDuplicate}\r\n                          />\r\n                        </>\r\n\r\n                      }\r\n                      {!isDeleteMode &&\r\n                        <button\r\n                          className=\"btn_In_to1\"\r\n                          onClick={() =>\r\n                            PageTransition(\r\n                              \"inputschool?urlTournamentId=\" +\r\n                              Tournament.tournament_id +\r\n                              \"&urlTournamentName=\" +\r\n                              Tournament.tournament_name\r\n                            )\r\n                          }>\r\n                          {Tournament.tournament_name}\r\n                        </button>\r\n                      }\r\n                      <br />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input_Tournament;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
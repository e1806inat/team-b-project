{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morim\\\\Desktop\\\\my_folder\\\\school\\\\lesson\\\\ensyu\\\\code\\\\team-b-project\\\\frontend\\\\src\\\\AllPage\\\\InputAll\\\\PreInput\\\\InputSchoolPage\\\\InputSchool.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Hyoji } from './comInputSchool/Hyoji';\nimport { CheckBoxList } from './comInputSchool/CheckBoxList1';\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\nimport { OptionButton } from \"../../../OtherPage/optionFunc/OptionButton\";\nimport './InputSchool.css';\n\n//バックエンドのurlを取得\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\n\n//次回追加ボタン押した後に、高校再表示させるのをやる\n\n//データを送る\nconst sendSchool = (useSchools, urlTournamentId, setUseSchools) => {\n  let toSendSchool = [];\n  //チェックされているものだけの配列を作る\n  useSchools.map(school => {\n    if (school.IsCheck) {\n      toSendSchool = [...toSendSchool, {\n        tournament_id: urlTournamentId,\n        school_name: school.school_name,\n        school_id: school.school_id,\n        seed: school.seed\n      }];\n    }\n  });\n  let toSendSchool2 = [];\n  toSendSchool.map(v => {\n    if (useSchools.some(u => v.school_name === u.school_name)) {\n      console.log(v);\n    } else toSendSchool2 = [...toSendSchool2, v];\n  });\n  console.log(toSendSchool2);\n\n  // fetch(backendUrl + \"/school/participants_register\", {\n  //   method: \"POST\",\n  //   mode: \"cors\",\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   //body: JSON.stringify({ email:login_id , password:login_ps }),\n  //   body: JSON.stringify(toSendSchool),\n  // })\n  //   .then((response) => response.text())\n  //   .then((data) => {\n  //     if (data === \"OK\") {\n  //       readSchool(setUseSchools, urlTournamentId)\n  //     }\n  //   })\n};\n\n//データベースから初期項目を読み出し\nconst readSchool = (setUseSchools, urlTournamentId) => {\n  fetch(backendUrl + \"/school/school_call\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.json()).then(receivedAllSchool => {\n    // enchantCheck(receivedAllSchool, setUseSchools);\n    loadRegisteredSchool(urlTournamentId, receivedAllSchool, setUseSchools);\n  });\n};\n\n//checkを付与\nconst enchantCheck = (receivedAllSchool, setUseSchools, data) => {\n  let setUseSchools3 = [];\n  receivedAllSchool.map(school => {\n    if (data.some(u => u.school_id === school.school_id)) {\n      setUseSchools3 = [...setUseSchools3, {\n        school_name: school.school_name,\n        school_id: school.school_id,\n        IsCheck: true,\n        seed: 0\n      }];\n    } else {\n      setUseSchools3 = [...setUseSchools3, {\n        school_name: school.school_name,\n        school_id: school.school_id,\n        IsCheck: false,\n        seed: 0\n      }];\n    }\n  });\n  setUseSchools(setUseSchools3);\n};\n\n//１つの高校を追加する\nconst addSchool = (setUseSchools, addSchoolName, urlTournamentId, useSchools) => {\n  if (useSchools.some(v => v.school_name === addSchoolName)) console.log(\"高校名がかぶっています\");else {\n    fetch(backendUrl + \"/school/school_register\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        school_name: addSchoolName\n      })\n    }).then(response => response.text()).then(data => {\n      if (data === \"OK\") {\n        readSchool(setUseSchools, urlTournamentId);\n      }\n    });\n  }\n};\n\n//対象の大会の学校情報呼び出し\nconst loadRegisteredSchool = (urlTournamentId, receivedAllSchool, setUseSchools) => {\n  fetch(backendUrl + \"/school/school_call_p\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      tournament_id: urlTournamentId\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.length === 0) {\n      console.log(\"登録されていません\");\n    } else {\n      console.log(data);\n      enchantCheck(receivedAllSchool, setUseSchools, data);\n    }\n  });\n};\nexport const InputSchool = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const urlTournamentName = searchParams.get(\"urlTournamentName\");\n  const urlTournamentId = searchParams.get(\"urlTournamentId\");\n\n  //ページ遷移用\n  const navigate = useNavigate();\n  const PageTransition = url => {\n    navigate(url);\n  };\n\n  //const { Schools } = require(\"../../../../DB/Schools\"); //分割代入\n  let Schools = [];\n  const [isCheckBoxMode, setIsCheckBoxMode] = useState(!true);\n  const ref = useRef();\n  const [useSchools, setUseSchools] = useState([]);\n  useEffect(() => {\n    //全学校読み出し\n    readSchool(setUseSchools, urlTournamentId);\n    //既に登録されている学校読み出し\n    // loadRegisteredSchool(urlTournamentId)\n  }, []);\n  const handleClick = () => {\n    setUseSchools([...useSchools, {\n      school_name: ref.current.value,\n      school_id: null,\n      IsCheck: true,\n      seed: 0\n    }]);\n  };\n  const handleCheckBox = () => {\n    setIsCheckBoxMode(!isCheckBoxMode);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"aa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n      TitleText: \"高校入力選択画面\",\n      PageTransition: PageTransition,\n      valueUrl: -1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"BackButton\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: '/home/input_mode/',\n          className: \"BackButton\",\n          children: \"\\uFF1C\\u623B\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 40\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournamentName\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: urlTournamentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InputSchool\",\n      children: [\"\\u5B66\\u6821\\u30FB\\u30C1\\u30FC\\u30E0\\u540D \", /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addSchool(setUseSchools, ref.current.value, urlTournamentId, useSchools),\n        children: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ButtonArea\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"checkButton\",\n        onClick: handleCheckBox,\n        children: \"\\u9AD8\\u6821\\u9078\\u629E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), !isCheckBoxMode && Hyoji(useSchools, navigate, urlTournamentName, urlTournamentId), isCheckBoxMode && CheckBoxList(useSchools, setUseSchools), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 66\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ButtonArea\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"decisionButton\",\n        onClick: () => sendSchool(useSchools, urlTournamentId, setUseSchools),\n        children: \"\\u9AD8\\u6821\\u540D\\u767B\\u9332\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(InputSchool, \"BODgIUybfX1GbAZH8ia88G8EPzc=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = InputSchool;\nexport default InputSchool;\nvar _c;\n$RefreshReg$(_c, \"InputSchool\");","map":{"version":3,"names":["React","useState","useRef","Hyoji","CheckBoxList","Link","useNavigate","useSearchParams","useEffect","TitleBar","OptionButton","backendUrl","require","sendSchool","useSchools","urlTournamentId","setUseSchools","toSendSchool","map","school","IsCheck","tournament_id","school_name","school_id","seed","toSendSchool2","v","some","u","console","log","readSchool","fetch","method","mode","headers","then","response","json","receivedAllSchool","loadRegisteredSchool","enchantCheck","data","setUseSchools3","addSchool","addSchoolName","body","JSON","stringify","text","length","InputSchool","searchParams","urlTournamentName","get","navigate","PageTransition","url","Schools","isCheckBoxMode","setIsCheckBoxMode","ref","handleClick","current","value","handleCheckBox"],"sources":["C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project/frontend/src/AllPage/InputAll/PreInput/InputSchoolPage/InputSchool.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Hyoji } from './comInputSchool/Hyoji';\r\nimport { CheckBoxList } from './comInputSchool/CheckBoxList1';\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\nimport { OptionButton } from \"../../../OtherPage/optionFunc/OptionButton\"\r\n\r\nimport './InputSchool.css';\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n//次回追加ボタン押した後に、高校再表示させるのをやる\r\n\r\n//データを送る\r\nconst sendSchool = (useSchools, urlTournamentId, setUseSchools) => {\r\n  let toSendSchool = []\r\n  //チェックされているものだけの配列を作る\r\n  useSchools.map((school) => {\r\n    if (school.IsCheck) {\r\n      toSendSchool = [...toSendSchool,\r\n      {\r\n        tournament_id: urlTournamentId,\r\n        school_name: school.school_name,\r\n        school_id: school.school_id,\r\n        seed: school.seed\r\n      }]\r\n    }\r\n\r\n  })\r\n  let toSendSchool2 = []\r\n  toSendSchool.map((v)=> {\r\n    if(useSchools.some((u)=> v.school_name === u.school_name)){console.log(v)}\r\n    else toSendSchool2 = [...toSendSchool2, v]\r\n  })\r\n  console.log(toSendSchool2)\r\n\r\n  // fetch(backendUrl + \"/school/participants_register\", {\r\n  //   method: \"POST\",\r\n  //   mode: \"cors\",\r\n  //   headers: {\r\n  //     \"Content-Type\": \"application/json\",\r\n  //   },\r\n  //   //body: JSON.stringify({ email:login_id , password:login_ps }),\r\n  //   body: JSON.stringify(toSendSchool),\r\n  // })\r\n  //   .then((response) => response.text())\r\n  //   .then((data) => {\r\n  //     if (data === \"OK\") {\r\n  //       readSchool(setUseSchools, urlTournamentId)\r\n  //     }\r\n  //   })\r\n}\r\n\r\n\r\n//データベースから初期項目を読み出し\r\nconst readSchool = (setUseSchools, urlTournamentId) => {\r\n  fetch(backendUrl + \"/school/school_call\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((receivedAllSchool) => {\r\n\r\n      // enchantCheck(receivedAllSchool, setUseSchools);\r\n      loadRegisteredSchool(urlTournamentId, receivedAllSchool, setUseSchools)\r\n    })\r\n}\r\n\r\n\r\n\r\n//checkを付与\r\nconst enchantCheck = (receivedAllSchool, setUseSchools, data) => {\r\n  let setUseSchools3 = []\r\n  receivedAllSchool.map((school) => {\r\n    if (data.some((u) => u.school_id === school.school_id)) {\r\n      setUseSchools3 = (\r\n        [...setUseSchools3, {\r\n          school_name: school.school_name,\r\n          school_id: school.school_id,\r\n          IsCheck: true,\r\n          seed: 0\r\n        }])\r\n    }\r\n    else {\r\n      setUseSchools3 = (\r\n        [...setUseSchools3, {\r\n          school_name: school.school_name,\r\n          school_id: school.school_id,\r\n          IsCheck: false,\r\n          seed: 0\r\n        }])\r\n    }\r\n\r\n  })\r\n  setUseSchools(setUseSchools3)\r\n}\r\n\r\n\r\n//１つの高校を追加する\r\nconst addSchool = (setUseSchools, addSchoolName, urlTournamentId, useSchools) => {\r\n  if (useSchools.some((v) => v.school_name === addSchoolName)) console.log(\"高校名がかぶっています\")\r\n  else {\r\n    fetch(backendUrl + \"/school/school_register\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ school_name: addSchoolName }),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        if (data === \"OK\") {\r\n          readSchool(setUseSchools, urlTournamentId)\r\n        }\r\n      })\r\n  }\r\n\r\n}\r\n\r\n//対象の大会の学校情報呼び出し\r\nconst loadRegisteredSchool = (urlTournamentId, receivedAllSchool, setUseSchools) => {\r\n\r\n\r\n  fetch(backendUrl + \"/school/school_call_p\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ tournament_id: urlTournamentId }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.length === 0) {\r\n        console.log(\"登録されていません\")\r\n      }\r\n      else {\r\n        console.log(data);\r\n        enchantCheck(receivedAllSchool, setUseSchools, data)\r\n      }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const InputSchool = () => {\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n  const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n\r\n  //ページ遷移用\r\n  const navigate = useNavigate()\r\n  const PageTransition = (url) => {\r\n    navigate(url)\r\n  }\r\n\r\n  //const { Schools } = require(\"../../../../DB/Schools\"); //分割代入\r\n  let Schools = []\r\n\r\n  const [isCheckBoxMode, setIsCheckBoxMode] = useState(!true)\r\n  const ref = useRef()\r\n  const [useSchools, setUseSchools] = useState([])\r\n\r\n  useEffect(() => {\r\n    //全学校読み出し\r\n    readSchool(setUseSchools, urlTournamentId);\r\n    //既に登録されている学校読み出し\r\n    // loadRegisteredSchool(urlTournamentId)\r\n  }, [])\r\n\r\n  const handleClick = () => {\r\n    setUseSchools([...useSchools,\r\n    { school_name: ref.current.value, school_id: null, IsCheck: true, seed: 0 }\r\n    ])\r\n  }\r\n\r\n  const handleCheckBox = () => {\r\n    setIsCheckBoxMode(!isCheckBoxMode)\r\n    return (\r\n      <button>aa</button>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <TitleBar\r\n        TitleText={\"高校入力選択画面\"}\r\n        PageTransition={PageTransition}\r\n        valueUrl={-1}\r\n      />\r\n      <OptionButton />\r\n\r\n      <div className=\"top\">\r\n        <button className=\"BackButton\"><Link to={'/home/input_mode/'} className=\"BackButton\">＜戻る</Link> </button>\r\n      </div>\r\n\r\n      <div className=\"tournamentName\">\r\n        <h3>{urlTournamentName}</h3>\r\n      </div>\r\n      <div className=\"InputSchool\">\r\n        学校・チーム名 <input ref={ref} ></input>\r\n        <button onClick={() => addSchool(setUseSchools, ref.current.value, urlTournamentId, useSchools)}>追加</button>\r\n      </div>\r\n      <br />\r\n\r\n      {/* <button onClick={handleCheckBox}>チェックボックス入力</button>\r\n      <button onClick={() => sendSchool(useSchools, urlTournamentId, Schools, setUseSchools)}>高校名登録</button> */}\r\n\r\n      <div className=\"ButtonArea\">\r\n        <button id=\"checkButton\" onClick={handleCheckBox}>高校選択</button>\r\n      </div>\r\n\r\n      <hr></hr>\r\n      {!isCheckBoxMode && Hyoji(useSchools, navigate, urlTournamentName, urlTournamentId)}\r\n      {isCheckBoxMode && CheckBoxList(useSchools, setUseSchools)}<br />\r\n      <div className=\"ButtonArea\">\r\n        <button className=\"decisionButton\" onClick={() => sendSchool(useSchools, urlTournamentId, setUseSchools)}>高校名登録</button>\r\n      </div>\r\n\r\n      <hr></hr>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default InputSchool;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from\"C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project-output/team-b-project/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project-output/team-b-project/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project-output/team-b-project/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{scoreBoard}from'./comSokuho/scoreBoard';import{outCount}from'./comSokuho/outCount';import{runnerCount}from'./comSokuho/runnerCount';import{freeWrite}from'./comSokuho/freeWrite';import{BaseballButton}from'./comSokuho/baseballButton';import\"./comSokuho/CSS/scoreBoard.css\";import{useEffect,useState}from'react';import Popupfield from\"./comSokuho/onisi_popup/onisi_popup\";import GameEndPopup from\"./comSokuho/GameEndPopup/GameEndPopup\";import EditPoint from\"./comSokuho/scoreCorrection/EditPoint\";import{MenuBar}from\"../../../OtherPage/optionFunc/MenuBar\";import{useCookies}from'react-cookie';//css\nimport\"./InputPlayGame.css\";import{TitleBar}from'../../../OtherPage/TitleBar/TitleBar';//プルダウン\nimport{PullDown}from'./comSokuho/PullDown/PullDown';import{PullDownMember}from'./comSokuho/PullDown/PullDownMember';import{useSearchParams,useNavigate}from'react-router-dom';//canvasの描画\nimport{Ground}from'./comSokuho/comCanvas/Ground';import{battedBall}from'./comSokuho/comCanvas/battedBall';//バックエンドのurlを取得\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var backendUrl=require(\"../../../../DB/communication\").backendUrl;//フロントの階層urlを取得\nvar routeUrl=require(\"../../../../DB/communication\").routeUrl;//自作プルダウン　改造あり\nvar makePulldown=function makePulldown(pulldownId,ArrayList,idText,nowSelected,setNowSelected,urlSchoolName,urlSchoolName2,dasekiAll,setNowIningState,setNowOutCountState,setRunnerCountState,setNowPlayingMember,setFreeWriteState,setcanvasX1,setcanvasY1,setAddScoreState,setFlag,battingOrder,battingOrder2,registeredMember1,registeredMember2,setBattingOrder,setBattingOrder2){console.log(dasekiAll);//pulldownIdは0でいいです。\n//ArrayListは表示したい要素を並べた配列です、普通の配列ではなく連想配列です。\n//idテキストは連想配列の属性を書きます。\n//nowSelectedは今プルダウンで何が選択されているかが入ります。初期値は[0]で、これは0番目の値が選択されている状態です。\n//setNowSelectedはnowSelecedの値をuseStateの機能で上書きする関数です。setNowSelected(更新値)とすれば、nowSelectedに更新値が入ります。\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"select\",{className:\"editButton\",id:\"tekitouni\",onChange:function onChange(e){//ステイトが変化すると再描画させるための文、これがないと再描画されない\n//なお、消すと再描画はされないが内部は変化する\nnowSelected=nowSelected.slice(0,nowSelected.length);nowSelected[pulldownId]=e.target.value;setNowSelected(nowSelected);editBattersBox(dasekiAll[nowSelected],dasekiAll,nowSelected,setNowIningState,setNowOutCountState,setRunnerCountState,setNowPlayingMember,setFreeWriteState,setcanvasX1,setcanvasY1,setAddScoreState,setFlag,battingOrder,battingOrder2,registeredMember1,registeredMember2,setBattingOrder,setBattingOrder2);},children:ArrayList.map(function(component,ind){return/*#__PURE__*/_jsxs(\"option\",{value:ind,children:[component[idText],\"\\u6253\\u5E2D\\u76EE\\uFF1A\",component.inning%10===1&&urlSchoolName,component.inning%10===2&&urlSchoolName2]});})})});};//打席編集\nvar editBattersBox=function editBattersBox(battersBox,battersBoxAll,nowSelected,setNowIningState,setNowOutCountState,setRunnerCountState,setNowPlayingMember,setFreeWriteState,setcanvasX1,setcanvasY1,setAddScoreState,setFlag,battingOrder,battingOrder2,registeredMember1,registeredMember2,setBattingOrder,setBattingOrder2){console.log(battersBox);var touchedCoordinate=battersBoxAll[nowSelected].touched_coordinate.split(\"_\");var teamABatter=0;var teamBpitcher=0;var teamBBatter=0;var teamApitcher=0;//pinchを反映させる\nbattersBoxAll.map(function(v,indBB){var playerId=[];if(v.pinch!==\"\"&&v.pinch!==\"0\"&&v.pinch!==null&&v.pinch!==undefined){//pinchに値が入っており、かつ値が正常であると思われる場合\nif(v.pinch.length>3){//スライス\nplayerId=v.pinch.split(\"→\");//表回\nif(v.inning%10-1===0){//打順配列からplayerId[0]を探す\nbattingOrder.map(function(u,indBB){if(u.player_id.toString()===playerId[0]){//登録されているメンバーからplayerId[1]を探す\nregisteredMember1.map(function(regiMember1){//あればその選手を打順配列に入れ替える\nif(regiMember1.player_id.toString()===playerId[1]){battingOrder[indBB]=regiMember1;setBattingOrder(battingOrder);}});}});}//裏回\nelse if(v.inning%10-1===1){//打順配列からplayerId[0]を探す\nbattingOrder2.map(function(u,indBB){if(u.player_id===playerId[0]){//登録されているメンバーからplayerId[1]を探す\nregisteredMember2.map(function(regiMember2){//あればその選手を打順配列に入れ替える\nif(regiMember2.player_id===playerId[1]){battingOrder2[indBB]=regiMember2;}});}});}}//pinchに値が入っており、かつ内容がおかしい場合\nelse{battersBoxAll[indBB].pinch=null;battersBoxAll[indBB].player_id=battersBoxAll[6].player_id;}}});console.log(battersBoxAll);var value=battersBoxAll[nowSelected].inning;for(var i=nowSelected;i>=0;i--){if(value!==battersBoxAll[i].inning){teamBBatter=battersBoxAll[i].player_id;teamApitcher=battersBoxAll[i].pitcher_id;break;}}//画面に反映\nsetNowIningState([Math.floor(battersBox.inning/10-1),battersBox.inning%10-1]);setNowOutCountState(battersBox.outcount);setRunnerCountState([battersBox.base/100>=1,battersBox.base/10>=1&&battersBox.base/100<1,battersBox.base%10===1]);setFreeWriteState(battersBox.text_inf);setFlag(battersBox.ball_kind);setcanvasX1(parseFloat(touchedCoordinate[0]));setcanvasY1(parseFloat(touchedCoordinate[1]));setAddScoreState(battersBox.score);if(battersBox.inning%10===1){var sendMember1=[{batter:battingOrder.findIndex(function(u){return u.player_id===battersBoxAll[nowSelected].player_id;}),pitcher:battingOrder2.findIndex(function(u){return u.player_id===battersBoxAll[nowSelected].pitcher_id;})},{batter:teamBBatter,pitcher:teamApitcher}];//値が入ってないときの処理\nif(sendMember1[0].batter===-1){sendMember1[0].batter=0;}if(sendMember1[0].pitcher===-1){sendMember1[0].pitcher=0;}setNowPlayingMember(sendMember1);}else if(battersBox.inning%10===2){var sendMember2=[{batter:teamABatter,pitcher:teamBpitcher},{batter:battingOrder2.findIndex(function(u){return u.player_id===battersBoxAll[nowSelected].player_id;}),pitcher:battingOrder.findIndex(function(u){return u.player_id===battersBoxAll[nowSelected].pitcher_id;})}];//値が入ってないときの処理\nif(sendMember2[1].batter===-1){sendMember2[1].batter=0;}if(sendMember2[1].pitcher===-1){sendMember2[1].pitcher=0;}setNowPlayingMember(sendMember2);}};//試合中の試合の情報を登録する\n// const RegisterDuringGame = async (urlGameId) => {\n//     await fetch(backendUrl + \"/game/during_game_register\", {\n//         method: \"POST\",\n//         mode: \"cors\",\n//         headers: {\n//             \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ game_id: urlGameId, tmp_table_name: String(urlGameId) }),\n//     })\n//         .then((response) => response.text())\n//         .then((data) => { console.log(data) })\n// }\n//試合中の試合の情報を削除する\nvar DeleteDuringGame=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(urlGameId){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(backendUrl+\"/game/during_game_delete\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:urlGameId})}).then(function(response){return response.text();}).then(function(data){console.log(data);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function DeleteDuringGame(_x){return _ref.apply(this,arguments);};}();//一時打席情報登録用のテーブル作成\n// const TmpTableCreate = async (urlGameId) => {\n//     await fetch(backendUrl + \"/daseki/tmp_table_create\", {\n//         method: \"POST\",\n//         mode: \"cors\",\n//         headers: {\n//             \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ table_name: urlGameId }),\n//     })\n//         .then((response) => response.text())\n//         .then((data) => { console.log(data) })\n// }\n//テーブル存在確認\n// const TmpTableCheck = (urlGameId, setIsExistTmpTable, TransmissionDasekiCall, urlTournamentId, urlSchoolId, urlSchoolId2,\n//     setNowIningState, setScoreState, setNowOutCountState,\n//     setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2\n// ) => {\n//     fetch(backendUrl + \"/daseki/tmp_table_check\", {\n//         method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\n//         body: JSON.stringify({ table_name: urlGameId }),\n//     })\n//         .then((response) => response.text())\n//         .then((data) => {\n//             //テーブルが存在しないとき\n//             if (data === \"not exist\") {\n//                 setIsExistTmpTable(false)\n//             }\n//             //テーブルが存在するとき\n//             else if (data === \"exist\") {\n//                 TransmissionDasekiCall(urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId,\n//                     setNowIningState, setScoreState, setNowOutCountState,\n//                     setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2\n//                 )\n//             }\n//         })\n// }\n////試合情報受け取り（速報用）\nvar TransmissionDasekiCall=function TransmissionDasekiCall(urlGameId,urlSchoolId,urlSchoolId2,urlTournamentId,setNowIningState,setScoreState,setNowOutCountState,setNowPlayingMember,setRunnerCountState,setDasekiAll,setBattingOrder,setBattingOrder2){//まず打席情報を受け取る\nfetch(backendUrl+\"/daseki/daseki_transmission\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:urlGameId,table_name:urlGameId})}).then(function(response){return response.json();}).then(function(data){console.log(data);//反転させる\n// data.reverse()\nsetDasekiAll(data);//空っぽなら無視\nif(data.length!==0){var latestDasaki=data[data.length-1];if(latestDasaki.outcount===3){//アウトカウント取得\nsetNowOutCountState(0);//イニング取得\nif(latestDasaki.inning%10===1){setNowIningState([Math.floor(latestDasaki.inning/10)-1,1]);}else{setNowIningState([Math.floor(latestDasaki.inning/10),0]);}//ランナー取得\nsetRunnerCountState([false,false,false]);}else{//アウトカウント取得\nsetNowOutCountState(latestDasaki.outcount);//イニング取得\nsetNowIningState([Math.floor(latestDasaki.inning/10)-1,latestDasaki.inning%10-1]);//ランナー取得\nsetRunnerCountState([latestDasaki.base[0]===\"1\",latestDasaki.base[1]===\"1\",latestDasaki.base[2]===\"1\"]);}//スコア取得\n//スコアの初期化\nvar InitialScore=[[null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null]];var sendScore=InitialScore;data.map(function(u){//null対策\nif(sendScore[u.inning%10-1][Math.floor(u.inning/10)-1]===null)sendScore[u.inning%10-1][Math.floor(u.inning/10)-1]=0;//受け取ったスコアを配列に格納\nsendScore[u.inning%10-1][Math.floor(u.inning/10)-1]=sendScore[u.inning%10-1][Math.floor(u.inning/10)-1]+u.score;});setScoreState(sendScore);//今現在のプレイヤー取得\n//まずは先行チームをフェッチ\nfetch(backendUrl+\"/member/starting_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:urlGameId,school_id:urlSchoolId})}).then(function(response){return response.json();}).then(function(TeamAdata){//後攻チームをフェッチ\n//打順を持ってくる\nfetch(backendUrl+\"/member/starting_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:urlGameId,school_id:urlSchoolId2})}).then(function(response){return response.json();}).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(TeamBdata){var loadRegistered,loadRegistered1,loadRegistered2,text,index,teamABatter,teamApitcher,teamBBatter,teamBpitcher,_loop,i,_ret,_loop2,_i,_ret2;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return{loadRegistered1:\"\",loadRegistered2:\"\"};case 2:loadRegistered=_context2.sent;_context2.next=5;return fetch(backendUrl+\"/member/tournament_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({tournament_id:urlTournamentId,school_id:urlSchoolId})});case 5:loadRegistered1=_context2.sent;_context2.next=8;return loadRegistered1.json();case 8:loadRegistered.loadRegistered1=_context2.sent;_context2.next=11;return fetch(backendUrl+\"/member/tournament_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({tournament_id:urlTournamentId,school_id:urlSchoolId2})});case 11:loadRegistered2=_context2.sent;_context2.next=14;return loadRegistered2.json();case 14:loadRegistered.loadRegistered2=_context2.sent;text=null;index=0;data.map(function(v){if(v.pinch===null||v.pinch===\"0\"){}else{text=v.pinch.split(\"→\");// 表のとき\nif(v.inning%10-1===0){index=TeamAdata.findIndex(function(u){return u.player_id===parseInt(text[0]);});TeamAdata[index]=loadRegistered.loadRegistered1.find(function(u){return u.player_id===parseInt(text[1]);});}// 裏のとき\nelse{index=TeamBdata.findIndex(function(u){return u.player_id===parseInt(text[0]);});TeamBdata[index]=loadRegistered.loadRegistered2.find(function(u){return u.player_id===parseInt(text[1]);});}}});TeamAdata.sort(function(a,b){return a.batting_order-b.batting_order;});setBattingOrder(TeamAdata);TeamBdata.sort(function(a,b){return a.batting_order-b.batting_order;});setBattingOrder2(TeamBdata);teamABatter=0;teamApitcher=0;teamBBatter=0;teamBpitcher=0;//さっきの打席が先攻チームだった場合\nif(!(latestDasaki.inning%10-1===0)){_context2.next=41;break;}teamABatter=TeamAdata.findIndex(function(u){return u.player_id===latestDasaki.player_id;});teamBpitcher=TeamBdata.findIndex(function(u){return u.player_id===latestDasaki.pitcher_id;});_loop=function _loop(i){if(latestDasaki.inning!==data[i].inning){teamBBatter=TeamBdata.findIndex(function(u){return u.player_id===data[i].player_id;});teamApitcher=TeamAdata.findIndex(function(u){return u.player_id===data[i].pitcher_id;});return\"break\";}};i=data.length-1;case 31:if(!(i>=0)){_context2.next=38;break;}_ret=_loop(i);if(!(_ret===\"break\")){_context2.next=35;break;}return _context2.abrupt(\"break\",38);case 35:i--;_context2.next=31;break;case 38:if(latestDasaki.outcount!==3)teamABatter++;//過去に後攻の打席がある場合\nelse if(data.some(function(v){return v.inning%10-1===1;}))teamBBatter++;_context2.next=54;break;case 41:if(!(latestDasaki.inning%10-1===1)){_context2.next=54;break;}_loop2=function _loop2(_i){if(latestDasaki.inning!==data[_i].inning){console.log(data[_i]);teamABatter=TeamAdata.findIndex(function(u){return u.player_id===data[_i].player_id;});teamBpitcher=TeamBdata.findIndex(function(u){return u.player_id===data[_i].pitcher_id;});return\"break\";}};_i=data.length-1;case 44:if(!(_i>=0)){_context2.next=51;break;}_ret2=_loop2(_i);if(!(_ret2===\"break\")){_context2.next=48;break;}return _context2.abrupt(\"break\",51);case 48:_i--;_context2.next=44;break;case 51:teamBBatter=TeamBdata.findIndex(function(u){return u.player_id===latestDasaki.player_id;});teamApitcher=TeamAdata.findIndex(function(u){return u.player_id===latestDasaki.pitcher_id;});if(data[data.length-1].outcount!==3)teamBBatter++;else teamABatter++;case 54://打順に存在しないか最初の打者であるとき、もしくは打順最後の打者であるとき\nif(teamABatter===9||teamABatter===-1)teamABatter=0;if(teamBpitcher===-1)teamBpitcher=0;if(teamBBatter===9||teamBBatter===-1)teamBBatter=0;if(teamApitcher===-1)teamApitcher=0;//最後に今現在プレイ中の選手を格納\nsetNowPlayingMember([{batter:teamABatter,pitcher:teamBpitcher},{batter:teamBBatter,pitcher:teamApitcher}]);case 59:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());});}//打席情報に何も入ってないとき\nif(data.length===0){//最初のプレイヤー取得\n//まずは先行チーム\nfetch(backendUrl+\"/member/starting_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:urlGameId,school_id:urlSchoolId})}).then(function(response){return response.json();}).then(function(TeamAdata){TeamAdata.sort(function(a,b){return a.batting_order-b.batting_order;});setBattingOrder(TeamAdata);//後攻チーム\n//打順を持ってくる\nfetch(backendUrl+\"/member/starting_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:urlGameId,school_id:urlSchoolId2})}).then(function(response){return response.json();}).then(function(TeamBdata){TeamBdata.sort(function(a,b){return a.batting_order-b.batting_order;});setBattingOrder2(TeamBdata);var teamABatter=0;var teamBpitcher=TeamBdata.findIndex(function(v){return v.position===\"ピッチャー\";});var teamBBatter=0;var teamApitcher=TeamAdata.findIndex(function(v){return v.position===\"ピッチャー\";});//最後に今現在プレイ中の選手を格納\nsetNowPlayingMember([{batter:teamABatter,pitcher:teamBpitcher},{batter:teamBBatter,pitcher:teamApitcher}]);});});}});};//DBを介さない試合情報受け取り（速報用）\nvar loardNowDaseki=function loardNowDaseki(setNowOutCountState,setNowIningState,setRunnerCountState,setScoreState,setNowPlayingMember,setFreeWriteState,dasekiAll,battingOrder,battingOrder2){//空っぽなら無視\nif(dasekiAll.length!==0){var latestDasaki=dasekiAll[dasekiAll.length-1];//自由記述は空\nsetFreeWriteState(\"\");if(latestDasaki.outcount===3){//アウトカウント取得\nsetNowOutCountState(0);//イニング取得\nif(latestDasaki.inning%10===1){setNowIningState([Math.floor(latestDasaki.inning/10)-1,1]);}else{setNowIningState([Math.floor(latestDasaki.inning/10),0]);}//ランナー取得\nsetRunnerCountState([false,false,false]);}else{//アウトカウント取得\nsetNowOutCountState(latestDasaki.outcount);//イニング取得\nsetNowIningState([Math.floor(latestDasaki.inning/10)-1,latestDasaki.inning%10-1]);//ランナー取得\nsetRunnerCountState([latestDasaki.base[0]===\"1\",latestDasaki.base[1]===\"1\",latestDasaki.base[2]===\"1\"]);}//スコア取得\n//スコアの初期化\nvar InitialScore=[[null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null]];var sendScore=InitialScore;dasekiAll.map(function(u){//null対策\nif(sendScore[u.inning%10-1][Math.floor(u.inning/10)-1]===null)sendScore[u.inning%10-1][Math.floor(u.inning/10)-1]=0;//受け取ったスコアを配列に格納\nsendScore[u.inning%10-1][Math.floor(u.inning/10)-1]=sendScore[u.inning%10-1][Math.floor(u.inning/10)-1]+u.score;});setScoreState(sendScore);//今現在のプレイヤー取得\n//まずは先行チーム\n//後攻チーム\nvar _teamABatter=0;var _teamApitcher=0;var _teamBBatter=0;var _teamBpitcher=0;//先攻\nif(latestDasaki.inning%10-1===0){_teamABatter=battingOrder.findIndex(function(u){return u.player_id===latestDasaki.player_id;});_teamBpitcher=battingOrder2.findIndex(function(u){return u.player_id===latestDasaki.pitcher_id;});var _loop3=function _loop3(i){if(latestDasaki.inning!==dasekiAll[i].inning){_teamBBatter=battingOrder2.findIndex(function(u){return u.player_id===dasekiAll[i].player_id;});_teamApitcher=battingOrder.findIndex(function(u){return u.player_id===dasekiAll[i].pitcher_id;});return\"break\";}};for(var i=dasekiAll.length-1;i>=0;i--){var _ret3=_loop3(i);if(_ret3===\"break\")break;}if(dasekiAll[dasekiAll.length-1].outcount!==3)_teamABatter++;else _teamBBatter++;}//後攻\nelse if(latestDasaki.inning%10-1===1){var _loop4=function _loop4(_i2){if(latestDasaki.inning!==dasekiAll[_i2].inning){console.log(dasekiAll[_i2]);_teamABatter=battingOrder.findIndex(function(u){return u.player_id===dasekiAll[_i2].player_id;});_teamBpitcher=battingOrder2.findIndex(function(u){return u.player_id===dasekiAll[_i2].pitcher_id;});return\"break\";}};for(var _i2=dasekiAll.length-1;_i2>=0;_i2--){var _ret4=_loop4(_i2);if(_ret4===\"break\")break;}_teamBBatter=battingOrder2.findIndex(function(u){return u.player_id===latestDasaki.player_id;});_teamApitcher=battingOrder.findIndex(function(u){return u.player_id===latestDasaki.pitcher_id;});if(dasekiAll[dasekiAll.length-1].outcount!==3)_teamBBatter++;else _teamABatter++;}//打順に存在しないか最初の打者であるとき、もしくは打順最後の打者であるとき\nif(_teamABatter===9||_teamABatter===-1)_teamABatter=0;if(_teamBpitcher===-1)_teamBpitcher=0;if(_teamBBatter===9||_teamBBatter===-1)_teamBBatter=0;if(_teamApitcher===-1)_teamApitcher=0;//最後に今現在プレイ中の選手を格納\nsetNowPlayingMember([{batter:_teamABatter,pitcher:_teamBpitcher},{batter:_teamBBatter,pitcher:_teamApitcher}]);}};//一時打席情報を本打席テーブルに送る\nvar TableRegister=function TableRegister(urlGameId){console.log(urlGameId+\"の試合情報を登録しました\");fetch(backendUrl+\"/daseki/data_register\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:urlGameId,table_name:urlGameId})}).then(function(response){return response.text();}).then(function(data){console.log(\"TableRegister=\"+data);});};//一時打席情報を削除\nvar TmpTableDelete=function TmpTableDelete(urlGameId){console.log(urlGameId+\"の試合情報を削除しました\");fetch(backendUrl+\"/daseki/tmp_table_delete\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:urlGameId,table_name:urlGameId})}).then(function(response){return response.text();}).then(function(data){console.log(\"TmpTableDelete=\"+data);});};//打率計算\nvar CalculateBatAvg=function CalculateBatAvg(urlGameId){console.log(\"打率計算関数を呼び出しました\");fetch(backendUrl+\"/member/cal_BA\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:urlGameId,table_name:urlGameId})}).then(function(response){return response.text();}).then(function(data){console.log(\"CalculateBatAvg=\"+data);});};//一時打席情報登録用のテーブルに打席情報登録（UPSERTを使うかも）\nvar DasekiRegister=function DasekiRegister(sendInfo,trigger,setTrigger){fetch(backendUrl+\"/daseki/daseki_register\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(sendInfo)}).then(function(response){return response.text();}).then(function(data){if(data===\"OK\"){setTrigger(!trigger);}});};//選手登録された選手読み込む\nvar loadRegisteredMember=function loadRegisteredMember(setRegisteredMember,urlTournamentId,urlSchoolId){fetch(backendUrl+\"/member/tournament_member_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({tournament_id:urlTournamentId,school_id:urlSchoolId})}).then(function(response){return response.json();}).then(function(data){setRegisteredMember(data);});};//修正内容をバックエンドに送る\nvar sendEdit=function sendEdit(urlGameId,dasekiAll,nowSelected,nowIningState,addScoreState,scoreState,nowOutCountState,nowPlayingMember,battingOrder,battingOrder2,runnerCountState,freeWriteState,canvasX1,canvasY1,flag,batterResult,isPinch,trigger,setTrigger){console.log(dasekiAll[nowSelected]);//DBに送るための準備\nvar totalScore=0;scoreState[nowIningState[1]].map(function(score){totalScore=totalScore+score;});var runnerCount=\"\";runnerCountState.map(function(runner){if(runner===true)runnerCount=\"1\"+runnerCount;else if(runner===false)runnerCount=\"0\"+runnerCount;});var isHit=0;var isFourball=0;var isDeadball=0;if(batterResult===0){}else if(batterResult===1)isHit=1;else if(batterResult===2)isFourball=1;else if(batterResult===3)isDeadball=1;//選手だけここで入れる\nvar order=[];if(nowIningState[1]===0){order={player_id:battingOrder[nowPlayingMember[nowIningState[1]].batter].player_id,pitcher_id:battingOrder2[nowPlayingMember[nowIningState[1]].pitcher].player_id};}else if(nowIningState[1]===1){order={player_id:battingOrder2[nowPlayingMember[nowIningState[1]].batter].player_id,pitcher_id:battingOrder[nowPlayingMember[nowIningState[1]].pitcher].player_id};}//DBにデータを送る\nvar sendInfo={table_name:urlGameId,at_bat_id:dasekiAll[nowSelected].at_bat_id,inning:(nowIningState[1]+1)*10+(nowIningState[0]+1),game_id:urlGameId,school_id:dasekiAll[nowSelected].school_id,player_id:order.player_id,pitcher_id:order.pitcher_id,score:addScoreState,total_score:totalScore,outcount:nowOutCountState,base:runnerCount,text_inf:freeWriteState,pass:0,touched_coordinate:canvasX1+\"_\"+canvasY1,ball_kind:flag,hit:isHit,foreball:isFourball,deadball:isDeadball,pinch:isPinch};console.log(sendInfo);fetch(backendUrl+\"/daseki/registered_daseki_update\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(sendInfo)}).then(function(response){return response.text();}).then(function(data){console.log(data);setTrigger(!trigger);});};var canvasSize=1000;var homebase=400;var InputPastGame=function InputPastGame(){//クッキー関連\nvar _useCookies=useCookies(),_useCookies2=_slicedToArray(_useCookies,3),cookies=_useCookies2[0],setCookie=_useCookies2[1],removeCookie=_useCookies2[2];//ページ遷移用\nvar navigate=useNavigate();var PageTransition=function PageTransition(url){navigate(url);};//urlから値を読み出す\nvar _useSearchParams=useSearchParams(),_useSearchParams2=_slicedToArray(_useSearchParams,1),searchParams=_useSearchParams2[0];var urlTournamentId=searchParams.get(\"urlTournamentId\");var urlTournamentName=searchParams.get(\"urlTournamentName\");var urlSchoolId=searchParams.get(\"urlSchoolId\");var urlSchoolName=searchParams.get(\"urlSchoolName\");var urlSchoolId2=searchParams.get(\"urlSchoolId2\");var urlSchoolName2=searchParams.get(\"urlSchoolName2\");var urlGameId=searchParams.get(\"urlGameId\");//試合の一時テーブルが存在するかどうかを管理するステイト\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isExistTmpTable=_useState2[0],setIsExistTmpTable=_useState2[1];//Score記録 左が裏表、右が回数 イニングとは逆\nvar _require=require(\"../../../../DB/Score\"),Score=_require.Score;var _useState3=useState(Score),_useState4=_slicedToArray(_useState3,2),scoreState=_useState4[0],setScoreState=_useState4[1];//Scoreの加算値の監視\nvar _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),addScoreState=_useState6[0],setAddScoreState=_useState6[1];//今のイニング 左が回、右が表裏\nvar _useState7=useState([0,0]),_useState8=_slicedToArray(_useState7,2),nowIningState=_useState8[0],setNowIningState=_useState8[1];//自由記述内容を監視\nvar _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),freeWriteState=_useState10[0],setFreeWriteState=_useState10[1];//いらんかも\n//自由記述編集モードのフラグ\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),freeWriteModeFlag=_useState12[0],setFreeWriteModeFlag=_useState12[1];//多分打球の種類だと思われる\nvar _useState13=useState(2),_useState14=_slicedToArray(_useState13,2),flag=_useState14[0],setFlag=_useState14[1];//打者の結果を記録する(0:何もなし, 1:ヒット,2:四球, 3:死球)\nvar _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),batterResult=_useState16[0],setBatterResult=_useState16[1];//緑プルダウン用\nvar _useState17=useState(15),_useState18=_slicedToArray(_useState17,2),nowPosition=_useState18[0],setNowPosition=_useState18[1];//アウトカウント\nvar _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),nowOutCountState=_useState20[0],setNowOutCountState=_useState20[1];//ランナーカウント\nvar _useState21=useState([false,false,false]),_useState22=_slicedToArray(_useState21,2),runnerCountState=_useState22[0],setRunnerCountState=_useState22[1];//選手登録情報を読み込む\nvar _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),registeredMember1=_useState24[0],setRegisteredMember1=_useState24[1];var _useState25=useState([]),_useState26=_slicedToArray(_useState25,2),registeredMember2=_useState26[0],setRegisteredMember2=_useState26[1];//打席一覧情報のステイト\nvar _useState27=useState([{at_bat_id:1,ball_kind:\"2\",base:\"000\",deadball:0,foreball:0,game_id:1,hit:0,inning:11,outcount:3,pass:0,pinch:null,pitcher_id:21,player_id:7,school_id:1,score:0,text_inf:\"データなし\",total_score:0,touched_coordinate:\"400_450\"}]),_useState28=_slicedToArray(_useState27,2),dasekiAll=_useState28[0],setDasekiAll=_useState28[1];//打席一覧情報のプルダウンの選択状況を管理するステイト\nvar _useState29=useState([0]),_useState30=_slicedToArray(_useState29,2),nowSelected=_useState30[0],setNowSelected=_useState30[1];//打順と打者のリスト\nvar _useState31=useState([[{player_name_kanji:'丹羽 長秀'},{player_name_kanji:'柴田 勝家'}],0]),_useState32=_slicedToArray(_useState31,2),battingOrder=_useState32[0],setBattingOrder=_useState32[1];var _useState33=useState([{player_name_kanji:'丹羽 長秀'},{player_name_kanji:'柴田 勝家'}]),_useState34=_slicedToArray(_useState33,2),battingOrder2=_useState34[0],setBattingOrder2=_useState34[1];//今の打順と今のピッチャーが誰なのかを2チーム文記録する\nvar _useState35=useState([{batter:0,pitcher:0},{batter:0,pitcher:0}]),_useState36=_slicedToArray(_useState35,2),nowPlayingMember=_useState36[0],setNowPlayingMember=_useState36[1];//代打フラグ 4→15,12→6\nvar _useState37=useState(null),_useState38=_slicedToArray(_useState37,2),isPinch=_useState38[0],setIsPinch=_useState38[1];//代打で変更される前の打順を記録するステイト\nvar _useState39=useState({dasekiNum:0,order:[]}),_useState40=_slicedToArray(_useState39,2),latestBatOrder=_useState40[0],setLatestBatOrder=_useState40[1];//パスボタンのステイトを定義 0か1か\nvar _useState41=useState(0),_useState42=_slicedToArray(_useState41,2),isPass=_useState42[0],setIsPass=_useState42[1];//データを読み込みを行うトリガー\nvar _useState43=useState(true),_useState44=_slicedToArray(_useState43,2),trigger=_useState44[0],setTrigger=_useState44[1];//編集モードであるかどうかを監視するステイト\nvar _useState45=useState(false),_useState46=_slicedToArray(_useState45,2),isEditMode=_useState46[0],setIsEditMode=_useState46[1];//画面解像度取得\nvar sw=document.documentElement.clientWidth;// 画面の横幅\nvar sh=document.documentElement.clientHeight;// 画面の高さ\n// contextを状態として持つ\nvar _useState47=useState(null),_useState48=_slicedToArray(_useState47,2),context=_useState48[0],setContext=_useState48[1];//打球を消すためのステイト\nvar _useState49=useState(false),_useState50=_slicedToArray(_useState49,2),deleteball=_useState50[0],setDeleteBall=_useState50[1];var _useState51=useState(0),_useState52=_slicedToArray(_useState51,2),canvasX1=_useState52[0],setcanvasX1=_useState52[1];var _useState53=useState(0),_useState54=_slicedToArray(_useState53,2),canvasY1=_useState54[0],setcanvasY1=_useState54[1];//一つのStateで管理しようぜ的な試み\n//const [canvasXY, setCanvasXY] = useState({x:0, y:0})\n// コンポーネントの初期化完了後コンポーネント状態にコンテキストを登録\nvar homebase=520;var h=70;var l=-110;var w=0.03*homebase;//ベースの幅\nvar margin=10;//ベース位置調整用\nuseEffect(function(){var canvas=document.getElementById(\"canvas\");var canvasContext=canvas.getContext(\"2d\");setContext(canvasContext);canvas.addEventListener(\"click\",function(e){var rect=e.target.getBoundingClientRect();// ブラウザ上での座標を求める\nvar viewX=e.clientX-rect.left,viewY=e.clientY-rect.top;// 表示サイズとキャンバスの実サイズの比率を求める\nvar scaleWidth=canvas.clientWidth/canvas.width,scaleHeight=canvas.clientHeight/canvas.height;// ブラウザ上でのクリック座標をキャンバス上に変換\nvar canvasX=Math.floor(viewX/scaleWidth),canvasY=Math.floor(viewY/scaleHeight);console.log(canvasX,canvasY);setcanvasX1(canvasX);setcanvasY1(canvasY);});},[]);useEffect(function(){if(context!==null){Ground(context);}},[context]);// 状態にコンテキストが登録されたらそれに対して操作できる\nuseEffect(function(){if(context!==null){//削除\ncontext.clearRect(0,0,canvasSize,canvasSize);Ground(context);//ベースの色\nvar baseColor2=[];for(var i=0;i<3;i++){if(runnerCountState[i]){baseColor2[i]=\"blue\";console.log(baseColor2[i]);}else{baseColor2[i]=\"white\";}}context.strokeStyle=\"black\";//３塁ベース\ncontext.fillStyle=baseColor2[0];context.beginPath();context.moveTo(homebase*3/4+l,homebase*3/4-margin+h);context.lineTo(homebase*3/4-w+l,homebase*3/4+w-margin+h);context.lineTo(homebase*3/4+l,homebase*3/4+w*2-margin+h);context.lineTo(homebase*3/4+w+l,homebase*3/4+w-margin+h);context.closePath();context.fill();context.lineWidth=1;context.stroke();//2塁ベース\ncontext.fillStyle=baseColor2[1];context.beginPath();context.moveTo(homebase+l,homebase/2-margin+h);context.lineTo(homebase-w+l,homebase/2+w-margin+h);context.lineTo(homebase+l,homebase/2+w*2-margin+h);context.lineTo(homebase+w+l,homebase/2+w-margin+h);context.closePath();context.fill();context.stroke();//1塁ベース\ncontext.fillStyle=baseColor2[2];context.beginPath();context.moveTo(homebase*5/4+l,homebase*3/4-margin+h);context.lineTo(homebase*5/4-w+l,homebase*3/4+w-margin+h);context.lineTo(homebase*5/4+l,homebase*3/4+w*2-margin+h);context.lineTo(homebase*5/4+w+l,homebase*3/4+w-margin+h);context.closePath();context.fill();context.stroke();battedBall(context,canvasX1,canvasY1,flag,deleteball,setDeleteBall);}},[canvasX1,canvasY1,flag,runnerCountState]);//変更開始\nvar delball=function delball(){setDeleteBall(!deleteball);};useEffect(function(){if(context!==null){//削除\ncontext.clearRect(0,0,canvasSize,canvasSize);Ground(context);//ベースの色\nvar baseColor2=[];for(var i=0;i<3;i++){if(runnerCountState[i]){baseColor2[i]=\"blue\";console.log(baseColor2[i]);}else{baseColor2[i]=\"white\";}}context.strokeStyle=\"black\";//３塁ベース\ncontext.fillStyle=baseColor2[0];context.beginPath();context.moveTo(homebase*3/4+l,homebase*3/4-margin+h);context.lineTo(homebase*3/4-w+l,homebase*3/4+w-margin+h);context.lineTo(homebase*3/4+l,homebase*3/4+w*2-margin+h);context.lineTo(homebase*3/4+w+l,homebase*3/4+w-margin+h);context.closePath();context.fill();context.lineWidth=1;context.stroke();//2塁ベース\ncontext.fillStyle=baseColor2[1];context.beginPath();context.moveTo(homebase+l,homebase/2-margin+h);context.lineTo(homebase-w+l,homebase/2+w-margin+h);context.lineTo(homebase+l,homebase/2+w*2-margin+h);context.lineTo(homebase+w+l,homebase/2+w-margin+h);context.closePath();context.fill();context.stroke();//1塁ベース\ncontext.fillStyle=baseColor2[2];context.beginPath();context.moveTo(homebase*5/4+l,homebase*3/4-margin+h);context.lineTo(homebase*5/4-w+l,homebase*3/4+w-margin+h);context.lineTo(homebase*5/4+l,homebase*3/4+w*2-margin+h);context.lineTo(homebase*5/4+w+l,homebase*3/4+w-margin+h);context.closePath();context.fill();context.stroke();}},[deleteball]);//変更終了\n//セッション関連\nuseEffect(function(){var gameStart=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var CheckSess,sess;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(backendUrl+\"/auth/check_sess\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionID:cookies.sessionID})});case 2:CheckSess=_context3.sent;_context3.next=5;return CheckSess.text();case 5:sess=_context3.sent;console.log(sess);console.log(cookies.sessionID);if(sess==='logout'){PageTransition(routeUrl+\"/login\");}case 9:case\"end\":return _context3.stop();}}},_callee3);}));return function gameStart(){return _ref3.apply(this,arguments);};}();gameStart();},[]);useEffect(function(){//データベースからデータをもらうために呼び出す\n// setBatter(setBattingOrder, setBattingOrder2, urlSchoolId, urlSchoolId2, urlGameId, nowPlayingMember, setNowPlayingMember)\n//チーム1の選手登録情報を読み出す\nloadRegisteredMember(setRegisteredMember1,urlTournamentId,urlSchoolId);//チーム2の選手登録情報を読み出す\nloadRegisteredMember(setRegisteredMember2,urlTournamentId,urlSchoolId2);},[]);useEffect(function(){//テーブル存在確認\nTransmissionDasekiCall(urlGameId,urlSchoolId,urlSchoolId2,urlTournamentId,setNowIningState,setScoreState,setNowOutCountState,setNowPlayingMember,setRunnerCountState,setDasekiAll,setBattingOrder,setBattingOrder2);},[trigger]);return/*#__PURE__*/_jsxs(\"div\",{className:\"InputPlayGame\",children:[/*#__PURE__*/_jsx(TitleBar,{TitleText:\"過去速報修正画面\",PageTransition:PageTransition,valueUrl:-2}),/*#__PURE__*/_jsx(MenuBar,{menuArray:[]}),/*#__PURE__*/_jsxs(\"div\",{className:\"parts\",children:[/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"scoreBoard\",children:scoreBoard(scoreState,nowIningState,urlSchoolName,urlSchoolName2)}),/*#__PURE__*/_jsx(\"div\",{className:\"optionButtons\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"outCountsAndRunnerCounts\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"passButton\",children:[isPass===1&&/*#__PURE__*/_jsx(\"button\",{className:\"passButtonFalse\",onClick:function onClick(){return setIsPass(0);},children:\"\\u30D1\\u30B9\\u3092\\u89E3\\u9664\"}),isPass===0&&/*#__PURE__*/_jsx(\"button\",{className:\"passButtonTrue\",onClick:function onClick(){setIsPass(1);},children:\"\\u30D1\\u30B9\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"outCount\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"outCountDisplay\",children:\"o\"}),outCount(nowOutCountState,setNowOutCountState)]}),runnerCount(runnerCountState,setRunnerCountState)]}),/*#__PURE__*/_jsx(\"div\",{className:\"BatterAndPitcher\"}),/*#__PURE__*/_jsx(\"div\",{className:\"BatterPitcher\",children:/*#__PURE__*/_jsx(PullDownMember,{battingOrder:battingOrder,battingOrder2:battingOrder2,setBattingOrder:setBattingOrder,setBattingOrder2:setBattingOrder2,registeredMember1:registeredMember1,registeredMember2:registeredMember2,nowIningState:nowIningState,nowPlayingMember:nowPlayingMember,setNowPlayingMember:setNowPlayingMember,setIsPinch:setIsPinch,latestBatOrder:latestBatOrder,setLatestBatOrder:setLatestBatOrder,dasekiAll:dasekiAll,dasekiNum:dasekiAll.length})}),/*#__PURE__*/_jsx(\"div\",{className:\"freeWrite\",children:freeWrite(freeWriteState,setFreeWriteState,freeWriteModeFlag,setFreeWriteModeFlag)}),/*#__PURE__*/_jsx(PullDown,{nowPosition:nowPosition,setNowPosition:setNowPosition,setcanvasX1:setcanvasX1,setcanvasY1:setcanvasY1,setFlag:setFlag,setFreeWriteState:setFreeWriteState,setBatterResult:setBatterResult,addScoreState:addScoreState,GameEndPopup_field:GameEndPopup,TableRegister:TableRegister,urlGameId:urlGameId,TmpTableDelete:TmpTableDelete,DeleteDuringGame:DeleteDuringGame,CalculateBatAvg:CalculateBatAvg,nowOutCountState:nowOutCountState,setNowOutCountState:setNowOutCountState,schoolId1:urlSchoolId,schoolId2:urlSchoolId2})]}),/*#__PURE__*/_jsx(\"div\",{className:\"diamond\",children:/*#__PURE__*/_jsx(\"canvas\",{width:\"800\",height:\"610\",id:\"canvas\",className:\"diamondPng\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Buttons\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"baseballButtons\",children:BaseballButton(addScoreState,setAddScoreState)}),!isEditMode&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"updateButton\",children:/*#__PURE__*/_jsx(Popupfield,{nowIningState:nowIningState//今が何回なのか\n,setNowIningState:setNowIningState//今が何回なのかの変更関数\n,addScoreState:addScoreState,setAddScoreState:setAddScoreState,scoreState:scoreState,setScoreState:setScoreState,nowOutCountState:nowOutCountState,setNowOutCountState:setNowOutCountState,DasekiRegister:DasekiRegister,urlGameId:urlGameId,urlSchoolId:urlSchoolId,urlSchoolId2:urlSchoolId2,nowPlayingMember:nowPlayingMember,setNowPlayingMember:setNowPlayingMember,battingOrder:battingOrder,battingOrder2:battingOrder2,runnerCountState:runnerCountState,freeWriteState:freeWriteState,setFreeWriteState:setFreeWriteState,canvasX1:canvasX1,setcanvasX1:setcanvasX1,canvasY1:canvasY1,setcanvasY1:setcanvasY1,flag:flag,batterResult:batterResult,setBatterResult:setBatterResult,isPinch:isPinch,setIsPinch:setIsPinch,TransmissionDasekiCall:TransmissionDasekiCall,trigger:trigger,setTrigger:setTrigger,isPass:isPass,setIsPass:setIsPass})})})]}),isEditMode&&makePulldown(0,dasekiAll,\"at_bat_id\",nowSelected,setNowSelected,urlSchoolName,urlSchoolName2,dasekiAll,setNowIningState,setNowOutCountState,setRunnerCountState,setNowPlayingMember,setFreeWriteState,setcanvasX1,setcanvasY1,setAddScoreState,setFlag,battingOrder,battingOrder2,registeredMember1,registeredMember2,setBattingOrder,setBattingOrder2),!isEditMode&&/*#__PURE__*/_jsx(\"button\",{className:\"editButton\",onClick:function onClick(){setIsEditMode(true);editBattersBox(dasekiAll[nowSelected],dasekiAll,nowSelected,setNowIningState,setNowOutCountState,setRunnerCountState,setNowPlayingMember,setFreeWriteState,setcanvasX1,setcanvasY1,setAddScoreState,setFlag,battingOrder,battingOrder2,registeredMember1,registeredMember2,setBattingOrder,setBattingOrder2);},children:\"\\u4FEE\\u6B63\\u30E2\\u30FC\\u30C9\"}),isEditMode&&/*#__PURE__*/_jsx(\"button\",{className:\"editButton\",onClick:function onClick(){setIsEditMode(false);loardNowDaseki(setNowOutCountState,setNowIningState,setRunnerCountState,setScoreState,setNowPlayingMember,setFreeWriteState,dasekiAll,battingOrder,battingOrder2);setNowSelected([0]);},children:\"\\u901F\\u5831\\u5165\\u529B\\u306B\\u623B\\u308B\"}),isEditMode&&/*#__PURE__*/_jsx(\"button\",{className:\"editButton\",onClick:function onClick(){return sendEdit(urlGameId,dasekiAll,nowSelected,nowIningState,addScoreState,scoreState,nowOutCountState,nowPlayingMember,battingOrder,battingOrder2,runnerCountState,freeWriteState,canvasX1,canvasY1,flag,batterResult,isPinch,trigger,setTrigger);},children:\"\\u4FEE\\u6B63\\u78BA\\u5B9A\"}),/*#__PURE__*/_jsx(\"button\",{className:\"editButton\",onClick:function onClick(){return delball();},children:\"\\u6253\\u7403\\u524A\\u9664\"})]})]});};export default InputPastGame;","map":{"version":3,"names":["scoreBoard","outCount","runnerCount","freeWrite","BaseballButton","useEffect","useState","Popupfield","GameEndPopup","EditPoint","MenuBar","useCookies","TitleBar","PullDown","PullDownMember","useSearchParams","useNavigate","Ground","battedBall","backendUrl","require","routeUrl","makePulldown","pulldownId","ArrayList","idText","nowSelected","setNowSelected","urlSchoolName","urlSchoolName2","dasekiAll","setNowIningState","setNowOutCountState","setRunnerCountState","setNowPlayingMember","setFreeWriteState","setcanvasX1","setcanvasY1","setAddScoreState","setFlag","battingOrder","battingOrder2","registeredMember1","registeredMember2","setBattingOrder","setBattingOrder2","console","log","e","slice","length","target","value","editBattersBox","map","component","ind","inning","battersBox","battersBoxAll","touchedCoordinate","touched_coordinate","split","teamABatter","teamBpitcher","teamBBatter","teamApitcher","v","indBB","playerId","pinch","undefined","u","player_id","toString","regiMember1","regiMember2","i","pitcher_id","Math","floor","outcount","base","text_inf","ball_kind","parseFloat","score","sendMember1","batter","findIndex","pitcher","sendMember2","DeleteDuringGame","urlGameId","fetch","method","mode","headers","body","JSON","stringify","game_id","then","response","text","data","TransmissionDasekiCall","urlSchoolId","urlSchoolId2","urlTournamentId","setScoreState","setDasekiAll","table_name","json","latestDasaki","InitialScore","sendScore","school_id","TeamAdata","TeamBdata","loadRegistered1","loadRegistered2","loadRegistered","tournament_id","index","parseInt","find","sort","a","b","batting_order","some","position","loardNowDaseki","TableRegister","TmpTableDelete","CalculateBatAvg","DasekiRegister","sendInfo","trigger","setTrigger","loadRegisteredMember","setRegisteredMember","sendEdit","nowIningState","addScoreState","scoreState","nowOutCountState","nowPlayingMember","runnerCountState","freeWriteState","canvasX1","canvasY1","flag","batterResult","isPinch","totalScore","runner","isHit","isFourball","isDeadball","order","at_bat_id","total_score","pass","hit","foreball","deadball","canvasSize","homebase","InputPastGame","cookies","setCookie","removeCookie","navigate","PageTransition","url","searchParams","get","urlTournamentName","isExistTmpTable","setIsExistTmpTable","Score","freeWriteModeFlag","setFreeWriteModeFlag","setBatterResult","nowPosition","setNowPosition","setRegisteredMember1","setRegisteredMember2","player_name_kanji","setIsPinch","dasekiNum","latestBatOrder","setLatestBatOrder","isPass","setIsPass","isEditMode","setIsEditMode","sw","document","documentElement","clientWidth","sh","clientHeight","context","setContext","deleteball","setDeleteBall","h","l","w","margin","canvas","getElementById","canvasContext","getContext","addEventListener","rect","getBoundingClientRect","viewX","clientX","left","viewY","clientY","top","scaleWidth","width","scaleHeight","height","canvasX","canvasY","clearRect","baseColor2","strokeStyle","fillStyle","beginPath","moveTo","lineTo","closePath","fill","lineWidth","stroke","delball","gameStart","sessionID","CheckSess","sess"],"sources":["C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project-output/team-b-project/frontend/src/AllPage/InputAll/Sokuho/SokuhoPlaygame/InputPastGame.jsx"],"sourcesContent":["import { scoreBoard } from './comSokuho/scoreBoard';\r\nimport { outCount } from './comSokuho/outCount'\r\nimport { runnerCount } from './comSokuho/runnerCount';\r\nimport { freeWrite } from './comSokuho/freeWrite'\r\nimport { BaseballButton } from './comSokuho/baseballButton'\r\nimport \"./comSokuho/CSS/scoreBoard.css\"\r\nimport { useEffect, useState } from 'react';\r\nimport Popupfield from \"./comSokuho/onisi_popup/onisi_popup\";\r\nimport GameEndPopup from \"./comSokuho/GameEndPopup/GameEndPopup\"\r\nimport EditPoint from \"./comSokuho/scoreCorrection/EditPoint\"\r\nimport { MenuBar } from \"../../../OtherPage/optionFunc/MenuBar\"\r\n\r\nimport { useCookies } from 'react-cookie'\r\n\r\n//css\r\nimport \"./InputPlayGame.css\"\r\n\r\nimport { TitleBar } from '../../../OtherPage/TitleBar/TitleBar';\r\n\r\n//プルダウン\r\nimport { PullDown } from './comSokuho/PullDown/PullDown'\r\nimport { PullDownMember } from './comSokuho/PullDown/PullDownMember'\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\n\r\n//canvasの描画\r\nimport { Ground } from './comSokuho/comCanvas/Ground';\r\nimport { battedBall } from './comSokuho/comCanvas/battedBall';\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n//フロントの階層urlを取得\r\nconst routeUrl = require(\"../../../../DB/communication\").routeUrl;\r\n\r\n\r\n//自作プルダウン　改造あり\r\nconst makePulldown = (pulldownId, ArrayList, idText, nowSelected, setNowSelected, urlSchoolName, urlSchoolName2,\r\n    dasekiAll, setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n    setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n    battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n) => {\r\n\r\n    console.log(dasekiAll)\r\n\r\n\r\n    //pulldownIdは0でいいです。\r\n    //ArrayListは表示したい要素を並べた配列です、普通の配列ではなく連想配列です。\r\n    //idテキストは連想配列の属性を書きます。\r\n    //nowSelectedは今プルダウンで何が選択されているかが入ります。初期値は[0]で、これは0番目の値が選択されている状態です。\r\n    //setNowSelectedはnowSelecedの値をuseStateの機能で上書きする関数です。setNowSelected(更新値)とすれば、nowSelectedに更新値が入ります。\r\n\r\n    return (\r\n        <>\r\n            <select className='editButton'\r\n                id=\"tekitouni\"\r\n                onChange={(e) => {\r\n                    //ステイトが変化すると再描画させるための文、これがないと再描画されない\r\n                    //なお、消すと再描画はされないが内部は変化する\r\n                    nowSelected = nowSelected.slice(0, nowSelected.length);\r\n                    nowSelected[pulldownId] = e.target.value\r\n                    setNowSelected(nowSelected)\r\n\r\n                    editBattersBox(dasekiAll[nowSelected], dasekiAll, nowSelected,\r\n                        setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n                        setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n                        battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n                    )\r\n                }\r\n                }>\r\n                {ArrayList.map((component, ind) => (\r\n                    <option value={ind}>\r\n                        {component[idText]}打席目：{component.inning % 10 === 1 && urlSchoolName}{component.inning % 10 === 2 && urlSchoolName2}\r\n                    </option>\r\n                ))\r\n                }\r\n            </select>\r\n        </>\r\n    )\r\n}\r\n\r\n//打席編集\r\nconst editBattersBox = (battersBox, battersBoxAll, nowSelected,\r\n    setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n    setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n    battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2) => {\r\n\r\n    console.log(battersBox)\r\n    let touchedCoordinate = battersBoxAll[nowSelected].touched_coordinate.split(\"_\")\r\n\r\n    let teamABatter = 0;\r\n    let teamBpitcher = 0;\r\n    let teamBBatter = 0;\r\n    let teamApitcher = 0;\r\n\r\n    //pinchを反映させる\r\n    battersBoxAll.map((v, indBB) => {\r\n        let playerId = []\r\n        if (v.pinch !== \"\" && v.pinch !== \"0\" && v.pinch !== null && v.pinch !== undefined) {\r\n\r\n            //pinchに値が入っており、かつ値が正常であると思われる場合\r\n            if (v.pinch.length > 3) {\r\n                //スライス\r\n                playerId = v.pinch.split(\"→\")\r\n\r\n                //表回\r\n                if (v.inning % 10 - 1 === 0) {\r\n                    //打順配列からplayerId[0]を探す\r\n                    battingOrder.map((u, indBB) => {\r\n                        if (u.player_id.toString() === playerId[0]) {\r\n                            //登録されているメンバーからplayerId[1]を探す\r\n                            registeredMember1.map((regiMember1) => {\r\n                                //あればその選手を打順配列に入れ替える\r\n                                if (regiMember1.player_id.toString() === playerId[1]) {\r\n                                    battingOrder[indBB] = regiMember1\r\n                                    setBattingOrder(battingOrder)\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n\r\n                //裏回\r\n                else if (v.inning % 10 - 1 === 1) {\r\n                    //打順配列からplayerId[0]を探す\r\n                    battingOrder2.map((u, indBB) => {\r\n                        if (u.player_id === playerId[0]) {\r\n                            //登録されているメンバーからplayerId[1]を探す\r\n                            registeredMember2.map((regiMember2) => {\r\n                                //あればその選手を打順配列に入れ替える\r\n                                if (regiMember2.player_id === playerId[1]) {\r\n                                    battingOrder2[indBB] = regiMember2\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n            //pinchに値が入っており、かつ内容がおかしい場合\r\n            else {\r\n                battersBoxAll[indBB].pinch = null\r\n                battersBoxAll[indBB].player_id = battersBoxAll[6].player_id\r\n            }\r\n        }\r\n    })\r\n\r\n    console.log(battersBoxAll)\r\n\r\n    const value = battersBoxAll[nowSelected].inning\r\n    for (let i = nowSelected; i >= 0; i--) {\r\n        if (value !== battersBoxAll[i].inning) {\r\n            teamBBatter = battersBoxAll[i].player_id\r\n            teamApitcher = battersBoxAll[i].pitcher_id\r\n            break\r\n        }\r\n    }\r\n\r\n    //画面に反映\r\n    setNowIningState([Math.floor(battersBox.inning / 10 - 1), battersBox.inning % 10 - 1])\r\n    setNowOutCountState(battersBox.outcount)\r\n    setRunnerCountState([battersBox.base / 100 >= 1, battersBox.base / 10 >= 1 && battersBox.base / 100 < 1, battersBox.base % 10 === 1])\r\n    setFreeWriteState(battersBox.text_inf)\r\n    setFlag(battersBox.ball_kind)\r\n    setcanvasX1(parseFloat(touchedCoordinate[0]))\r\n    setcanvasY1(parseFloat(touchedCoordinate[1]))\r\n    setAddScoreState(battersBox.score)\r\n\r\n    if (battersBox.inning % 10 === 1) {\r\n        let sendMember1 = [{\r\n            batter: battingOrder.findIndex((u) => u.player_id === battersBoxAll[nowSelected].player_id),\r\n            pitcher: battingOrder2.findIndex((u) => u.player_id === battersBoxAll[nowSelected].pitcher_id)\r\n        },\r\n        {\r\n            batter: teamBBatter,\r\n            pitcher: teamApitcher\r\n        }]\r\n\r\n        //値が入ってないときの処理\r\n        if (sendMember1[0].batter === -1) { sendMember1[0].batter = 0 }\r\n        if (sendMember1[0].pitcher === -1) { sendMember1[0].pitcher = 0 }\r\n        setNowPlayingMember(sendMember1)\r\n    }\r\n    else if (battersBox.inning % 10 === 2) {\r\n        let sendMember2 = [\r\n            {\r\n                batter: teamABatter,\r\n                pitcher: teamBpitcher\r\n            },\r\n            {\r\n                batter: battingOrder2.findIndex((u) => u.player_id === battersBoxAll[nowSelected].player_id),\r\n                pitcher: battingOrder.findIndex((u) => u.player_id === battersBoxAll[nowSelected].pitcher_id)\r\n            }\r\n        ]\r\n\r\n        //値が入ってないときの処理\r\n        if (sendMember2[1].batter === -1) { sendMember2[1].batter = 0 }\r\n        if (sendMember2[1].pitcher === -1) { sendMember2[1].pitcher = 0 }\r\n\r\n        setNowPlayingMember(sendMember2)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n//試合中の試合の情報を登録する\r\n// const RegisterDuringGame = async (urlGameId) => {\r\n//     await fetch(backendUrl + \"/game/during_game_register\", {\r\n//         method: \"POST\",\r\n//         mode: \"cors\",\r\n//         headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ game_id: urlGameId, tmp_table_name: String(urlGameId) }),\r\n//     })\r\n//         .then((response) => response.text())\r\n//         .then((data) => { console.log(data) })\r\n// }\r\n\r\n\r\n//試合中の試合の情報を削除する\r\nconst DeleteDuringGame = async (urlGameId) => {\r\n    await fetch(backendUrl + \"/game/during_game_delete\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(data) })\r\n}\r\n\r\n\r\n//一時打席情報登録用のテーブル作成\r\n// const TmpTableCreate = async (urlGameId) => {\r\n\r\n//     await fetch(backendUrl + \"/daseki/tmp_table_create\", {\r\n//         method: \"POST\",\r\n//         mode: \"cors\",\r\n//         headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ table_name: urlGameId }),\r\n//     })\r\n//         .then((response) => response.text())\r\n//         .then((data) => { console.log(data) })\r\n// }\r\n\r\n//テーブル存在確認\r\n// const TmpTableCheck = (urlGameId, setIsExistTmpTable, TransmissionDasekiCall, urlTournamentId, urlSchoolId, urlSchoolId2,\r\n//     setNowIningState, setScoreState, setNowOutCountState,\r\n//     setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2\r\n\r\n// ) => {\r\n\r\n//     fetch(backendUrl + \"/daseki/tmp_table_check\", {\r\n//         method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n//         body: JSON.stringify({ table_name: urlGameId }),\r\n//     })\r\n//         .then((response) => response.text())\r\n//         .then((data) => {\r\n\r\n//             //テーブルが存在しないとき\r\n//             if (data === \"not exist\") {\r\n//                 setIsExistTmpTable(false)\r\n//             }\r\n\r\n//             //テーブルが存在するとき\r\n//             else if (data === \"exist\") {\r\n//                 TransmissionDasekiCall(urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId,\r\n//                     setNowIningState, setScoreState, setNowOutCountState,\r\n//                     setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2\r\n//                 )\r\n//             }\r\n//         })\r\n// }\r\n\r\n////試合情報受け取り（速報用）\r\nconst TransmissionDasekiCall = (urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId,\r\n    setNowIningState, setScoreState, setNowOutCountState,\r\n    setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2) => {\r\n\r\n    //まず打席情報を受け取る\r\n    fetch(backendUrl + \"/daseki/daseki_transmission\",\r\n        {\r\n            method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n            body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log(data)\r\n            //反転させる\r\n            // data.reverse()\r\n            setDasekiAll(data)\r\n\r\n            //空っぽなら無視\r\n            if (data.length !== 0) {\r\n                let latestDasaki = data[data.length - 1]\r\n\r\n                if (latestDasaki.outcount === 3) {\r\n                    //アウトカウント取得\r\n                    setNowOutCountState(0)\r\n\r\n                    //イニング取得\r\n                    if (latestDasaki.inning % 10 === 1) {\r\n                        setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, 1])\r\n                    }\r\n                    else {\r\n                        setNowIningState([Math.floor(latestDasaki.inning / 10), 0])\r\n                    }\r\n\r\n                    //ランナー取得\r\n                    setRunnerCountState([false, false, false])\r\n\r\n                }\r\n\r\n                else {\r\n                    //アウトカウント取得\r\n                    setNowOutCountState(latestDasaki.outcount)\r\n\r\n                    //イニング取得\r\n                    setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, latestDasaki.inning % 10 - 1])\r\n\r\n                    //ランナー取得\r\n                    setRunnerCountState([latestDasaki.base[0] === \"1\", latestDasaki.base[1] === \"1\", latestDasaki.base[2] === \"1\"])\r\n                }\r\n\r\n\r\n                //スコア取得\r\n                //スコアの初期化\r\n                const InitialScore = [\r\n                    [null, null, null, null, null, null, null, null, null, null, null, null],\r\n                    [null, null, null, null, null, null, null, null, null, null, null, null]\r\n                ]\r\n\r\n                let sendScore = InitialScore\r\n                data.map((u) => {\r\n                    //null対策\r\n                    if (sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] === null) sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = 0\r\n                    //受け取ったスコアを配列に格納\r\n                    sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] + u.score\r\n                })\r\n                setScoreState(sendScore)\r\n\r\n\r\n                //今現在のプレイヤー取得\r\n                //まずは先行チームをフェッチ\r\n                fetch(backendUrl + \"/member/starting_member_call\", {\r\n                    method: \"POST\",\r\n                    mode: \"cors\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId }),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((TeamAdata) => {\r\n\r\n\r\n                        //後攻チームをフェッチ\r\n                        //打順を持ってくる\r\n                        fetch(backendUrl + \"/member/starting_member_call\", {\r\n                            method: \"POST\",\r\n                            mode: \"cors\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                            },\r\n                            body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId2 }),\r\n                        })\r\n                            .then((response) => response.json())\r\n                            .then(async (TeamBdata) => {\r\n\r\n                                //ここから選手登録の情報をつかって、代打の処理を行う\r\n                                //選手登録の情報を取得\r\n                                let loadRegistered = await { loadRegistered1: \"\", loadRegistered2: \"\" }\r\n                                const loadRegistered1 = await fetch(backendUrl + \"/member/tournament_member_call\", {\r\n                                    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n                                    body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n                                })\r\n                                loadRegistered.loadRegistered1 = await loadRegistered1.json()\r\n                                const loadRegistered2 = await fetch(backendUrl + \"/member/tournament_member_call\", {\r\n                                    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n                                    body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId2 }),\r\n                                })\r\n                                loadRegistered.loadRegistered2 = await loadRegistered2.json()\r\n\r\n                                let text = null\r\n                                let index = 0\r\n                                data.map((v) => {\r\n                                    if (v.pinch === null || v.pinch === \"0\") { }\r\n                                    else {\r\n                                        text = v.pinch.split(\"→\")\r\n\r\n                                        // 表のとき\r\n                                        if (v.inning % 10 - 1 === 0) {\r\n                                            index = TeamAdata.findIndex((u) => u.player_id === parseInt(text[0]))\r\n                                            TeamAdata[index] = loadRegistered.loadRegistered1.find((u) => u.player_id === parseInt(text[1]))\r\n                                        }\r\n                                        // 裏のとき\r\n                                        else {\r\n                                            index = TeamBdata.findIndex((u) => u.player_id === parseInt(text[0]))\r\n                                            TeamBdata[index] = loadRegistered.loadRegistered2.find((u) => u.player_id === parseInt(text[1]))\r\n                                        }\r\n                                    }\r\n                                })\r\n\r\n\r\n\r\n\r\n                                TeamAdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                                setBattingOrder(TeamAdata)\r\n\r\n                                TeamBdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                                setBattingOrder2(TeamBdata)\r\n\r\n                                let teamABatter = 0\r\n                                let teamApitcher = 0\r\n                                let teamBBatter = 0\r\n                                let teamBpitcher = 0\r\n\r\n                                //さっきの打席が先攻チームだった場合\r\n                                if (latestDasaki.inning % 10 - 1 === 0) {\r\n                                    teamABatter = TeamAdata.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n                                    teamBpitcher = TeamBdata.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n                                    for (let i = data.length - 1; i >= 0; i--) {\r\n                                        if (latestDasaki.inning !== data[i].inning) {\r\n                                            teamBBatter = TeamBdata.findIndex((u) => u.player_id === data[i].player_id)\r\n                                            teamApitcher = TeamAdata.findIndex((u) => u.player_id === data[i].pitcher_id)\r\n                                            break\r\n                                        }\r\n                                    }\r\n                                    if (latestDasaki.outcount !== 3) teamABatter++\r\n                                    //過去に後攻の打席がある場合\r\n                                    else if (data.some((v) => v.inning % 10 - 1 === 1)) teamBBatter++\r\n                                }\r\n\r\n                                //後攻\r\n                                else if (latestDasaki.inning % 10 - 1 === 1) {\r\n                                    for (let i = data.length - 1; i >= 0; i--) {\r\n                                        if (latestDasaki.inning !== data[i].inning) {\r\n                                            console.log(data[i])\r\n                                            teamABatter = TeamAdata.findIndex((u) => u.player_id === data[i].player_id)\r\n                                            teamBpitcher = TeamBdata.findIndex((u) => u.player_id === data[i].pitcher_id)\r\n                                            break\r\n                                        }\r\n                                    }\r\n                                    teamBBatter = TeamBdata.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n                                    teamApitcher = TeamAdata.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n                                    if (data[data.length - 1].outcount !== 3) teamBBatter++\r\n                                    else teamABatter++\r\n                                }\r\n\r\n                                //打順に存在しないか最初の打者であるとき、もしくは打順最後の打者であるとき\r\n                                if (teamABatter === 9 || teamABatter === -1) teamABatter = 0\r\n                                if (teamBpitcher === -1) teamBpitcher = 0\r\n                                if (teamBBatter === 9 || teamBBatter === -1) teamBBatter = 0\r\n                                if (teamApitcher === -1) teamApitcher = 0\r\n\r\n                                //最後に今現在プレイ中の選手を格納\r\n                                setNowPlayingMember(\r\n                                    [{\r\n                                        batter: teamABatter,\r\n                                        pitcher: teamBpitcher\r\n                                    },\r\n                                    {\r\n                                        batter: teamBBatter,\r\n                                        pitcher: teamApitcher\r\n                                    }]\r\n                                )\r\n                            })\r\n                    })\r\n            }\r\n\r\n            //打席情報に何も入ってないとき\r\n            if (data.length === 0) {\r\n                //最初のプレイヤー取得\r\n                //まずは先行チーム\r\n                fetch(backendUrl + \"/member/starting_member_call\", {\r\n                    method: \"POST\",\r\n                    mode: \"cors\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId }),\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((TeamAdata) => {\r\n                        TeamAdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                        setBattingOrder(TeamAdata)\r\n\r\n                        //後攻チーム\r\n                        //打順を持ってくる\r\n                        fetch(backendUrl + \"/member/starting_member_call\", {\r\n                            method: \"POST\",\r\n                            mode: \"cors\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                            },\r\n                            body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId2 }),\r\n                        })\r\n                            .then((response) => response.json())\r\n                            .then((TeamBdata) => {\r\n                                TeamBdata.sort((a, b) => a.batting_order - b.batting_order)\r\n                                setBattingOrder2(TeamBdata)\r\n\r\n                                let teamABatter = 0\r\n                                let teamBpitcher = TeamBdata.findIndex((v) => v.position === \"ピッチャー\")\r\n                                let teamBBatter = 0\r\n                                let teamApitcher = TeamAdata.findIndex((v) => v.position === \"ピッチャー\")\r\n\r\n                                //最後に今現在プレイ中の選手を格納\r\n                                setNowPlayingMember(\r\n                                    [{\r\n                                        batter: teamABatter,\r\n                                        pitcher: teamBpitcher\r\n                                    },\r\n                                    {\r\n                                        batter: teamBBatter,\r\n                                        pitcher: teamApitcher\r\n                                    }]\r\n                                )\r\n                            })\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\n\r\n//DBを介さない試合情報受け取り（速報用）\r\nconst loardNowDaseki = (setNowOutCountState, setNowIningState, setRunnerCountState, setScoreState,\r\n    setNowPlayingMember, setFreeWriteState,\r\n    dasekiAll, battingOrder, battingOrder2) => {\r\n\r\n    //空っぽなら無視\r\n    if (dasekiAll.length !== 0) {\r\n        let latestDasaki = dasekiAll[dasekiAll.length - 1]\r\n\r\n\r\n        //自由記述は空\r\n        setFreeWriteState(\"\")\r\n\r\n        if (latestDasaki.outcount === 3) {\r\n            //アウトカウント取得\r\n            setNowOutCountState(0)\r\n\r\n            //イニング取得\r\n            if (latestDasaki.inning % 10 === 1) {\r\n                setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, 1])\r\n            }\r\n            else {\r\n                setNowIningState([Math.floor(latestDasaki.inning / 10), 0])\r\n            }\r\n\r\n            //ランナー取得\r\n            setRunnerCountState([false, false, false])\r\n\r\n        }\r\n\r\n        else {\r\n            //アウトカウント取得\r\n            setNowOutCountState(latestDasaki.outcount)\r\n\r\n            //イニング取得\r\n            setNowIningState([Math.floor(latestDasaki.inning / 10) - 1, latestDasaki.inning % 10 - 1])\r\n\r\n            //ランナー取得\r\n            setRunnerCountState([latestDasaki.base[0] === \"1\", latestDasaki.base[1] === \"1\", latestDasaki.base[2] === \"1\"])\r\n        }\r\n\r\n\r\n        //スコア取得\r\n        //スコアの初期化\r\n        const InitialScore = [\r\n            [null, null, null, null, null, null, null, null, null, null, null, null],\r\n            [null, null, null, null, null, null, null, null, null, null, null, null]\r\n        ]\r\n\r\n        let sendScore = InitialScore\r\n        dasekiAll.map((u) => {\r\n            //null対策\r\n            if (sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] === null) sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = 0\r\n            //受け取ったスコアを配列に格納\r\n            sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] = sendScore[u.inning % 10 - 1][Math.floor(u.inning / 10) - 1] + u.score\r\n        })\r\n        setScoreState(sendScore)\r\n\r\n\r\n\r\n        //今現在のプレイヤー取得\r\n        //まずは先行チーム\r\n        //後攻チーム\r\n        let teamABatter = 0\r\n        let teamApitcher = 0\r\n        let teamBBatter = 0\r\n        let teamBpitcher = 0\r\n\r\n        //先攻\r\n        if (latestDasaki.inning % 10 - 1 === 0) {\r\n            teamABatter = battingOrder.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n            teamBpitcher = battingOrder2.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n            for (let i = dasekiAll.length - 1; i >= 0; i--) {\r\n                if (latestDasaki.inning !== dasekiAll[i].inning) {\r\n                    teamBBatter = battingOrder2.findIndex((u) => u.player_id === dasekiAll[i].player_id)\r\n                    teamApitcher = battingOrder.findIndex((u) => u.player_id === dasekiAll[i].pitcher_id)\r\n                    break\r\n                }\r\n            }\r\n            if (dasekiAll[dasekiAll.length - 1].outcount !== 3) teamABatter++\r\n            else teamBBatter++\r\n        }\r\n        //後攻\r\n        else if (latestDasaki.inning % 10 - 1 === 1) {\r\n            for (let i = dasekiAll.length - 1; i >= 0; i--) {\r\n                if (latestDasaki.inning !== dasekiAll[i].inning) {\r\n                    console.log(dasekiAll[i])\r\n                    teamABatter = battingOrder.findIndex((u) => u.player_id === dasekiAll[i].player_id)\r\n                    teamBpitcher = battingOrder2.findIndex((u) => u.player_id === dasekiAll[i].pitcher_id)\r\n                    break\r\n                }\r\n            }\r\n            teamBBatter = battingOrder2.findIndex((u) => u.player_id === latestDasaki.player_id)\r\n            teamApitcher = battingOrder.findIndex((u) => u.player_id === latestDasaki.pitcher_id)\r\n            if (dasekiAll[dasekiAll.length - 1].outcount !== 3) teamBBatter++\r\n            else teamABatter++\r\n        }\r\n\r\n        //打順に存在しないか最初の打者であるとき、もしくは打順最後の打者であるとき\r\n        if (teamABatter === 9 || teamABatter === -1) teamABatter = 0\r\n        if (teamBpitcher === -1) teamBpitcher = 0\r\n        if (teamBBatter === 9 || teamBBatter === -1) teamBBatter = 0\r\n        if (teamApitcher === -1) teamApitcher = 0\r\n\r\n        //最後に今現在プレイ中の選手を格納\r\n        setNowPlayingMember(\r\n            [{\r\n                batter: teamABatter,\r\n                pitcher: teamBpitcher\r\n            },\r\n            {\r\n                batter: teamBBatter,\r\n                pitcher: teamApitcher\r\n            }]\r\n        )\r\n    }\r\n}\r\n\r\n//一時打席情報を本打席テーブルに送る\r\nconst TableRegister = (urlGameId) => {\r\n\r\n    console.log(urlGameId + \"の試合情報を登録しました\")\r\n\r\n    fetch(backendUrl + \"/daseki/data_register\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(\"TableRegister=\" + data) })\r\n}\r\n\r\n//一時打席情報を削除\r\nconst TmpTableDelete = (urlGameId) => {\r\n\r\n    console.log(urlGameId + \"の試合情報を削除しました\")\r\n\r\n    fetch(backendUrl + \"/daseki/tmp_table_delete\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(\"TmpTableDelete=\" + data) })\r\n}\r\n\r\n//打率計算\r\nconst CalculateBatAvg = (urlGameId) => {\r\n\r\n    console.log(\"打率計算関数を呼び出しました\")\r\n\r\n    fetch(backendUrl + \"/member/cal_BA\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId, table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(\"CalculateBatAvg=\" + data) })\r\n}\r\n\r\n//一時打席情報登録用のテーブルに打席情報登録（UPSERTを使うかも）\r\nconst DasekiRegister = (sendInfo, trigger, setTrigger) => {\r\n\r\n    fetch(backendUrl + \"/daseki/daseki_register\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(sendInfo),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n            if (data === \"OK\") {\r\n                setTrigger(!trigger)\r\n            }\r\n        })\r\n}\r\n\r\n\r\n//選手登録された選手読み込む\r\nconst loadRegisteredMember = (setRegisteredMember, urlTournamentId, urlSchoolId) => {\r\n\r\n    fetch(backendUrl + \"/member/tournament_member_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", },\r\n        body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => { setRegisteredMember(data) })\r\n}\r\n\r\n\r\n//修正内容をバックエンドに送る\r\nconst sendEdit = (\r\n    urlGameId,\r\n    dasekiAll,\r\n    nowSelected,\r\n    nowIningState,\r\n    addScoreState,\r\n    scoreState,\r\n    nowOutCountState,\r\n    nowPlayingMember,\r\n    battingOrder,\r\n    battingOrder2,\r\n    runnerCountState,\r\n    freeWriteState,\r\n    canvasX1,\r\n    canvasY1,\r\n    flag,\r\n    batterResult,\r\n    isPinch,\r\n    trigger,\r\n    setTrigger\r\n) => {\r\n    console.log(dasekiAll[nowSelected])\r\n    //DBに送るための準備\r\n\r\n    let totalScore = 0\r\n    scoreState[nowIningState[1]].map((score) => {\r\n        totalScore = totalScore + score\r\n    })\r\n\r\n    let runnerCount = \"\"\r\n    runnerCountState.map((runner) => {\r\n        if (runner === true) runnerCount = \"1\" + runnerCount\r\n        else if (runner === false) runnerCount = \"0\" + runnerCount\r\n    })\r\n\r\n    let isHit = 0; let isFourball = 0; let isDeadball = 0;\r\n    if (batterResult === 0) { }\r\n    else if (batterResult === 1) isHit = 1\r\n    else if (batterResult === 2) isFourball = 1\r\n    else if (batterResult === 3) isDeadball = 1\r\n\r\n    //選手だけここで入れる\r\n    let order = []\r\n    if (nowIningState[1] === 0) {\r\n        order = {\r\n            player_id: battingOrder[nowPlayingMember[nowIningState[1]].batter].player_id,\r\n            pitcher_id: battingOrder2[nowPlayingMember[nowIningState[1]].pitcher].player_id\r\n        }\r\n    }\r\n    else if (nowIningState[1] === 1) {\r\n        order = {\r\n            player_id: battingOrder2[nowPlayingMember[nowIningState[1]].batter].player_id,\r\n            pitcher_id: battingOrder[nowPlayingMember[nowIningState[1]].pitcher].player_id\r\n        }\r\n    }\r\n\r\n    //DBにデータを送る\r\n    let sendInfo = {\r\n        table_name: urlGameId,\r\n        at_bat_id: dasekiAll[nowSelected].at_bat_id,\r\n        inning: (nowIningState[1] + 1) * 10 + (nowIningState[0] + 1),\r\n        game_id: urlGameId,\r\n        school_id: dasekiAll[nowSelected].school_id,\r\n        player_id: order.player_id,\r\n        pitcher_id: order.pitcher_id,\r\n        score: addScoreState,\r\n        total_score: totalScore,\r\n        outcount: nowOutCountState,\r\n        base: runnerCount,\r\n        text_inf: freeWriteState,\r\n        pass: 0,\r\n        touched_coordinate: canvasX1 + \"_\" + canvasY1,\r\n        ball_kind: flag,\r\n        hit: isHit,\r\n        foreball: isFourball,\r\n        deadball: isDeadball,\r\n        pinch: isPinch\r\n    }\r\n\r\n    console.log(sendInfo)\r\n\r\n    fetch(backendUrl + \"/daseki/registered_daseki_update\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\", },\r\n        body: JSON.stringify(sendInfo),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n            console.log(data)\r\n            setTrigger(!trigger)\r\n        })\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst canvasSize = 1000;\r\nconst homebase = 400;\r\n\r\nconst InputPastGame = () => {\r\n\r\n    //クッキー関連\r\n    const [cookies, setCookie, removeCookie] = useCookies();\r\n\r\n    //ページ遷移用\r\n    const navigate = useNavigate()\r\n    const PageTransition = (url) => {\r\n        navigate(url)\r\n    }\r\n\r\n    //urlから値を読み出す\r\n    const [searchParams] = useSearchParams();\r\n    const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n    const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n    const urlSchoolId = searchParams.get(\"urlSchoolId\")\r\n    const urlSchoolName = searchParams.get(\"urlSchoolName\")\r\n    const urlSchoolId2 = searchParams.get(\"urlSchoolId2\")\r\n    const urlSchoolName2 = searchParams.get(\"urlSchoolName2\")\r\n    const urlGameId = searchParams.get(\"urlGameId\")\r\n\r\n    //試合の一時テーブルが存在するかどうかを管理するステイト\r\n    const [isExistTmpTable, setIsExistTmpTable] = useState(false)\r\n\r\n    //Score記録 左が裏表、右が回数 イニングとは逆\r\n    const { Score } = require(\"../../../../DB/Score\")\r\n    const [scoreState, setScoreState] = useState(Score)\r\n\r\n    //Scoreの加算値の監視\r\n    const [addScoreState, setAddScoreState] = useState(0)\r\n\r\n    //今のイニング 左が回、右が表裏\r\n    const [nowIningState, setNowIningState] = useState([0, 0])\r\n\r\n    //自由記述内容を監視\r\n    const [freeWriteState, setFreeWriteState] = useState(\"\")//いらんかも\r\n\r\n    //自由記述編集モードのフラグ\r\n    const [freeWriteModeFlag, setFreeWriteModeFlag] = useState(false)\r\n\r\n    //多分打球の種類だと思われる\r\n    const [flag, setFlag] = useState(2);\r\n\r\n    //打者の結果を記録する(0:何もなし, 1:ヒット,2:四球, 3:死球)\r\n    const [batterResult, setBatterResult] = useState(0)\r\n\r\n\r\n    //緑プルダウン用\r\n    const [nowPosition, setNowPosition] = useState(15)\r\n\r\n    //アウトカウント\r\n    const [nowOutCountState, setNowOutCountState] = useState(0)\r\n\r\n    //ランナーカウント\r\n    const [runnerCountState, setRunnerCountState] = useState([false, false, false])\r\n\r\n    //選手登録情報を読み込む\r\n    const [registeredMember1, setRegisteredMember1] = useState([])\r\n    const [registeredMember2, setRegisteredMember2] = useState([])\r\n\r\n    //打席一覧情報のステイト\r\n    const [dasekiAll, setDasekiAll] = useState([{\r\n        at_bat_id: 1, ball_kind: \"2\", base: \"000\",\r\n        deadball: 0, foreball: 0, game_id: 1,\r\n        hit: 0, inning: 11, outcount: 3,\r\n        pass: 0, pinch: null, pitcher_id: 21, player_id: 7,\r\n        school_id: 1, score: 0, text_inf: \"データなし\",\r\n        total_score: 0, touched_coordinate: \"400_450\"\r\n    }])\r\n\r\n    //打席一覧情報のプルダウンの選択状況を管理するステイト\r\n    const [nowSelected, setNowSelected] = useState([0])\r\n\r\n    //打順と打者のリスト\r\n    const [battingOrder, setBattingOrder] = useState([[{ player_name_kanji: '丹羽 長秀' }, { player_name_kanji: '柴田 勝家' }], 0])\r\n    const [battingOrder2, setBattingOrder2] = useState([{ player_name_kanji: '丹羽 長秀' }, { player_name_kanji: '柴田 勝家' }])\r\n\r\n    //今の打順と今のピッチャーが誰なのかを2チーム文記録する\r\n    const [nowPlayingMember, setNowPlayingMember] = useState([{ batter: 0, pitcher: 0 }, { batter: 0, pitcher: 0 }])\r\n\r\n    //代打フラグ 4→15,12→6\r\n    const [isPinch, setIsPinch] = useState(null)\r\n\r\n    //代打で変更される前の打順を記録するステイト\r\n    const [latestBatOrder, setLatestBatOrder] = useState({ dasekiNum: 0, order: [] })\r\n\r\n    //パスボタンのステイトを定義 0か1か\r\n    const [isPass, setIsPass] = useState(0)\r\n\r\n    //データを読み込みを行うトリガー\r\n    const [trigger, setTrigger] = useState(true)\r\n\r\n    //編集モードであるかどうかを監視するステイト\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n\r\n\r\n    //画面解像度取得\r\n    var sw = document.documentElement.clientWidth; // 画面の横幅\r\n    var sh = document.documentElement.clientHeight; // 画面の高さ\r\n\r\n    // contextを状態として持つ\r\n    const [context, setContext] = useState(null)\r\n\r\n\r\n    //打球を消すためのステイト\r\n    const [deleteball, setDeleteBall] = useState(false)\r\n\r\n    const [canvasX1, setcanvasX1] = useState(0)\r\n    const [canvasY1, setcanvasY1] = useState(0)\r\n    //一つのStateで管理しようぜ的な試み\r\n    //const [canvasXY, setCanvasXY] = useState({x:0, y:0})\r\n\r\n    // コンポーネントの初期化完了後コンポーネント状態にコンテキストを登録\r\n\r\n    const homebase = 520;\r\n    const h = 70;\r\n    const l = -110;\r\n    const w = 0.03 * homebase;  //ベースの幅\r\n    const margin = 10;    //ベース位置調整用\r\n\r\n    useEffect(() => {\r\n        const canvas = document.getElementById(\"canvas\")\r\n        const canvasContext = canvas.getContext(\"2d\")\r\n        setContext(canvasContext)\r\n\r\n\r\n\r\n        canvas.addEventListener(\"click\", e => {\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            // ブラウザ上での座標を求める\r\n            const viewX = e.clientX - rect.left,\r\n                viewY = e.clientY - rect.top;\r\n\r\n            // 表示サイズとキャンバスの実サイズの比率を求める\r\n            const scaleWidth = canvas.clientWidth / canvas.width,\r\n                scaleHeight = canvas.clientHeight / canvas.height;\r\n\r\n            // ブラウザ上でのクリック座標をキャンバス上に変換\r\n            const canvasX = Math.floor(viewX / scaleWidth),\r\n                canvasY = Math.floor(viewY / scaleHeight);\r\n\r\n            console.log(canvasX, canvasY);\r\n            setcanvasX1(canvasX);\r\n            setcanvasY1(canvasY);\r\n        });\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (context !== null) {\r\n            Ground(context);\r\n        }\r\n    }, [context])\r\n\r\n\r\n    // 状態にコンテキストが登録されたらそれに対して操作できる\r\n    useEffect(() => {\r\n        if (context !== null) {\r\n\r\n            //削除\r\n            context.clearRect(0, 0, canvasSize, canvasSize);\r\n\r\n            Ground(context);\r\n\r\n            //ベースの色\r\n            let baseColor2 = [];\r\n            for (let i = 0; i < 3; i++) {\r\n                if (runnerCountState[i]) {\r\n                    baseColor2[i] = \"blue\";\r\n                    console.log(baseColor2[i]);\r\n                }\r\n                else {\r\n                    baseColor2[i] = \"white\";\r\n                }\r\n            }\r\n\r\n\r\n            context.strokeStyle = \"black\";\r\n\r\n            //３塁ベース\r\n            context.fillStyle = baseColor2[0];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 3 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.lineWidth = 1;\r\n            context.stroke();\r\n\r\n            //2塁ベース\r\n            context.fillStyle = baseColor2[1];\r\n            context.beginPath();\r\n            context.moveTo(homebase + l, homebase / 2 - margin + h);\r\n            context.lineTo(homebase - w + l, homebase / 2 + w - margin + h);\r\n            context.lineTo(homebase + l, homebase / 2 + w * 2 - margin + h);\r\n            context.lineTo(homebase + w + l, homebase / 2 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            //1塁ベース\r\n            context.fillStyle = baseColor2[2];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 5 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            battedBall(context, canvasX1, canvasY1, flag, deleteball, setDeleteBall);\r\n\r\n        }\r\n    }, [canvasX1, canvasY1, flag, runnerCountState])\r\n\r\n\r\n\r\n    //変更開始\r\n\r\n    const delball = () => {\r\n        setDeleteBall(!deleteball);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (context !== null) {\r\n\r\n            //削除\r\n            context.clearRect(0, 0, canvasSize, canvasSize);\r\n\r\n            Ground(context);\r\n\r\n            //ベースの色\r\n            let baseColor2 = [];\r\n            for (let i = 0; i < 3; i++) {\r\n                if (runnerCountState[i]) {\r\n                    baseColor2[i] = \"blue\";\r\n                    console.log(baseColor2[i]);\r\n                }\r\n                else {\r\n                    baseColor2[i] = \"white\";\r\n                }\r\n            }\r\n\r\n\r\n            context.strokeStyle = \"black\";\r\n\r\n            //３塁ベース\r\n            context.fillStyle = baseColor2[0];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 3 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 3 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.lineWidth = 1;\r\n            context.stroke();\r\n\r\n            //2塁ベース\r\n            context.fillStyle = baseColor2[1];\r\n            context.beginPath();\r\n            context.moveTo(homebase + l, homebase / 2 - margin + h);\r\n            context.lineTo(homebase - w + l, homebase / 2 + w - margin + h);\r\n            context.lineTo(homebase + l, homebase / 2 + w * 2 - margin + h);\r\n            context.lineTo(homebase + w + l, homebase / 2 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            //1塁ベース\r\n            context.fillStyle = baseColor2[2];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 5 / 4 + l, homebase * 3 / 4 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 - w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + l, homebase * 3 / 4 + w * 2 - margin + h);\r\n            context.lineTo(homebase * 5 / 4 + w + l, homebase * 3 / 4 + w - margin + h);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n        }\r\n    }, [deleteball])\r\n\r\n    //変更終了\r\n\r\n    //セッション関連\r\n    useEffect(() => {\r\n        const gameStart = async () => {\r\n            const CheckSess = await fetch(backendUrl + \"/auth/check_sess\",\r\n                {\r\n                    method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n                    body: JSON.stringify({ sessionID: cookies.sessionID })\r\n                })\r\n            const sess = await CheckSess.text();\r\n            console.log(sess)\r\n            console.log(cookies.sessionID)\r\n            if (sess === 'logout') {\r\n                PageTransition(routeUrl + \"/login\");\r\n            }\r\n        }\r\n        gameStart()\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //データベースからデータをもらうために呼び出す\r\n        // setBatter(setBattingOrder, setBattingOrder2, urlSchoolId, urlSchoolId2, urlGameId, nowPlayingMember, setNowPlayingMember)\r\n\r\n        //チーム1の選手登録情報を読み出す\r\n        loadRegisteredMember(setRegisteredMember1, urlTournamentId, urlSchoolId)\r\n\r\n        //チーム2の選手登録情報を読み出す\r\n        loadRegisteredMember(setRegisteredMember2, urlTournamentId, urlSchoolId2)\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        //テーブル存在確認\r\n        TransmissionDasekiCall(urlGameId, urlSchoolId, urlSchoolId2, urlTournamentId,\r\n            setNowIningState, setScoreState, setNowOutCountState,\r\n            setNowPlayingMember, setRunnerCountState, setDasekiAll, setBattingOrder, setBattingOrder2\r\n        )\r\n    }, [trigger])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"InputPlayGame\">\r\n            <TitleBar\r\n                TitleText={\"過去速報修正画面\"}\r\n                PageTransition={PageTransition}\r\n                valueUrl={-2}\r\n            />\r\n\r\n            <MenuBar\r\n                menuArray={[]}\r\n            />\r\n\r\n            <div className=\"parts\">\r\n                {\r\n                    <>\r\n                        <div className=\"scoreBoard\">\r\n                            {scoreBoard(scoreState, nowIningState, urlSchoolName, urlSchoolName2)}\r\n                        </div>\r\n                        <div className=\"optionButtons\">\r\n                        </div>\r\n                        <div className=\"outCountsAndRunnerCounts\">\r\n                            <div className=\"passButton\">\r\n                                {isPass === 1 &&\r\n                                    <button className=\"passButtonFalse\" onClick={() => setIsPass(0)}>パスを解除</button>\r\n                                }\r\n                                {isPass === 0 &&\r\n                                    <button className='passButtonTrue' onClick={() => { setIsPass(1) }}>パス</button>\r\n                                }\r\n                            </div>\r\n                            <div className='outCount'>\r\n                                <div className=\"outCountDisplay\">o</div>\r\n                                {outCount(nowOutCountState, setNowOutCountState)}\r\n                            </div>\r\n                            {runnerCount(runnerCountState, setRunnerCountState)}\r\n                        </div>\r\n                        <div className=\"BatterAndPitcher\">\r\n\r\n                        </div>\r\n                        <div className=\"BatterPitcher\">\r\n                            {/* プルダウン1  選手を表示するためのプルダウン */}\r\n                            <PullDownMember\r\n                                battingOrder={battingOrder}\r\n                                battingOrder2={battingOrder2}\r\n                                setBattingOrder={setBattingOrder}\r\n                                setBattingOrder2={setBattingOrder2}\r\n                                registeredMember1={registeredMember1}\r\n                                registeredMember2={registeredMember2}\r\n                                nowIningState={nowIningState}\r\n                                nowPlayingMember={nowPlayingMember}\r\n                                setNowPlayingMember={setNowPlayingMember}\r\n                                setIsPinch={setIsPinch}\r\n                                latestBatOrder={latestBatOrder}\r\n                                setLatestBatOrder={setLatestBatOrder}\r\n                                dasekiAll={dasekiAll}\r\n                                dasekiNum={dasekiAll.length}\r\n                            />\r\n                        </div>\r\n                        <div className=\"freeWrite\">\r\n                            {freeWrite(freeWriteState, setFreeWriteState, freeWriteModeFlag, setFreeWriteModeFlag)}\r\n                        </div>\r\n\r\n                        {/* プルダウン2 */}\r\n                        <PullDown\r\n                            nowPosition={nowPosition}\r\n                            setNowPosition={setNowPosition}\r\n                            setcanvasX1={setcanvasX1}\r\n                            setcanvasY1={setcanvasY1}\r\n                            setFlag={setFlag}\r\n                            setFreeWriteState={setFreeWriteState}\r\n                            setBatterResult={setBatterResult}\r\n                            addScoreState={addScoreState}\r\n                            GameEndPopup_field={GameEndPopup}\r\n                            TableRegister={TableRegister}\r\n                            urlGameId={urlGameId}\r\n                            TmpTableDelete={TmpTableDelete}\r\n                            DeleteDuringGame={DeleteDuringGame}\r\n                            CalculateBatAvg={CalculateBatAvg}\r\n                            nowOutCountState={nowOutCountState}\r\n                            setNowOutCountState={setNowOutCountState}\r\n                            schoolId1={urlSchoolId}\r\n                            schoolId2={urlSchoolId2}\r\n                        />\r\n                    </>}\r\n\r\n                {/* キャンバスについて */}\r\n                <div className=\"diamond\">\r\n                    <canvas width=\"800\" height=\"610\" id=\"canvas\" className='diamondPng'></canvas>\r\n                </div>\r\n\r\n                <div className=\"Buttons\">\r\n                    <div className=\"baseballButtons\">\r\n                        {BaseballButton(addScoreState, setAddScoreState)}\r\n                    </div>\r\n                    {!isEditMode &&\r\n                        <>\r\n                            <div className=\"updateButton\">\r\n                                {/* ポップアップ*/}\r\n                                <Popupfield\r\n                                    nowIningState={nowIningState} //今が何回なのか\r\n                                    setNowIningState={setNowIningState} //今が何回なのかの変更関数\r\n                                    addScoreState={addScoreState}\r\n                                    setAddScoreState={setAddScoreState}\r\n                                    scoreState={scoreState}\r\n                                    setScoreState={setScoreState}\r\n                                    nowOutCountState={nowOutCountState}\r\n                                    setNowOutCountState={setNowOutCountState}\r\n                                    DasekiRegister={DasekiRegister}\r\n                                    urlGameId={urlGameId}\r\n                                    urlSchoolId={urlSchoolId}\r\n                                    urlSchoolId2={urlSchoolId2}\r\n                                    nowPlayingMember={nowPlayingMember}\r\n                                    setNowPlayingMember={setNowPlayingMember}\r\n                                    battingOrder={battingOrder}\r\n                                    battingOrder2={battingOrder2}\r\n                                    runnerCountState={runnerCountState}\r\n                                    freeWriteState={freeWriteState}\r\n                                    setFreeWriteState={setFreeWriteState}\r\n                                    canvasX1={canvasX1}\r\n                                    setcanvasX1={setcanvasX1}\r\n                                    canvasY1={canvasY1}\r\n                                    setcanvasY1={setcanvasY1}\r\n                                    flag={flag}\r\n                                    batterResult={batterResult}\r\n                                    setBatterResult={setBatterResult}\r\n                                    isPinch={isPinch}\r\n                                    setIsPinch={setIsPinch}\r\n                                    TransmissionDasekiCall={TransmissionDasekiCall}\r\n                                    trigger={trigger}\r\n                                    setTrigger={setTrigger}\r\n                                    isPass={isPass}\r\n                                    setIsPass={setIsPass}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    }\r\n\r\n                </div>\r\n\r\n                {isEditMode &&\r\n                    makePulldown(0, dasekiAll, \"at_bat_id\", nowSelected, setNowSelected, urlSchoolName, urlSchoolName2,\r\n                        dasekiAll, setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n                        setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n                        battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n                    )\r\n                }\r\n\r\n                {/* 修正モード */}\r\n                {!isEditMode &&\r\n                    <button className='editButton'\r\n                        onClick={() => {\r\n                            setIsEditMode(true);\r\n                            editBattersBox(dasekiAll[nowSelected], dasekiAll, nowSelected,\r\n                                setNowIningState, setNowOutCountState, setRunnerCountState, setNowPlayingMember,\r\n                                setFreeWriteState, setcanvasX1, setcanvasY1, setAddScoreState, setFlag,\r\n                                battingOrder, battingOrder2, registeredMember1, registeredMember2, setBattingOrder, setBattingOrder2\r\n                            )\r\n                        }}>修正モード\r\n                    </button>\r\n                }\r\n                {isEditMode &&\r\n                    <button className='editButton'\r\n                        onClick={() => {\r\n                            setIsEditMode(false)\r\n                            loardNowDaseki(setNowOutCountState, setNowIningState, setRunnerCountState, setScoreState,\r\n                                setNowPlayingMember, setFreeWriteState,\r\n                                dasekiAll, battingOrder, battingOrder2)\r\n                            setNowSelected([0])\r\n                        }}>速報入力に戻る\r\n                    </button>\r\n                }\r\n\r\n\r\n                {isEditMode &&\r\n                    <button className='editButton'\r\n                        onClick={() =>\r\n                            sendEdit(\r\n                                urlGameId,\r\n                                dasekiAll,\r\n                                nowSelected,\r\n                                nowIningState,\r\n                                addScoreState,\r\n                                scoreState,\r\n                                nowOutCountState,\r\n                                nowPlayingMember,\r\n                                battingOrder,\r\n                                battingOrder2,\r\n                                runnerCountState,\r\n                                freeWriteState,\r\n                                canvasX1,\r\n                                canvasY1,\r\n                                flag,\r\n                                batterResult,\r\n                                isPinch,\r\n                                trigger,\r\n                                setTrigger\r\n                            )}\r\n                    >修正確定</button>\r\n                }\r\n                {<button className='editButton' onClick={() => delball()}>打球削除</button>}\r\n            </div>\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default InputPastGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
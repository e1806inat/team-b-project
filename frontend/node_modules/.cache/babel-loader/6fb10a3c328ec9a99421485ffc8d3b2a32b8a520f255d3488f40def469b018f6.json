{"ast":null,"code":"import _slicedToArray from\"C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{useState,useRef}from\"react\";import{Hyoji}from'./comInputSchool/Hyoji';import{CheckBoxList}from'./comInputSchool/CheckBoxList1';import{Link,useNavigate,useSearchParams}from\"react-router-dom\";import{useEffect}from\"react\";import{TitleBar}from\"../../../OtherPage/TitleBar/TitleBar\";import{OptionButton}from\"../../../OtherPage/optionFunc/OptionButton\";import'./InputSchool.css';//バックエンドのurlを取得\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var backendUrl=require(\"../../../../DB/communication\").backendUrl;//次回追加ボタン押した後に、高校再表示させるのをやる\n//データを送る\nvar sendSchool=function sendSchool(useSchools,urlTournamentId,setUseSchools){var toSendSchool=[];//チェックされているものだけの配列を作る\nuseSchools.map(function(school){if(school.IsCheck){toSendSchool=[].concat(_toConsumableArray(toSendSchool),[{tournament_id:urlTournamentId,school_name:school.school_name,school_id:school.school_id,seed:school.seed}]);}});fetch(backendUrl+\"/school/school_call_p\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({tournament_id:urlTournamentId})}).then(function(response){return response.json();}).then(function(receivedResistered){//既に登録されているものと被っていないかチェック\nvar toSendSchool2=[];toSendSchool.map(function(v){if(receivedResistered.some(function(u){return v.school_name===u.school_name;}))console.log(\"「\"+v.school_name+\"」は名前が被っています\");else{toSendSchool2=[].concat(_toConsumableArray(toSendSchool2),[v]);}});console.log(toSendSchool2);//空っぽの配列は送れないように対策\nif(toSendSchool2.length!==0){fetch(backendUrl+\"/school/participants_register\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},//body: JSON.stringify({ email:login_id , password:login_ps }),\nbody:JSON.stringify(toSendSchool2)}).then(function(response){return response.text();}).then(function(data){if(data===\"OK\"){readSchool(setUseSchools,urlTournamentId);}});}});};//データベースから初期項目を読み出し\nvar readSchool=function readSchool(setUseSchools,urlTournamentId){fetch(backendUrl+\"/school/school_call\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"}}).then(function(response){return response.json();}).then(function(receivedAllSchool){// enchantCheck(receivedAllSchool, setUseSchools);\nloadRegisteredSchool(urlTournamentId,receivedAllSchool,setUseSchools);});};//checkを付与\nvar enchantCheck=function enchantCheck(receivedAllSchool,setUseSchools,data){var setUseSchools3=[];receivedAllSchool.map(function(school){if(data.some(function(u){return u.school_id===school.school_id;})){setUseSchools3=[].concat(_toConsumableArray(setUseSchools3),[{school_name:school.school_name,school_id:school.school_id,IsCheck:true,seed:0}]);}else{setUseSchools3=[].concat(_toConsumableArray(setUseSchools3),[{school_name:school.school_name,school_id:school.school_id,IsCheck:false,seed:0}]);}});setUseSchools(setUseSchools3);};//１つの高校を追加する\nvar addSchool=function addSchool(setUseSchools,addSchoolName,urlTournamentId,useSchools){if(useSchools.some(function(v){return v.school_name===addSchoolName;}))console.log(\"高校名がかぶっています\");else{fetch(backendUrl+\"/school/school_register\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({school_name:addSchoolName})}).then(function(response){return response.text();}).then(function(data){if(data===\"OK\"){readSchool(setUseSchools,urlTournamentId);}});}};//対象の大会の学校情報呼び出し\nvar loadRegisteredSchool=function loadRegisteredSchool(urlTournamentId,receivedAllSchool,setUseSchools){fetch(backendUrl+\"/school/school_call_p\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({tournament_id:urlTournamentId})}).then(function(response){return response.json();}).then(function(data){if(data.length===0){console.log(\"登録されていません\");}else{console.log(data);enchantCheck(receivedAllSchool,setUseSchools,data);}});};export var InputSchool=function InputSchool(){var _useSearchParams=useSearchParams(),_useSearchParams2=_slicedToArray(_useSearchParams,1),searchParams=_useSearchParams2[0];var urlTournamentName=searchParams.get(\"urlTournamentName\");var urlTournamentId=searchParams.get(\"urlTournamentId\");//ページ遷移用\nvar navigate=useNavigate();var PageTransition=function PageTransition(url){navigate(url);};//const { Schools } = require(\"../../../../DB/Schools\"); //分割代入\nvar Schools=[];// const [receivedResistered, setReeceivedResistered] = useState([])\nvar _useState=useState(!true),_useState2=_slicedToArray(_useState,2),isCheckBoxMode=_useState2[0],setIsCheckBoxMode=_useState2[1];var ref=useRef();var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),useSchools=_useState4[0],setUseSchools=_useState4[1];useEffect(function(){//全学校読み出し\nreadSchool(setUseSchools,urlTournamentId);//既に登録されている学校読み出し\n// loadRegisteredSchool(urlTournamentId)\n},[]);var handleClick=function handleClick(){setUseSchools([].concat(_toConsumableArray(useSchools),[{school_name:ref.current.value,school_id:null,IsCheck:true,seed:0}]));};var handleCheckBox=function handleCheckBox(){setIsCheckBoxMode(!isCheckBoxMode);return/*#__PURE__*/_jsx(\"button\",{children:\"aa\"});};return/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsx(TitleBar,{TitleText:\"高校入力選択画面\",PageTransition:PageTransition,valueUrl:-1}),/*#__PURE__*/_jsx(OptionButton,{}),/*#__PURE__*/_jsx(\"div\",{className:\"top\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"BackButton\",children:[/*#__PURE__*/_jsx(Link,{to:'/home/input_mode/',className:\"BackButton\",children:\"\\uFF1C\\u623B\\u308B\"}),\" \"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"tournamentName\",children:/*#__PURE__*/_jsx(\"h3\",{children:urlTournamentName})}),/*#__PURE__*/_jsxs(\"div\",{className:\"InputSchool\",children:[\"\\u5B66\\u6821\\u30FB\\u30C1\\u30FC\\u30E0\\u540D \",/*#__PURE__*/_jsx(\"input\",{ref:ref}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return addSchool(setUseSchools,ref.current.value,urlTournamentId,useSchools);},children:\"\\u8FFD\\u52A0\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"ButtonArea\",children:/*#__PURE__*/_jsx(\"button\",{id:\"checkButton\",onClick:handleCheckBox,children:\"\\u9AD8\\u6821\\u9078\\u629E\"})}),/*#__PURE__*/_jsx(\"hr\",{}),!isCheckBoxMode&&Hyoji(useSchools,navigate,urlTournamentName,urlTournamentId),isCheckBoxMode&&CheckBoxList(useSchools,setUseSchools),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"ButtonArea\",children:/*#__PURE__*/_jsx(\"button\",{className:\"decisionButton\",onClick:function onClick(){return sendSchool(useSchools,urlTournamentId,setUseSchools);},children:\"\\u9AD8\\u6821\\u540D\\u767B\\u9332\"})}),/*#__PURE__*/_jsx(\"hr\",{})]});};export default InputSchool;","map":{"version":3,"names":["React","useState","useRef","Hyoji","CheckBoxList","Link","useNavigate","useSearchParams","useEffect","TitleBar","OptionButton","backendUrl","require","sendSchool","useSchools","urlTournamentId","setUseSchools","toSendSchool","map","school","IsCheck","tournament_id","school_name","school_id","seed","fetch","method","mode","headers","body","JSON","stringify","then","response","json","receivedResistered","toSendSchool2","v","some","u","console","log","length","text","data","readSchool","receivedAllSchool","loadRegisteredSchool","enchantCheck","setUseSchools3","addSchool","addSchoolName","InputSchool","searchParams","urlTournamentName","get","navigate","PageTransition","url","Schools","isCheckBoxMode","setIsCheckBoxMode","ref","handleClick","current","value","handleCheckBox"],"sources":["C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project/frontend/src/AllPage/InputAll/PreInput/InputSchoolPage/InputSchool.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Hyoji } from './comInputSchool/Hyoji';\r\nimport { CheckBoxList } from './comInputSchool/CheckBoxList1';\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\nimport { OptionButton } from \"../../../OtherPage/optionFunc/OptionButton\"\r\n\r\nimport './InputSchool.css';\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n//次回追加ボタン押した後に、高校再表示させるのをやる\r\n\r\n//データを送る\r\nconst sendSchool = (useSchools, urlTournamentId, setUseSchools) => {\r\n  let toSendSchool = []\r\n  //チェックされているものだけの配列を作る\r\n  useSchools.map((school) => {\r\n    if (school.IsCheck) {\r\n      toSendSchool = [...toSendSchool,\r\n      {\r\n        tournament_id: urlTournamentId,\r\n        school_name: school.school_name,\r\n        school_id: school.school_id,\r\n        seed: school.seed\r\n      }]\r\n    }\r\n\r\n  })\r\n\r\n  fetch(backendUrl + \"/school/school_call_p\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ tournament_id: urlTournamentId }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((receivedResistered) => {\r\n\r\n      //既に登録されているものと被っていないかチェック\r\n      let toSendSchool2 = []\r\n      toSendSchool.map((v) => {\r\n        if (receivedResistered.some((u) => v.school_name === u.school_name))\r\n          console.log(\"「\" + v.school_name + \"」は名前が被っています\")\r\n        else { toSendSchool2 = [...toSendSchool2, v]; }\r\n      })\r\n      console.log(toSendSchool2)\r\n\r\n      //空っぽの配列は送れないように対策\r\n      if (toSendSchool2.length !== 0) {\r\n        fetch(backendUrl + \"/school/participants_register\", {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          //body: JSON.stringify({ email:login_id , password:login_ps }),\r\n          body: JSON.stringify(toSendSchool2),\r\n        })\r\n          .then((response) => response.text())\r\n          .then((data) => {\r\n            if (data === \"OK\") {\r\n              readSchool(setUseSchools, urlTournamentId)\r\n            }\r\n          })\r\n      }\r\n\r\n    })\r\n}\r\n\r\n\r\n//データベースから初期項目を読み出し\r\nconst readSchool = (setUseSchools, urlTournamentId) => {\r\n  fetch(backendUrl + \"/school/school_call\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((receivedAllSchool) => {\r\n\r\n      // enchantCheck(receivedAllSchool, setUseSchools);\r\n      loadRegisteredSchool(urlTournamentId, receivedAllSchool, setUseSchools)\r\n    })\r\n}\r\n\r\n\r\n\r\n//checkを付与\r\nconst enchantCheck = (receivedAllSchool, setUseSchools, data) => {\r\n  let setUseSchools3 = []\r\n  receivedAllSchool.map((school) => {\r\n    if (data.some((u) => u.school_id === school.school_id)) {\r\n      setUseSchools3 = (\r\n        [...setUseSchools3, {\r\n          school_name: school.school_name,\r\n          school_id: school.school_id,\r\n          IsCheck: true,\r\n          seed: 0\r\n        }])\r\n    }\r\n    else {\r\n      setUseSchools3 = (\r\n        [...setUseSchools3, {\r\n          school_name: school.school_name,\r\n          school_id: school.school_id,\r\n          IsCheck: false,\r\n          seed: 0\r\n        }])\r\n    }\r\n\r\n  })\r\n  setUseSchools(setUseSchools3)\r\n}\r\n\r\n\r\n//１つの高校を追加する\r\nconst addSchool = (setUseSchools, addSchoolName, urlTournamentId, useSchools) => {\r\n  if (useSchools.some((v) => v.school_name === addSchoolName)) console.log(\"高校名がかぶっています\")\r\n  else {\r\n    fetch(backendUrl + \"/school/school_register\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ school_name: addSchoolName }),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        if (data === \"OK\") {\r\n          readSchool(setUseSchools, urlTournamentId)\r\n        }\r\n      })\r\n  }\r\n\r\n}\r\n\r\n//対象の大会の学校情報呼び出し\r\nconst loadRegisteredSchool = (urlTournamentId, receivedAllSchool, setUseSchools) => {\r\n\r\n\r\n  fetch(backendUrl + \"/school/school_call_p\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ tournament_id: urlTournamentId }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.length === 0) {\r\n        console.log(\"登録されていません\")\r\n      }\r\n      else {\r\n        console.log(data);\r\n        enchantCheck(receivedAllSchool, setUseSchools, data)\r\n      }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const InputSchool = () => {\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n  const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n\r\n  //ページ遷移用\r\n  const navigate = useNavigate()\r\n  const PageTransition = (url) => {\r\n    navigate(url)\r\n  }\r\n\r\n  //const { Schools } = require(\"../../../../DB/Schools\"); //分割代入\r\n  let Schools = []\r\n\r\n  // const [receivedResistered, setReeceivedResistered] = useState([])\r\n\r\n  const [isCheckBoxMode, setIsCheckBoxMode] = useState(!true)\r\n  const ref = useRef()\r\n  const [useSchools, setUseSchools] = useState([])\r\n\r\n  useEffect(() => {\r\n    //全学校読み出し\r\n    readSchool(setUseSchools, urlTournamentId);\r\n    //既に登録されている学校読み出し\r\n    // loadRegisteredSchool(urlTournamentId)\r\n  }, [])\r\n\r\n  const handleClick = () => {\r\n    setUseSchools([...useSchools,\r\n    { school_name: ref.current.value, school_id: null, IsCheck: true, seed: 0 }\r\n    ])\r\n  }\r\n\r\n  const handleCheckBox = () => {\r\n    setIsCheckBoxMode(!isCheckBoxMode)\r\n    return (\r\n      <button>aa</button>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <TitleBar\r\n        TitleText={\"高校入力選択画面\"}\r\n        PageTransition={PageTransition}\r\n        valueUrl={-1}\r\n      />\r\n      <OptionButton />\r\n\r\n      <div className=\"top\">\r\n        <button className=\"BackButton\"><Link to={'/home/input_mode/'} className=\"BackButton\">＜戻る</Link> </button>\r\n      </div>\r\n\r\n      <div className=\"tournamentName\">\r\n        <h3>{urlTournamentName}</h3>\r\n      </div>\r\n      <div className=\"InputSchool\">\r\n        学校・チーム名 <input ref={ref} ></input>\r\n        <button onClick={() => addSchool(setUseSchools, ref.current.value, urlTournamentId, useSchools)}>追加</button>\r\n      </div>\r\n      <br />\r\n\r\n      {/* <button onClick={handleCheckBox}>チェックボックス入力</button>\r\n      <button onClick={() => sendSchool(useSchools, urlTournamentId, Schools, setUseSchools)}>高校名登録</button> */}\r\n\r\n      <div className=\"ButtonArea\">\r\n        <button id=\"checkButton\" onClick={handleCheckBox}>高校選択</button>\r\n      </div>\r\n\r\n      <hr></hr>\r\n      {!isCheckBoxMode && Hyoji(useSchools, navigate, urlTournamentName, urlTournamentId)}\r\n      {isCheckBoxMode && CheckBoxList(useSchools, setUseSchools)}<br />\r\n      <div className=\"ButtonArea\">\r\n        <button className=\"decisionButton\" onClick={() => sendSchool(useSchools, urlTournamentId, setUseSchools)}>高校名登録</button>\r\n      </div>\r\n\r\n      <hr></hr>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default InputSchool;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morim\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\my_folder\\\\school\\\\lesson\\\\ensyu\\\\code\\\\mein\\\\frontend\\\\src\\\\AllPage\\\\TopPage\\\\Top.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Member\n} = require(\"../../DB/Member\"); //Memberのファイルがあるアドレスを指定してください\n\nconst PullDown = () => {\n  _s();\n  const memberNameRef = useRef(null); //useref(refarenceで値を参照するという意味)を定義する\n  const [memberNameState, setMemberState] = useState(\"aaaa\"); //選択した名前に変化させるためのuseStateを定義する\n  const [deleteState, setDeleteState] = useState(true);\n\n  //useEffect内の関数は特定の条件を満たしたとき実行される\n  //今回は初回にページが読み込まれたとき実行される\n  useEffect(() => {\n    initialSetMember();\n  }, []);\n\n  //useEffectから実行される\n  //プルダウンの選択肢をここで定義している\n  const initialSetMember = () => {\n    for (let i = 1; i <= Member.length; i++) {\n      const option = document.createElement('option');\n      option.value = Member[i - 1].player_name_kanji; //なぜ\"vulue\"と\"text\"の両方に値を入れているのかは分かりません\n      option.text = Member[i - 1].player_name_kanji;\n      if (memberNameRef.current.value === i) {\n        option.disabled();\n      }\n      memberNameRef.current.appendChild(option);\n    }\n  };\n\n  //プルダウンをいじったときに実行される\n  //選択した名前に変更される\n  const selectMember = e => {\n    setMemberState(e.terget);\n    setDeleteState(!deleteState);\n    console.log(memberNameRef.current);\n  };\n  const handleButton = () => {\n    console.log(\"a\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: [\"\\u540D\\u524D\", /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: memberNameRef,\n        value: memberNameState,\n        onChange: selectMember\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: handleButton,\n        class: \"fa-solid fa-laptop size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(PullDown, \"lQp3Lx6yUlQzxIBdn9+RCezdqzY=\");\n_c = PullDown;\nexport default PullDown;\nvar _c;\n$RefreshReg$(_c, \"PullDown\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Member","require","PullDown","memberNameRef","memberNameState","setMemberState","deleteState","setDeleteState","initialSetMember","i","length","option","document","createElement","value","player_name_kanji","text","current","disabled","appendChild","selectMember","e","terget","console","log","handleButton"],"sources":["C:/Users/morim/OneDrive/デスクトップ/my_folder/school/lesson/ensyu/code/mein/frontend/src/AllPage/TopPage/Top.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\r\nconst { Member } = require(\"../../DB/Member\") //Memberのファイルがあるアドレスを指定してください\r\n\r\n\r\nconst PullDown = () => {\r\n\r\n  const memberNameRef = useRef(null)  //useref(refarenceで値を参照するという意味)を定義する\r\n  const [memberNameState, setMemberState] = useState(\"aaaa\")  //選択した名前に変化させるためのuseStateを定義する\r\n  const [deleteState, setDeleteState] = useState(true)\r\n\r\n\r\n  //useEffect内の関数は特定の条件を満たしたとき実行される\r\n  //今回は初回にページが読み込まれたとき実行される\r\n  useEffect(() => {\r\n    initialSetMember()\r\n  }, [])\r\n\r\n  //useEffectから実行される\r\n  //プルダウンの選択肢をここで定義している\r\n  const initialSetMember = () => {\r\n    for (let i = 1; i <= Member.length; i++) {\r\n      const option = document.createElement('option')\r\n      option.value = Member[i - 1].player_name_kanji //なぜ\"vulue\"と\"text\"の両方に値を入れているのかは分かりません\r\n      option.text = Member[i - 1].player_name_kanji\r\n      if(memberNameRef.current.value === i){option.disabled()}\r\n      memberNameRef.current.appendChild(option)\r\n    }\r\n  }\r\n\r\n\r\n//プルダウンをいじったときに実行される\r\n//選択した名前に変更される\r\n  const selectMember = (e) => {\r\n    setMemberState(e.terget)\r\n    setDeleteState(!deleteState)\r\n    console.log(memberNameRef.current)\r\n  }\r\n\r\n  const handleButton = () => {\r\n    console.log(\"a\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"display\">\r\n        名前<select ref={memberNameRef} value={memberNameState} onChange={selectMember} ></select>&nbsp;\r\n        <i onClick={handleButton} class=\"fa-solid fa-laptop size\"></i>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default PullDown"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAA;AAAA;AAC1D,MAAM;EAAEC;AAAO,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC,EAAC;;AAG9C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAErB,MAAMC,aAAa,GAAGJ,MAAM,CAAC,IAAI,CAAC,EAAE;EACpC,MAAM,CAACK,eAAe,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC,EAAE;EAC5D,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAGpD;EACA;EACAC,SAAS,CAAC,MAAM;IACdU,gBAAgB,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA,MAAMA,gBAAgB,GAAG,MAAM;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIT,MAAM,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,MAAME,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,KAAK,GAAGd,MAAM,CAACS,CAAC,GAAG,CAAC,CAAC,CAACM,iBAAiB,EAAC;MAC/CJ,MAAM,CAACK,IAAI,GAAGhB,MAAM,CAACS,CAAC,GAAG,CAAC,CAAC,CAACM,iBAAiB;MAC7C,IAAGZ,aAAa,CAACc,OAAO,CAACH,KAAK,KAAKL,CAAC,EAAC;QAACE,MAAM,CAACO,QAAQ,EAAE;MAAA;MACvDf,aAAa,CAACc,OAAO,CAACE,WAAW,CAACR,MAAM,CAAC;IAC3C;EACF,CAAC;;EAGH;EACA;EACE,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BhB,cAAc,CAACgB,CAAC,CAACC,MAAM,CAAC;IACxBf,cAAc,CAAC,CAACD,WAAW,CAAC;IAC5BiB,OAAO,CAACC,GAAG,CAACrB,aAAa,CAACc,OAAO,CAAC;EACpC,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAM;IACzBF,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAClB,CAAC;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,SAAS;MAAA,wCACpB;QAAQ,GAAG,EAAErB,aAAc;QAAC,KAAK,EAAEC,eAAgB;QAAC,QAAQ,EAAEgB;MAAa;QAAA;QAAA;QAAA;MAAA,QAAW,uBACxF;QAAG,OAAO,EAAEK,YAAa;QAAC,KAAK,EAAC;MAAyB;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA;EAC1D,iBACL;AAGP,CAAC;AAAA,GA/CKvB,QAAQ;AAAA,KAARA,QAAQ;AAiDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
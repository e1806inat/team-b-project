{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morim\\\\Desktop\\\\my_folder\\\\school\\\\lesson\\\\ensyu\\\\code\\\\team-b-project-output\\\\team-b-project\\\\frontend\\\\src\\\\AllPage\\\\InputAll\\\\Sokuho\\\\SokuhoSelectTournament\\\\SokuhoSelectTournament.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { OptionButton } from '../../../OtherPage/optionFunc/OptionButton';\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\n\n//バックエンドのurlを取得\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\n\n//フロントの階層urlを取得\nconst routeUrl = require(\"../../../../DB/communication\").routeUrl;\nconst readTournament = setTournamentData => {\n  fetch(backendUrl + \"/tournament/tournament_call\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.json()).then(data => setTournamentInfo(setTournamentData, data));\n};\nconst setTournamentInfo = (setTournamentData, data) => {\n  console.log(data);\n  setTournamentData(data);\n};\n\n//文字分割\nconst dateSplit = nowdate => {\n  let dateArray = nowdate.split('-');\n  dateArray = {\n    \"year\": dateArray[0],\n    \"month\": dateArray[1],\n    \"day\": dateArray[2]\n  };\n  return dateArray;\n};\nexport const Input_Tournament = () => {\n  _s();\n  //クッキー関連\n  const [cookies, setCookie, removeCookie] = useCookies();\n  const InitialYear = 2020;\n  const InitialMonth = 1;\n  const [birthYear, setBirthYear] = useState(InitialYear);\n  const [birthMonth, setBirthMonth] = useState(InitialMonth);\n  //文字分割のための箱を用意\n  let dateArray = {\n    \"year\": \"\",\n    \"month\": \"\",\n    \"day\": \"\"\n  };\n  let [TournamentData, setTournamentData] = useState([{\n    \"tournament_name\": '第31回春大会',\n    \"tournament_id\": '55',\n    \"opening\": \"2022-03-01\"\n  }, {\n    \"tournament_name\": '第9回松山大会',\n    \"tournament_id\": '56',\n    \"opening\": \"2022-02-01\"\n  }, {\n    \"tournament_name\": '第5回伊予大会',\n    \"tournament_id\": '57',\n    \"opening\": \"2022-01-01\"\n  }, {\n    \"tournament_name\": '第22回秋大会',\n    \"tournament_id\": '58',\n    \"opening\": \"2021-08-01\"\n  }]);\n\n  //ページ遷移用\n  const navigate = useNavigate();\n  const PageTransition = url => {\n    navigate(url);\n  };\n  useEffect(() => {\n    readTournament(setTournamentData);\n  }, []);\n\n  //セッション関連\n  useEffect(() => {\n    const gameStart = async () => {\n      const CheckSess = await fetch(backendUrl + \"/auth/check_sess\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionID: cookies.sessionID\n        })\n      });\n      const sess = await CheckSess.text();\n      console.log(sess);\n      console.log(cookies.sessionID);\n      if (sess === 'logout') {\n        PageTransition(routeUrl + \"/login\");\n      }\n    };\n    gameStart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n      TitleText: \"大会選択画面\",\n      PageTransition: PageTransition,\n      valueUrl: -1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"headline\",\n      children: \"\\u5927\\u4F1A\\u9078\\u629E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"whole\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tournamentList\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tournaments\",\n          children: TournamentData.map((Tournament, ind) => {\n            if (Tournament.tournament_name !== null) {\n              //文字分割\n              dateArray = dateSplit(Tournament.opening);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"days\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [dateArray.year, \"\\u5E74\", dateArray.month, \"\\u6708\", dateArray.day, \"\\u65E5\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tournamentName\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn_In_to1\",\n                    onClick: () => PageTransition(\"sokuho_input_makegame?urlTournamentId=\" + Tournament.tournament_id + \"&urlTournamentName=\" + Tournament.tournament_name),\n                    children: Tournament.tournament_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Input_Tournament, \"zLLoj27YeZflF8JaUgQmXtt/eNY=\", true, function () {\n  return [useNavigate];\n});\n_c = Input_Tournament;\nexport default Input_Tournament;\nvar _c;\n$RefreshReg$(_c, \"Input_Tournament\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Link","useNavigate","OptionButton","TitleBar","backendUrl","require","routeUrl","readTournament","setTournamentData","fetch","method","mode","headers","then","response","json","data","setTournamentInfo","console","log","dateSplit","nowdate","dateArray","split","Input_Tournament","cookies","setCookie","removeCookie","useCookies","InitialYear","InitialMonth","birthYear","setBirthYear","birthMonth","setBirthMonth","TournamentData","navigate","PageTransition","url","gameStart","CheckSess","body","JSON","stringify","sessionID","sess","text","map","Tournament","ind","tournament_name","opening","year","month","day","tournament_id"],"sources":["C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project-output/team-b-project/frontend/src/AllPage/InputAll/Sokuho/SokuhoSelectTournament/SokuhoSelectTournament.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { OptionButton } from '../../../OtherPage/optionFunc/OptionButton'\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n//フロントの階層urlを取得\r\nconst routeUrl = require(\"../../../../DB/communication\").routeUrl;\r\n\r\nconst readTournament = (setTournamentData) => {\r\n  fetch(backendUrl + \"/tournament/tournament_call\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => setTournamentInfo(setTournamentData, data))\r\n}\r\n\r\nconst setTournamentInfo = (setTournamentData, data) => {\r\n  console.log(data)\r\n  setTournamentData(data)\r\n}\r\n\r\n//文字分割\r\nconst dateSplit = (nowdate) => {\r\n  let dateArray = nowdate.split('-');\r\n  dateArray = { \"year\": dateArray[0], \"month\": dateArray[1], \"day\": dateArray[2] }\r\n  return dateArray\r\n}\r\n\r\n\r\nexport const Input_Tournament = () => {\r\n\r\n    //クッキー関連\r\n    const [cookies, setCookie, removeCookie] = useCookies();\r\n\r\n  const InitialYear = 2020\r\n  const InitialMonth = 1\r\n\r\n  const [birthYear, setBirthYear] = useState(InitialYear);\r\n  const [birthMonth, setBirthMonth] = useState(InitialMonth);\r\n  //文字分割のための箱を用意\r\n  let dateArray = { \"year\": \"\", \"month\": \"\", \"day\": \"\" }\r\n\r\n  let [TournamentData, setTournamentData] = useState([\r\n    { \"tournament_name\": '第31回春大会', \"tournament_id\": '55', \"opening\": \"2022-03-01\" },\r\n    { \"tournament_name\": '第9回松山大会', \"tournament_id\": '56', \"opening\": \"2022-02-01\" },\r\n    { \"tournament_name\": '第5回伊予大会', \"tournament_id\": '57', \"opening\": \"2022-01-01\" },\r\n    { \"tournament_name\": '第22回秋大会', \"tournament_id\": '58', \"opening\": \"2021-08-01\" }\r\n  ])\r\n\r\n  //ページ遷移用\r\n  const navigate = useNavigate()\r\n  const PageTransition = (url) => {\r\n    navigate(url)\r\n  }\r\n\r\n  useEffect(() => {\r\n    readTournament(setTournamentData);\r\n  }, []);\r\n\r\n    //セッション関連\r\n    useEffect(() => {\r\n      const gameStart = async () => {\r\n        const CheckSess = await fetch(backendUrl + \"/auth/check_sess\",\r\n          {\r\n            method: \"POST\", mode: \"cors\", headers: { \"Content-Type\": \"application/json\", },\r\n            body: JSON.stringify({ sessionID: cookies.sessionID })\r\n          })\r\n        const sess = await CheckSess.text();\r\n        console.log(sess)\r\n        console.log(cookies.sessionID)\r\n        if (sess === 'logout') {\r\n          PageTransition(routeUrl + \"/login\");\r\n        }\r\n      }\r\n      gameStart()\r\n    }, [])\r\n\r\n  return (\r\n    <div>\r\n      <TitleBar\r\n        TitleText={\"大会選択画面\"}\r\n        PageTransition={PageTransition}\r\n        valueUrl={-1}\r\n      />\r\n      <OptionButton />\r\n\r\n\r\n      <div class=\"headline\">大会選択</div>\r\n      <div class=\"whole\">\r\n        <div className=\"tournamentList\">\r\n          <div className=\"tournaments\">\r\n\r\n            {TournamentData.map((Tournament, ind) => {\r\n              if (Tournament.tournament_name !== null) {\r\n                //文字分割\r\n                dateArray = dateSplit(Tournament.opening)\r\n\r\n                return (\r\n                  <div className=\"tournament\">\r\n                    <div className=\"days\">\r\n                      <span>{dateArray.year}年{dateArray.month}月{dateArray.day}日</span>\r\n                    </div>\r\n                    <div className=\"tournamentName\">\r\n                      <button\r\n                        className=\"btn_In_to1\"\r\n                        onClick={() =>\r\n                          PageTransition(\r\n                            \"sokuho_input_makegame?urlTournamentId=\" +\r\n                            Tournament.tournament_id +\r\n                            \"&urlTournamentName=\" +\r\n                            Tournament.tournament_name\r\n                          )\r\n                        }>\r\n                        {Tournament.tournament_name}\r\n                      </button>\r\n                      <br />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input_Tournament;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
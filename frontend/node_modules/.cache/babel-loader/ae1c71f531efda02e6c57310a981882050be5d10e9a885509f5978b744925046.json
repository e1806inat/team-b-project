{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morim\\\\Desktop\\\\my_folder\\\\school\\\\lesson\\\\ensyu\\\\code\\\\team-b-project\\\\frontend\\\\src\\\\AllPage\\\\InputAll\\\\Sokuho\\\\SokuhoPlaygame\\\\InputPlayGame.jsx\",\n  _s = $RefreshSig$();\nimport { scoreBoard } from './comSokuho/scoreBoard';\nimport { outCount } from './comSokuho/outCount';\nimport { runnerCount } from './comSokuho/runnerCount';\nimport { freeWrite } from './comSokuho/freeWrite';\nimport { BaseballButton } from './comSokuho/baseballButton';\nimport { updateButton } from './comSokuho/updateButton';\nimport \"./comSokuho/CSS/scoreBoard.css\";\nimport pic from \"../../../../DB/diamond.png\";\nimport { useEffect, useRef, useState } from 'react';\nimport Popupfield from \"./comSokuho/onisi_popup/onisi_popup\";\n\n//プルダウン\nimport { PullDown } from './comSokuho/PullDown/PullDown';\nimport { PullDownMember } from './comSokuho/PullDown/PullDownMember';\nimport { useSearchParams } from 'react-router-dom';\n\n//選手読み込み\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst setBatter = (setBattingOrder, setBattingOrder2, urlSchoolId, urlSchoolId2, urlGameId, nowPlayingMember, setNowPlayingMember) => {\n  const ditectPitcher = data => {\n    let result = 0;\n    data.map((data, ind) => {\n      if (data.position === \"ピッチャー\") {\n        result = ind;\n      }\n    });\n    return result;\n  };\n  fetch(\"http://localhost:5000/member/starting_member_call\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      game_id: urlGameId,\n      school_id: urlSchoolId\n    })\n  }).then(response => response.json()).then(data1 => {\n    console.log(data1);\n    setBattingOrder(data1);\n    fetch(\"http://localhost:5000/member/starting_member_call\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        game_id: urlGameId,\n        school_id: urlSchoolId2\n      })\n    }).then(response => response.json()).then(data2 => {\n      console.log(data2);\n      setBattingOrder2(data2);\n      nowPlayingMember[0].pitcher = ditectPitcher(data2);\n      nowPlayingMember[1].pitcher = ditectPitcher(data1);\n      setNowPlayingMember(nowPlayingMember);\n    });\n  });\n};\n\n//一時打席情報登録用のテーブル作成\nconst TmpTableCreate = urlGameId => {\n  fetch(\"http://localhost:5000/daseki/tmp_table_create\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      table_name: urlGameId\n    })\n  }).then(response => response.json()).then(data => {\n    console.log(data);\n  });\n};\n\n//テーブル存在確認\n_c = TmpTableCreate;\nconst TmpTableCheck = (urlGameId, TmpTableCreate, TmpDasekiCall) => {\n  fetch(\"http://localhost:5000/daseki/tmp_table_check\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      table_name: urlGameId\n    })\n  }).then(response => response.text()).then(data => {\n    console.log(data);\n    if (data === \"not exist\") {\n      TmpTableCreate(urlGameId);\n    } else if (data === \"exist\") {\n      console.log(data);\n      TmpDasekiCall(urlGameId);\n    }\n  });\n};\n\n////試合情報受け取り（速報用）\n_c2 = TmpTableCheck;\nconst TmpDasekiCall = urlGameId => {\n  fetch(\"http://localhost:5000/daseki/tmp_daseki_call\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      table_name: urlGameId\n    })\n  }).then(response => response.json()).then(data => {\n    console.log(data);\n  });\n};\n\n//一時打席情報登録用のテーブルに打席情報登録（UPSERTを使うかも）\n_c3 = TmpDasekiCall;\nconst DasekiRegister = urlGameId => {\n  fetch(\"http://localhost:5000/daseki/daseki_register\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      table_name: urlGameId\n    })\n  }).then(response => response.text()).then(data => {\n    console.log(data);\n  });\n};\n\n//選手登録された選手読み込む\n_c4 = DasekiRegister;\nconst loadRegisteredMember = (setRegisteredMember, urlTournamentId, urlSchoolId) => {\n  fetch(\"http://localhost:5000/member/tournament_member_call\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      tournament_id: urlTournamentId,\n      school_id: urlSchoolId\n    })\n  }).then(response => response.json()).then(data => {\n    console.log(data);\n    setRegisteredMember(data);\n  });\n};\nconst canvasSize = 1000;\nconst homebase = 500;\nconst InputPlayGame = () => {\n  _s();\n  //urlから値を読み出す\n  const [searchParams] = useSearchParams();\n  const urlTournamentId = searchParams.get(\"urlTournamentId\");\n  const urlTournamentName = searchParams.get(\"urlTournamentName\");\n  const urlSchoolId = searchParams.get(\"urlSchoolId\");\n  const urlSchoolName = searchParams.get(\"urlSchoolName\");\n  const urlSchoolId2 = searchParams.get(\"urlSchoolId2\");\n  const urlSchoolName2 = searchParams.get(\"urlSchoolName2\");\n  const urlGameId = searchParams.get(\"urlGameId\");\n\n  //Score記録\n  const {\n    Score\n  } = require(\"../../../../DB/Score\");\n  const [scoreState, setScoreState] = useState(Score);\n  //Scoreの加算値の監視\n  const [addScoreState, setAddScoreState] = useState(0);\n\n  //今のイニング\n  const [nowIningState, setNowIningState] = useState([0, 0]);\n\n  //自由記述内容を監視\n  const [freeWriteState, setFreeWriteState] = useState(\"\"); //いらんかも\n\n  //自由記述編集モードのフラグ\n  const [freeWriteModeFlag, setFreeWriteModeFlag] = useState(false);\n\n  //多分打球の種類だと思われる\n  const [flag, setFlag] = useState(2);\n\n  //緑プルダウン用\n  const [nowPosition, setNowPosition] = useState(15);\n\n  //アウトカウント\n  const [nowOutCountState, setNowOutCountState] = useState(0);\n\n  //ランナーカウント\n  const [runnerCountState, setRunnerCountState] = useState([false, false, false]);\n\n  //選手登録情報を読み込む\n  const [registeredMember1, setRegisteredMember1] = useState([]);\n  const [registeredMember2, setRegisteredMember2] = useState([]);\n\n  //打順と打者のリスト\n  const [battingOrder, setBattingOrder] = useState([[{\n    player_name_kanji: '丹羽 長秀'\n  }, {\n    player_name_kanji: '柴田 勝家'\n  }], 0]);\n  const [battingOrder2, setBattingOrder2] = useState([[{\n    player_name_kanji: '丹羽 長秀'\n  }, {\n    player_name_kanji: '柴田 勝家'\n  }], 0]);\n\n  //今の打順と今のピッチャーが誰なのかを2チーム文記録する\n  const [nowPlayingMember, setNowPlayingMember] = useState([{\n    batter: 0,\n    pitcher: 0\n  }, {\n    batter: 0,\n    pitcher: 0\n  }]);\n\n  // contextを状態として持つ\n  const [context, setContext] = useState(null);\n  const [canvasX1, setcanvasX1] = useState(0);\n  const [canvasY1, setcanvasY1] = useState(0);\n  //一つのStateで管理しようぜ的な試み\n  //const [canvasXY, setCanvasXY] = useState({x:0, y:0})\n\n  // コンポーネントの初期化完了後コンポーネント状態にコンテキストを登録\n\n  useEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const canvasContext = canvas.getContext(\"2d\");\n    setContext(canvasContext);\n    canvas.addEventListener(\"click\", e => {\n      const rect = e.target.getBoundingClientRect();\n\n      // ブラウザ上での座標を求める\n      const viewX = e.clientX - rect.left,\n        viewY = e.clientY - rect.top;\n\n      // 表示サイズとキャンバスの実サイズの比率を求める\n      const scaleWidth = canvas.clientWidth / canvas.width,\n        scaleHeight = canvas.clientHeight / canvas.height;\n\n      // ブラウザ上でのクリック座標をキャンバス上に変換\n      const canvasX = Math.floor(viewX / scaleWidth),\n        canvasY = Math.floor(viewY / scaleHeight);\n      console.log(canvasX, canvasY);\n      setcanvasX1(canvasX);\n      setcanvasY1(canvasY);\n    });\n  }, []);\n\n  // 状態にコンテキストが登録されたらそれに対して操作できる\n  useEffect(() => {\n    if (context !== null) {\n      //const img = new Image()\n      //img.src = \"img.jpg\" // 描画する画像など\n\n      //img.onload = () => {\n\n      //context.drawImage(img, 0, 0)\n      // 更にこれに続いて何か処理をしたい場合\n\n      //削除\n      context.clearRect(0, 0, canvasSize, canvasSize);\n\n      //緑グラウンド\n      context.beginPath();\n      context.fillStyle = \"green\";\n      context.moveTo(homebase, homebase);\n      context.arc(homebase, homebase, homebase, -Math.PI / 4, 5 * Math.PI / 4, true);\n      context.closePath();\n      context.fill();\n\n      //茶グラウンド\n      context.beginPath();\n      context.fillStyle = \"sienna\";\n      context.moveTo(homebase, homebase);\n      context.arc(homebase, homebase, 3.5 * homebase / 5, -Math.PI / 4, 5 * Math.PI / 4, true);\n      context.closePath();\n      context.fill();\n\n      //白線\n      context.beginPath();\n      context.moveTo(homebase, homebase);\n      context.lineTo(homebase * 5 / 4, homebase * 3 / 4);\n      context.lineTo(homebase, homebase / 2);\n      context.lineTo(homebase * 3 / 4, homebase * 3 / 4);\n      context.strokeStyle = \"white\";\n      context.lineWidth = 2;\n      context.closePath();\n      context.stroke();\n      const w = 0.03 * homebase; //ベースの幅\n      const margin = 10; //ベース位置調整用\n\n      //ベースの色\n      let baseColor2 = [];\n      for (let i = 0; i < 3; i++) {\n        if (runnerCountState[i]) {\n          baseColor2[i] = \"blue\";\n          console.log(baseColor2[i]);\n        } else {\n          baseColor2[i] = \"white\";\n        }\n      }\n      context.strokeStyle = \"black\";\n\n      //３塁ベース\n      context.fillStyle = baseColor2[2];\n      context.beginPath();\n      context.moveTo(homebase * 3 / 4, homebase * 3 / 4 - margin);\n      context.lineTo(homebase * 3 / 4 - w, homebase * 3 / 4 + w - margin);\n      context.lineTo(homebase * 3 / 4, homebase * 3 / 4 + w * 2 - margin);\n      context.lineTo(homebase * 3 / 4 + w, homebase * 3 / 4 + w - margin);\n      context.closePath();\n      context.fill();\n      context.lineWidth = 1;\n      context.stroke();\n\n      //2塁ベース\n      context.fillStyle = baseColor2[1];\n      context.beginPath();\n      context.moveTo(homebase, homebase / 2 - margin);\n      context.lineTo(homebase - w, homebase / 2 + w - margin);\n      context.lineTo(homebase, homebase / 2 + w * 2 - margin);\n      context.lineTo(homebase + w, homebase / 2 + w - margin);\n      context.closePath();\n      context.fill();\n      context.stroke();\n\n      //1塁ベース\n      context.fillStyle = baseColor2[0];\n      context.beginPath();\n      context.moveTo(homebase * 5 / 4, homebase * 3 / 4 - margin);\n      context.lineTo(homebase * 5 / 4 - w, homebase * 3 / 4 + w - margin);\n      context.lineTo(homebase * 5 / 4, homebase * 3 / 4 + w * 2 - margin);\n      context.lineTo(homebase * 5 / 4 + w, homebase * 3 / 4 + w - margin);\n      context.closePath();\n      context.fill();\n      context.stroke();\n      context.fillStyle = \"white\";\n      //ホームベース\n      context.beginPath();\n      context.moveTo(homebase + w * 2 / 3, homebase - w * 2 / 3);\n      context.lineTo(homebase - w * 2 / 3, homebase - w * 2 / 3);\n      context.lineTo(homebase - w * 2 / 3, homebase + w / 3);\n      context.lineTo(homebase, homebase + w);\n      context.lineTo(homebase + w * 2 / 3, homebase + w / 3);\n      context.closePath();\n      context.fill();\n      context.stroke();\n\n      //打球\n      context.beginPath();\n      context.moveTo(homebase, homebase);\n\n      // let flag = 2;   //１が直線、２がフライ、3がゴロ\n\n      if (flag === 1) {\n        console.log(\"flag1\");\n        context.lineTo(canvasX1, canvasY1);\n      }\n      if (flag === 2) {\n        let start = {\n          x: 500,\n          y: 500\n        };\n        let cp = {\n          x: 500,\n          y: start.y / 5 * 3\n        }; //ここで曲がり具合調整\n        console.log(\"flag2\");\n        context.quadraticCurveTo(cp.x, cp.y, canvasX1, canvasY1);\n      }\n      if (flag === 3) {\n        console.log(\"flag3\");\n        drawWaveLine(500, 500, canvasX1, canvasY1, 20, 20, \"red\", context);\n      }\n      context.strokeStyle = \"red\";\n      context.lineWidth = 5;\n      context.stroke();\n\n      //setLoaded(true)\n      //}\n\n      // 波線描画\n      // 0度状態でキャンバス中心〜マウス座標までの距離分の波線を描画して、マウス座標との角度分、回転する\n\n      function drawWaveLine(x, y, mx, my, amplitude, waveLen, color, ctx) {\n        const BEGIN = 0,\n          CTRL = 1,\n          END = 2;\n        const x1 = 0,\n          y1 = 1;\n        console.log(\"関数内\");\n        var distance = calcDistance(x, y, mx, my);\n        var cycle = Math.floor(distance / waveLen);\n        var ps = [[x, y], [0, 0], [x, y]];\n        ctx.save();\n        ctx.strokeStyle = color;\n        ctx.beginPath();\n        ctx.moveTo(ps[BEGIN][x1], ps[BEGIN][y1]);\n        var rad = calcRadian(x, y, mx, my);\n        if (0 !== rad) {\n          ctx.translate(x, y);\n          ctx.rotate(rad);\n          ctx.translate(-x, -y);\n        }\n        for (var i = 0; i < cycle; i++) {\n          ps[END][x1] += waveLen;\n          ps[CTRL][x1] = ps[BEGIN][x1] + (ps[END][x1] - ps[BEGIN][x1]) * 0.5;\n          ps[CTRL][y1] = ps[BEGIN][y1] + (i % 2 !== 0 ? -amplitude : amplitude);\n          ctx.quadraticCurveTo(ps[CTRL][x1], ps[CTRL][y1], ps[END][x1], ps[END][y1]);\n          ps[BEGIN][x1] = ps[END][x1];\n          ps[BEGIN][y1] = ps[END][y1];\n        }\n        ps[END][x1] += distance - calcDistance(x, y, ps[END][x1], ps[END][y1]);\n        ps[CTRL][x1] = ps[BEGIN][x1] + (ps[END][x1] - ps[BEGIN][x1]) * 0.5;\n        ps[CTRL][y1] = ps[BEGIN][y1] + (cycle % 2 !== 0 ? -amplitude : amplitude);\n        ctx.quadraticCurveTo(ps[CTRL][x1], ps[CTRL][y1], ps[END][x1], ps[END][y1]);\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      // 2点間座標からラジアン算出\n      function calcRadian(x, y, mx, my) {\n        return Math.atan2(my - y, mx - x);\n      }\n\n      // 2点間座標の距離算出\n      function calcDistance(x, y, mx, my) {\n        return Math.hypot(my - y, mx - x);\n      }\n    }\n  }, [canvasX1, canvasY1, flag, runnerCountState]);\n  useEffect(() => {\n    //データベースからデータをもらうために呼び出す\n    setBatter(setBattingOrder, setBattingOrder2, urlSchoolId, urlSchoolId2, urlGameId, nowPlayingMember, setNowPlayingMember);\n    loadRegisteredMember(setRegisteredMember1, urlTournamentId, urlSchoolId);\n    loadRegisteredMember(setRegisteredMember2, urlTournamentId, urlSchoolId2);\n\n    //テーブル存在確認\n    TmpTableCheck(urlGameId, TmpTableCreate, TmpDasekiCall);\n    //一時打席情報登録用のテーブル作成\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InputPlayGame\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u901F\\u5831\\u5165\\u529B\\u753B\\u9762\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scoreBoard\",\n        children: scoreBoard(scoreState, nowIningState, urlSchoolName, urlSchoolName2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"optionButtons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outCountsAndRunnerCounts\",\n        children: [outCount(nowOutCountState, setNowOutCountState), runnerCount(runnerCountState, setRunnerCountState)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BatterAndPitcher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BatterPitcher\",\n        children: /*#__PURE__*/_jsxDEV(PullDownMember, {\n          battingOrder: battingOrder,\n          battingOrder2: battingOrder2,\n          setBattingOrder: setBattingOrder,\n          registeredMember1: registeredMember1,\n          registeredMember2: registeredMember2,\n          nowIningState: nowIningState,\n          nowPlayingMember: nowPlayingMember,\n          setNowPlayingMember: setNowPlayingMember\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"freeWrite\",\n        children: freeWrite(freeWriteState, setFreeWriteState, freeWriteModeFlag, setFreeWriteModeFlag)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PullDown, {\n        nowPosition: nowPosition,\n        setNowPosition: setNowPosition,\n        setcanvasX1: setcanvasX1,\n        setcanvasY1: setcanvasY1,\n        setFlag: setFlag,\n        setFreeWriteState: setFreeWriteState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diamond\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          width: \"800\",\n          height: \"800\",\n          id: \"canvas\",\n          className: \"diamondPng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"baseballButtons\",\n          children: BaseballButton(addScoreState, setAddScoreState)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateButton\",\n          children: /*#__PURE__*/_jsxDEV(Popupfield, {\n            nowIningState: nowIningState //今が何回なのか\n            ,\n            setNowIningState: setNowIningState //今が何回なのかの変更関数\n            ,\n            addScoreState: addScoreState,\n            setAddScoreState: setAddScoreState,\n            scoreState: scoreState,\n            setScoreState: setScoreState,\n            nowOutCountState: nowOutCountState,\n            setNowOutCountState: setNowOutCountState,\n            DasekiRegister: DasekiRegister,\n            urlGameId: urlGameId,\n            urlSchoolId: urlSchoolId,\n            urlSchoolId2: urlSchoolId2,\n            nowPlayingMember: nowPlayingMember,\n            battingOrder: battingOrder,\n            battingOrder2: battingOrder2,\n            runnerCountState: runnerCountState,\n            freeWriteState: freeWriteState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 9\n  }, this);\n};\n_s(InputPlayGame, \"5/khX4vmLprrQo4A+dq7sJmbVeQ=\", false, function () {\n  return [useSearchParams];\n});\n_c5 = InputPlayGame;\nexport default InputPlayGame;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TmpTableCreate\");\n$RefreshReg$(_c2, \"TmpTableCheck\");\n$RefreshReg$(_c3, \"TmpDasekiCall\");\n$RefreshReg$(_c4, \"DasekiRegister\");\n$RefreshReg$(_c5, \"InputPlayGame\");","map":{"version":3,"names":["scoreBoard","outCount","runnerCount","freeWrite","BaseballButton","updateButton","pic","useEffect","useRef","useState","Popupfield","PullDown","PullDownMember","useSearchParams","setBatter","setBattingOrder","setBattingOrder2","urlSchoolId","urlSchoolId2","urlGameId","nowPlayingMember","setNowPlayingMember","ditectPitcher","data","result","map","ind","position","fetch","method","mode","headers","body","JSON","stringify","game_id","school_id","then","response","json","data1","console","log","data2","pitcher","TmpTableCreate","table_name","TmpTableCheck","TmpDasekiCall","text","DasekiRegister","loadRegisteredMember","setRegisteredMember","urlTournamentId","tournament_id","canvasSize","homebase","InputPlayGame","searchParams","get","urlTournamentName","urlSchoolName","urlSchoolName2","Score","require","scoreState","setScoreState","addScoreState","setAddScoreState","nowIningState","setNowIningState","freeWriteState","setFreeWriteState","freeWriteModeFlag","setFreeWriteModeFlag","flag","setFlag","nowPosition","setNowPosition","nowOutCountState","setNowOutCountState","runnerCountState","setRunnerCountState","registeredMember1","setRegisteredMember1","registeredMember2","setRegisteredMember2","battingOrder","player_name_kanji","battingOrder2","batter","context","setContext","canvasX1","setcanvasX1","canvasY1","setcanvasY1","canvas","document","getElementById","canvasContext","getContext","addEventListener","e","rect","target","getBoundingClientRect","viewX","clientX","left","viewY","clientY","top","scaleWidth","clientWidth","width","scaleHeight","clientHeight","height","canvasX","Math","floor","canvasY","clearRect","beginPath","fillStyle","moveTo","arc","PI","closePath","fill","lineTo","strokeStyle","lineWidth","stroke","w","margin","baseColor2","i","start","x","y","cp","quadraticCurveTo","drawWaveLine","mx","my","amplitude","waveLen","color","ctx","BEGIN","CTRL","END","x1","y1","distance","calcDistance","cycle","ps","save","rad","calcRadian","translate","rotate","restore","atan2","hypot"],"sources":["C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project/frontend/src/AllPage/InputAll/Sokuho/SokuhoPlaygame/InputPlayGame.jsx"],"sourcesContent":["import { scoreBoard } from './comSokuho/scoreBoard';\r\nimport { outCount } from './comSokuho/outCount'\r\nimport { runnerCount } from './comSokuho/runnerCount';\r\nimport { freeWrite } from './comSokuho/freeWrite'\r\nimport { BaseballButton } from './comSokuho/baseballButton'\r\nimport { updateButton } from './comSokuho/updateButton'\r\nimport \"./comSokuho/CSS/scoreBoard.css\"\r\nimport pic from \"../../../../DB/diamond.png\"\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport Popupfield from \"./comSokuho/onisi_popup/onisi_popup\";\r\n\r\n//プルダウン\r\nimport { PullDown } from './comSokuho/PullDown/PullDown'\r\nimport { PullDownMember } from './comSokuho/PullDown/PullDownMember'\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\n\r\n//選手読み込み\r\nconst setBatter = (setBattingOrder, setBattingOrder2, urlSchoolId, urlSchoolId2, urlGameId, nowPlayingMember, setNowPlayingMember) => {\r\n    const ditectPitcher = (data) => {\r\n        let result = 0\r\n        data.map((data, ind) => {\r\n            if (data.position === \"ピッチャー\") {\r\n                result = ind\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n\r\n    fetch(\"http://localhost:5000/member/starting_member_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data1) => {\r\n            console.log(data1);\r\n            setBattingOrder(data1)\r\n\r\n            fetch(\"http://localhost:5000/member/starting_member_call\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ game_id: urlGameId, school_id: urlSchoolId2 }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data2) => {\r\n                    console.log(data2);\r\n                    setBattingOrder2(data2)\r\n                    nowPlayingMember[0].pitcher = ditectPitcher(data2)\r\n                    nowPlayingMember[1].pitcher = ditectPitcher(data1)\r\n                    setNowPlayingMember(nowPlayingMember)\r\n                })\r\n        })\r\n}\r\n\r\n//一時打席情報登録用のテーブル作成\r\nconst TmpTableCreate = (urlGameId) => {\r\n\r\n    fetch(\"http://localhost:5000/daseki/tmp_table_create\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => { console.log(data) })\r\n}\r\n\r\n//テーブル存在確認\r\nconst TmpTableCheck = (urlGameId, TmpTableCreate, TmpDasekiCall) => {\r\n\r\n    fetch(\"http://localhost:5000/daseki/tmp_table_check\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n            console.log(data)\r\n            if (data === \"not exist\") { TmpTableCreate(urlGameId) }\r\n            else if (data === \"exist\") { console.log(data); TmpDasekiCall(urlGameId) }\r\n        })\r\n}\r\n\r\n////試合情報受け取り（速報用）\r\nconst TmpDasekiCall = (urlGameId) => {\r\n\r\n    fetch(\"http://localhost:5000/daseki/tmp_daseki_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => { console.log(data) })\r\n}\r\n\r\n//一時打席情報登録用のテーブルに打席情報登録（UPSERTを使うかも）\r\nconst DasekiRegister = (urlGameId) => {\r\n\r\n    fetch(\"http://localhost:5000/daseki/daseki_register\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ table_name: urlGameId }),\r\n    })\r\n        .then((response) => response.text())\r\n        .then((data) => { console.log(data) })\r\n}\r\n\r\n//選手登録された選手読み込む\r\nconst loadRegisteredMember = (setRegisteredMember, urlTournamentId, urlSchoolId) => {\r\n\r\n    fetch(\"http://localhost:5000/member/tournament_member_call\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ tournament_id: urlTournamentId, school_id: urlSchoolId }),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => { console.log(data); setRegisteredMember(data) })\r\n}\r\n\r\nconst canvasSize = 1000;\r\nconst homebase = 500;\r\n\r\nconst InputPlayGame = () => {\r\n    //urlから値を読み出す\r\n    const [searchParams] = useSearchParams();\r\n    const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n    const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n    const urlSchoolId = searchParams.get(\"urlSchoolId\")\r\n    const urlSchoolName = searchParams.get(\"urlSchoolName\")\r\n    const urlSchoolId2 = searchParams.get(\"urlSchoolId2\")\r\n    const urlSchoolName2 = searchParams.get(\"urlSchoolName2\")\r\n    const urlGameId = searchParams.get(\"urlGameId\")\r\n\r\n    //Score記録\r\n    const { Score } = require(\"../../../../DB/Score\")\r\n    const [scoreState, setScoreState] = useState(Score)\r\n    //Scoreの加算値の監視\r\n    const [addScoreState, setAddScoreState] = useState(0)\r\n\r\n    //今のイニング\r\n    const [nowIningState, setNowIningState] = useState([0, 0])\r\n\r\n    //自由記述内容を監視\r\n    const [freeWriteState, setFreeWriteState] = useState(\"\")//いらんかも\r\n\r\n    //自由記述編集モードのフラグ\r\n    const [freeWriteModeFlag, setFreeWriteModeFlag] = useState(false)\r\n\r\n    //多分打球の種類だと思われる\r\n    const [flag, setFlag] = useState(2);\r\n\r\n    //緑プルダウン用\r\n    const [nowPosition, setNowPosition] = useState(15)\r\n\r\n    //アウトカウント\r\n    const [nowOutCountState, setNowOutCountState] = useState(0)\r\n\r\n    //ランナーカウント\r\n    const [runnerCountState, setRunnerCountState] = useState([false, false, false])\r\n\r\n    //選手登録情報を読み込む\r\n    const [registeredMember1, setRegisteredMember1] = useState([])\r\n    const [registeredMember2, setRegisteredMember2] = useState([])\r\n\r\n    //打順と打者のリスト\r\n    const [battingOrder, setBattingOrder] = useState([[{ player_name_kanji: '丹羽 長秀' }, { player_name_kanji: '柴田 勝家' }], 0])\r\n    const [battingOrder2, setBattingOrder2] = useState([[{ player_name_kanji: '丹羽 長秀' }, { player_name_kanji: '柴田 勝家' }], 0])\r\n\r\n    //今の打順と今のピッチャーが誰なのかを2チーム文記録する\r\n    const [nowPlayingMember, setNowPlayingMember] = useState([{ batter: 0, pitcher: 0 }, { batter: 0, pitcher: 0 }])\r\n\r\n    // contextを状態として持つ\r\n    const [context, setContext] = useState(null)\r\n\r\n\r\n    const [canvasX1, setcanvasX1] = useState(0)\r\n    const [canvasY1, setcanvasY1] = useState(0)\r\n    //一つのStateで管理しようぜ的な試み\r\n    //const [canvasXY, setCanvasXY] = useState({x:0, y:0})\r\n\r\n    // コンポーネントの初期化完了後コンポーネント状態にコンテキストを登録\r\n\r\n    useEffect(() => {\r\n        const canvas = document.getElementById(\"canvas\")\r\n        const canvasContext = canvas.getContext(\"2d\")\r\n        setContext(canvasContext)\r\n\r\n\r\n\r\n        canvas.addEventListener(\"click\", e => {\r\n            const rect = e.target.getBoundingClientRect();\r\n\r\n            // ブラウザ上での座標を求める\r\n            const viewX = e.clientX - rect.left,\r\n                viewY = e.clientY - rect.top;\r\n\r\n            // 表示サイズとキャンバスの実サイズの比率を求める\r\n            const scaleWidth = canvas.clientWidth / canvas.width,\r\n                scaleHeight = canvas.clientHeight / canvas.height;\r\n\r\n            // ブラウザ上でのクリック座標をキャンバス上に変換\r\n            const canvasX = Math.floor(viewX / scaleWidth),\r\n                canvasY = Math.floor(viewY / scaleHeight);\r\n\r\n            console.log(canvasX, canvasY);\r\n            setcanvasX1(canvasX);\r\n            setcanvasY1(canvasY);\r\n        });\r\n    }, [])\r\n\r\n\r\n\r\n    // 状態にコンテキストが登録されたらそれに対して操作できる\r\n    useEffect(() => {\r\n        if (context !== null) {\r\n            //const img = new Image()\r\n            //img.src = \"img.jpg\" // 描画する画像など\r\n\r\n\r\n            //img.onload = () => {\r\n\r\n            //context.drawImage(img, 0, 0)\r\n            // 更にこれに続いて何か処理をしたい場合\r\n\r\n            //削除\r\n            context.clearRect(0, 0, canvasSize, canvasSize);\r\n\r\n            //緑グラウンド\r\n            context.beginPath();\r\n            context.fillStyle = \"green\";\r\n            context.moveTo(homebase, homebase);\r\n            context.arc(homebase, homebase, homebase, -Math.PI / 4, 5 * Math.PI / 4, true);\r\n            context.closePath();\r\n            context.fill();\r\n\r\n            //茶グラウンド\r\n            context.beginPath();\r\n            context.fillStyle = \"sienna\";\r\n            context.moveTo(homebase, homebase);\r\n            context.arc(homebase, homebase, 3.5 * homebase / 5, -Math.PI / 4, 5 * Math.PI / 4, true);\r\n            context.closePath();\r\n            context.fill();\r\n\r\n            //白線\r\n            context.beginPath();\r\n            context.moveTo(homebase, homebase);\r\n            context.lineTo(homebase * 5 / 4, homebase * 3 / 4);\r\n            context.lineTo(homebase, homebase / 2);\r\n            context.lineTo(homebase * 3 / 4, homebase * 3 / 4);\r\n            context.strokeStyle = \"white\";\r\n            context.lineWidth = 2;\r\n            context.closePath();\r\n            context.stroke();\r\n\r\n\r\n            const w = 0.03 * homebase;  //ベースの幅\r\n            const margin = 10;    //ベース位置調整用\r\n\r\n            //ベースの色\r\n            let baseColor2 = [];\r\n            for (let i = 0; i < 3; i++) {\r\n                if (runnerCountState[i]) {\r\n                    baseColor2[i] = \"blue\";\r\n                    console.log(baseColor2[i]);\r\n                }\r\n                else {\r\n                    baseColor2[i] = \"white\";\r\n                }\r\n            }\r\n\r\n\r\n            context.strokeStyle = \"black\";\r\n\r\n            //３塁ベース\r\n            context.fillStyle = baseColor2[2];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 3 / 4, homebase * 3 / 4 - margin);\r\n            context.lineTo(homebase * 3 / 4 - w, homebase * 3 / 4 + w - margin);\r\n            context.lineTo(homebase * 3 / 4, homebase * 3 / 4 + w * 2 - margin);\r\n            context.lineTo(homebase * 3 / 4 + w, homebase * 3 / 4 + w - margin);\r\n            context.closePath();\r\n            context.fill();\r\n            context.lineWidth = 1;\r\n            context.stroke();\r\n\r\n            //2塁ベース\r\n            context.fillStyle = baseColor2[1];\r\n            context.beginPath();\r\n            context.moveTo(homebase, homebase / 2 - margin);\r\n            context.lineTo(homebase - w, homebase / 2 + w - margin);\r\n            context.lineTo(homebase, homebase / 2 + w * 2 - margin);\r\n            context.lineTo(homebase + w, homebase / 2 + w - margin);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            //1塁ベース\r\n            context.fillStyle = baseColor2[0];\r\n            context.beginPath();\r\n            context.moveTo(homebase * 5 / 4, homebase * 3 / 4 - margin);\r\n            context.lineTo(homebase * 5 / 4 - w, homebase * 3 / 4 + w - margin);\r\n            context.lineTo(homebase * 5 / 4, homebase * 3 / 4 + w * 2 - margin);\r\n            context.lineTo(homebase * 5 / 4 + w, homebase * 3 / 4 + w - margin);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n            context.fillStyle = \"white\";\r\n            //ホームベース\r\n            context.beginPath();\r\n            context.moveTo(homebase + w * 2 / 3, homebase - w * 2 / 3);\r\n            context.lineTo(homebase - w * 2 / 3, homebase - w * 2 / 3);\r\n            context.lineTo(homebase - w * 2 / 3, homebase + w / 3);\r\n            context.lineTo(homebase, homebase + w);\r\n            context.lineTo(homebase + w * 2 / 3, homebase + w / 3);\r\n            context.closePath();\r\n            context.fill();\r\n            context.stroke();\r\n\r\n\r\n            //打球\r\n            context.beginPath();\r\n            context.moveTo(homebase, homebase);\r\n\r\n            // let flag = 2;   //１が直線、２がフライ、3がゴロ\r\n\r\n            if (flag === 1) {\r\n                console.log(\"flag1\")\r\n                context.lineTo(canvasX1, canvasY1)\r\n            }\r\n            if (flag === 2) {\r\n                let start = { x: 500, y: 500 };\r\n                let cp = { x: 500, y: start.y / 5 * 3 };    //ここで曲がり具合調整\r\n                console.log(\"flag2\")\r\n                context.quadraticCurveTo(cp.x, cp.y, canvasX1, canvasY1);\r\n            }\r\n            if (flag === 3) {\r\n                console.log(\"flag3\")\r\n                drawWaveLine(500, 500, canvasX1, canvasY1, 20, 20, \"red\", context);\r\n            }\r\n\r\n            context.strokeStyle = \"red\";\r\n            context.lineWidth = 5;\r\n            context.stroke();\r\n\r\n            //setLoaded(true)\r\n            //}\r\n\r\n\r\n\r\n\r\n            // 波線描画\r\n            // 0度状態でキャンバス中心〜マウス座標までの距離分の波線を描画して、マウス座標との角度分、回転する\r\n\r\n            function drawWaveLine(x, y, mx, my, amplitude, waveLen, color, ctx) {\r\n                const BEGIN = 0, CTRL = 1, END = 2;\r\n                const x1 = 0, y1 = 1;\r\n                console.log(\"関数内\")\r\n                var distance = calcDistance(x, y, mx, my);\r\n                var cycle = Math.floor(distance / waveLen);\r\n                var ps = [[x, y], [0, 0], [x, y]];\r\n\r\n                ctx.save();\r\n                ctx.strokeStyle = color;\r\n                ctx.beginPath();\r\n\r\n                ctx.moveTo(ps[BEGIN][x1], ps[BEGIN][y1]);\r\n\r\n                var rad = calcRadian(x, y, mx, my);\r\n                if (0 !== rad) {\r\n                    ctx.translate(x, y);\r\n                    ctx.rotate(rad);\r\n                    ctx.translate(-x, -y);\r\n                }\r\n\r\n                for (var i = 0; i < cycle; i++) {\r\n                    ps[END][x1] += waveLen;\r\n                    ps[CTRL][x1] = ps[BEGIN][x1] + ((ps[END][x1] - ps[BEGIN][x1]) * 0.5);\r\n                    ps[CTRL][y1] = ps[BEGIN][y1] + ((i % 2 !== 0) ? -amplitude : amplitude);\r\n\r\n                    ctx.quadraticCurveTo(ps[CTRL][x1], ps[CTRL][y1], ps[END][x1], ps[END][y1]);\r\n\r\n                    ps[BEGIN][x1] = ps[END][x1];\r\n                    ps[BEGIN][y1] = ps[END][y1];\r\n                }\r\n\r\n                ps[END][x1] += distance - calcDistance(x, y, ps[END][x1], ps[END][y1]);\r\n                ps[CTRL][x1] = ps[BEGIN][x1] + ((ps[END][x1] - ps[BEGIN][x1]) * 0.5);\r\n                ps[CTRL][y1] = ps[BEGIN][y1] + (((cycle) % 2 !== 0) ? -amplitude : amplitude);\r\n\r\n                ctx.quadraticCurveTo(ps[CTRL][x1], ps[CTRL][y1], ps[END][x1], ps[END][y1]);\r\n\r\n                ctx.stroke();\r\n                ctx.restore();\r\n            }\r\n\r\n            // 2点間座標からラジアン算出\r\n            function calcRadian(x, y, mx, my) {\r\n                return Math.atan2(my - y, mx - x);\r\n            }\r\n\r\n            // 2点間座標の距離算出\r\n            function calcDistance(x, y, mx, my) {\r\n                return Math.hypot(my - y, mx - x);\r\n            }\r\n        }\r\n    }, [canvasX1, canvasY1, flag, runnerCountState])\r\n\r\n    useEffect(() => {\r\n        //データベースからデータをもらうために呼び出す\r\n        setBatter(setBattingOrder, setBattingOrder2, urlSchoolId, urlSchoolId2, urlGameId, nowPlayingMember, setNowPlayingMember)\r\n        loadRegisteredMember(setRegisteredMember1, urlTournamentId, urlSchoolId)\r\n        loadRegisteredMember(setRegisteredMember2, urlTournamentId, urlSchoolId2)\r\n\r\n        //テーブル存在確認\r\n        TmpTableCheck(urlGameId, TmpTableCreate, TmpDasekiCall)\r\n        //一時打席情報登録用のテーブル作成\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"InputPlayGame\">\r\n            <h1>速報入力画面</h1>\r\n            <div className=\"parts\">\r\n                <div className=\"scoreBoard\">\r\n                    {scoreBoard(scoreState, nowIningState, urlSchoolName, urlSchoolName2)}\r\n                </div>\r\n                <div className=\"optionButtons\">\r\n                </div>\r\n                <div className=\"outCountsAndRunnerCounts\">\r\n                    {outCount(nowOutCountState, setNowOutCountState)}\r\n                    {runnerCount(runnerCountState, setRunnerCountState)}\r\n                </div>\r\n                <div className=\"BatterAndPitcher\">\r\n\r\n                </div>\r\n                <div className=\"BatterPitcher\">\r\n                    {/* 選手を表示するためのプルダウン */}\r\n                    <PullDownMember\r\n                        battingOrder={battingOrder}\r\n                        battingOrder2={battingOrder2}\r\n                        setBattingOrder={setBattingOrder}\r\n                        registeredMember1={registeredMember1}\r\n                        registeredMember2={registeredMember2}\r\n                        nowIningState={nowIningState}\r\n                        nowPlayingMember={nowPlayingMember}\r\n                        setNowPlayingMember={setNowPlayingMember}\r\n                    />\r\n                </div>\r\n                <div className=\"freeWrite\">\r\n                    {freeWrite(freeWriteState, setFreeWriteState, freeWriteModeFlag, setFreeWriteModeFlag)}\r\n                </div>\r\n\r\n                <PullDown\r\n                    nowPosition={nowPosition}\r\n                    setNowPosition={setNowPosition}\r\n                    setcanvasX1={setcanvasX1}\r\n                    setcanvasY1={setcanvasY1}\r\n                    setFlag={setFlag}\r\n                    setFreeWriteState={setFreeWriteState}\r\n                />\r\n\r\n                <div className=\"diamond\">\r\n\r\n                    <canvas width=\"800\" height=\"800\" id=\"canvas\" className='diamondPng'></canvas>\r\n                </div>\r\n                <div className=\"Buttons\">\r\n                    <div className=\"baseballButtons\">\r\n                        {BaseballButton(addScoreState, setAddScoreState)}\r\n                    </div>\r\n                    <div className=\"updateButton\">\r\n                        {/* ポップアップ*/}\r\n                        <Popupfield\r\n                            nowIningState={nowIningState} //今が何回なのか\r\n                            setNowIningState={setNowIningState} //今が何回なのかの変更関数\r\n                            addScoreState={addScoreState}\r\n                            setAddScoreState={setAddScoreState}\r\n                            scoreState={scoreState}\r\n                            setScoreState={setScoreState}\r\n                            nowOutCountState={nowOutCountState}\r\n                            setNowOutCountState={setNowOutCountState}\r\n                            DasekiRegister={DasekiRegister}\r\n                            urlGameId = {urlGameId}        \r\n                            urlSchoolId = {urlSchoolId}\r\n                            urlSchoolId2 = {urlSchoolId2}     \r\n                            nowPlayingMember = {nowPlayingMember}         \r\n                            battingOrder = {battingOrder}\r\n                            battingOrder2 = {battingOrder2}  \r\n                            runnerCountState = {runnerCountState}    \r\n                            freeWriteState = {freeWriteState}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default InputPlayGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
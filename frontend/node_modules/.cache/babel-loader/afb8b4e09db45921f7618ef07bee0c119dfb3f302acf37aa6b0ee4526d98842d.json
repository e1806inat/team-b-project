{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morim\\\\Desktop\\\\my_folder\\\\school\\\\lesson\\\\ensyu\\\\code\\\\team-b-project\\\\frontend\\\\src\\\\AllPage\\\\InputAll\\\\PreInput\\\\InputSchoolPage\\\\InputSchool.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Hyoji } from './comInputSchool/Hyoji';\nimport { CheckBoxList } from './comInputSchool/CheckBoxList1';\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\nimport { OptionButton } from \"../../../OtherPage/optionFunc/OptionButton\";\nimport EditSchoolPopup from \"./comInputSchool/EditSchoolPopup/EditSchoolPopup\";\nimport './InputSchool.css';\n\n//バックエンドのurlを取得\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\n\n//次回追加ボタン押した後に、高校再表示させるのをやる\n\n//データを送る\nconst sendSchool = (useSchools, urlTournamentId, setUseSchools) => {\n  let toSendSchool = [];\n  //チェックされているものだけの配列を作る\n  useSchools.map(school => {\n    if (school.IsCheck) {\n      toSendSchool = [...toSendSchool, {\n        tournament_id: urlTournamentId,\n        school_name: school.school_name,\n        school_id: school.school_id,\n        seed: school.seed\n      }];\n    }\n  });\n  fetch(backendUrl + \"/school/school_call_p\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      tournament_id: urlTournamentId\n    })\n  }).then(response => response.json()).then(receivedResistered => {\n    //既に登録されているものと被っていないかチェック\n    let toSendSchool2 = [];\n    toSendSchool.map(v => {\n      if (receivedResistered.some(u => v.school_name === u.school_name)) console.log(\"「\" + v.school_name + \"」は名前が被っています\");else {\n        toSendSchool2 = [...toSendSchool2, v];\n      }\n    });\n    console.log(toSendSchool2);\n\n    //空っぽの配列は送れないように対策\n    if (toSendSchool2.length !== 0) {\n      fetch(backendUrl + \"/school/participants_register\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        //body: JSON.stringify({ email:login_id , password:login_ps }),\n        body: JSON.stringify(toSendSchool2)\n      }).then(response => response.text()).then(data => {\n        if (data === \"OK\") {\n          readSchool(setUseSchools, urlTournamentId);\n        }\n      });\n    }\n  });\n};\n\n//データベースから初期項目を読み出し\nconst readSchool = (setUseSchools, urlTournamentId) => {\n  fetch(backendUrl + \"/school/school_call\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.json()).then(receivedAllSchool => {\n    // enchantCheck(receivedAllSchool, setUseSchools);\n    loadRegisteredSchool(urlTournamentId, receivedAllSchool, setUseSchools);\n  });\n};\n\n//対象の大会の学校情報呼び出し\nconst loadRegisteredSchool = (urlTournamentId, receivedAllSchool, setUseSchools) => {\n  fetch(backendUrl + \"/school/school_call_p\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      tournament_id: urlTournamentId\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.length === 0) {\n      console.log(\"登録されていません\");\n      enchantCheck(receivedAllSchool, setUseSchools, []);\n    } else {\n      console.log(data);\n      enchantCheck(receivedAllSchool, setUseSchools, data);\n    }\n  });\n};\n\n//checkを付与\nconst enchantCheck = (receivedAllSchool, setUseSchools, data) => {\n  let setUseSchools3 = [];\n  receivedAllSchool.map(school => {\n    if (data.some(u => u.school_id === school.school_id)) {\n      setUseSchools3 = [...setUseSchools3, {\n        school_name: school.school_name,\n        school_id: school.school_id,\n        IsCheck: true,\n        seed: 0\n      }];\n    } else {\n      setUseSchools3 = [...setUseSchools3, {\n        school_name: school.school_name,\n        school_id: school.school_id,\n        IsCheck: false,\n        seed: 0\n      }];\n    }\n  });\n  setUseSchools(setUseSchools3);\n};\n\n//１つの高校を追加する\nconst addSchool = (setUseSchools, addSchoolName, urlTournamentId, useSchools) => {\n  if (useSchools.some(v => v.school_name === addSchoolName)) console.log(\"高校名がかぶっています\");else {\n    fetch(backendUrl + \"/school/school_register\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        school_name: addSchoolName\n      })\n    }).then(response => response.text()).then(data => {\n      if (data === \"OK\") {\n        readSchool(setUseSchools, urlTournamentId);\n      }\n    });\n  }\n};\n\n//高校を編集する\nconst EditSchool = (school_id, school_name, setUseSchools, urlTournamentId) => {\n  fetch(backendUrl + \"/school/school_edit\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      school_id: school_id,\n      school_name: school_name\n    })\n  }).then(response => response.text()).then(data => {\n    if (data === \"OK\") {\n      readSchool(setUseSchools, urlTournamentId);\n    }\n  });\n};\n\n// 学校情報を削除\n_c = EditSchool;\nconst DeleteSchool = (school_id, school_name, setUseSchools, urlTournamentId) => {\n  fetch(backendUrl + \"/school/school_delete\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      school_id: school_id,\n      school_name: school_name\n    })\n  }).then(response => response.text()).then(data => {\n    if (data === \"OK\") {\n      readSchool(setUseSchools, urlTournamentId);\n    }\n  });\n};\n_c2 = DeleteSchool;\nexport const InputSchool = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const urlTournamentName = searchParams.get(\"urlTournamentName\");\n  const urlTournamentId = searchParams.get(\"urlTournamentId\");\n\n  //ページ遷移用\n  const navigate = useNavigate();\n  const PageTransition = url => {\n    navigate(url);\n  };\n\n  //const { Schools } = require(\"../../../../DB/Schools\"); //分割代入\n  let Schools = [];\n\n  // const [receivedResistered, setReeceivedResistered] = useState([])\n\n  const [isCheckBoxMode, setIsCheckBoxMode] = useState(!true);\n  const ref = useRef();\n  const [useSchools, setUseSchools] = useState([]);\n\n  //編集モードかそうでないか\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  //\n\n  useEffect(() => {\n    //全学校読み出し\n    readSchool(setUseSchools, urlTournamentId);\n    //既に登録されている学校読み出し\n    // loadRegisteredSchool(urlTournamentId)\n  }, []);\n  const handleClick = () => {\n    setUseSchools([...useSchools, {\n      school_name: ref.current.value,\n      school_id: null,\n      IsCheck: true,\n      seed: 0\n    }]);\n  };\n  const handleCheckBox = () => {\n    setIsCheckBoxMode(!isCheckBoxMode);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"aa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n      TitleText: \"高校入力選択画面\",\n      PageTransition: PageTransition,\n      valueUrl: -1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"BackButton\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: '/home/input_mode/',\n          className: \"BackButton\",\n          children: \"\\uFF1C\\u623B\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 40\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournamentName\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: urlTournamentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InputSchool\",\n      children: [\"\\u5B66\\u6821\\u30FB\\u30C1\\u30FC\\u30E0\\u540D \", /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addSchool(setUseSchools, ref.current.value, urlTournamentId, useSchools),\n        children: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), !isEditMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ButtonArea\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"checkButton\",\n          onClick: handleCheckBox,\n          children: \"\\u9AD8\\u6821\\u9078\\u629E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ButtonArea\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"checkButton\",\n          onClick: () => {\n            setIsEditMode(!isEditMode);\n          },\n          children: \"\\u7DE8\\u96C6\\u30E2\\u30FC\\u30C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), !isCheckBoxMode && Hyoji(useSchools, navigate, urlTournamentName, urlTournamentId, isEditMode, EditSchoolPopup, EorDcheckBox, setEorDCheckbox, EditSchool, DeleteSchool, readSchool, setUseSchools), isCheckBoxMode && CheckBoxList(useSchools, setUseSchools), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ButtonArea\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"decisionButton\",\n          onClick: () => sendSchool(useSchools, urlTournamentId, setUseSchools),\n          children: \"\\u9AD8\\u6821\\u540D\\u767B\\u9332\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isEditMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ButtonArea\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"checkButton\",\n          onClick: () => {\n            setIsEditMode(!isEditMode);\n          },\n          children: \"\\u7DE8\\u96C6\\u30E2\\u30FC\\u30C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), Hyoji(useSchools, navigate, urlTournamentName, urlTournamentId, isEditMode, EditSchoolPopup, EorDcheckBox, setEorDCheckbox, EditSchool, DeleteSchool, readSchool, setUseSchools)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(InputSchool, \"DPiSdXViu70dWHtLvYuLMFvDw7w=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c3 = InputSchool;\nexport default InputSchool;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"EditSchool\");\n$RefreshReg$(_c2, \"DeleteSchool\");\n$RefreshReg$(_c3, \"InputSchool\");","map":{"version":3,"names":["React","useState","useRef","Hyoji","CheckBoxList","Link","useNavigate","useSearchParams","useEffect","TitleBar","OptionButton","EditSchoolPopup","backendUrl","require","sendSchool","useSchools","urlTournamentId","setUseSchools","toSendSchool","map","school","IsCheck","tournament_id","school_name","school_id","seed","fetch","method","mode","headers","body","JSON","stringify","then","response","json","receivedResistered","toSendSchool2","v","some","u","console","log","length","text","data","readSchool","receivedAllSchool","loadRegisteredSchool","enchantCheck","setUseSchools3","addSchool","addSchoolName","EditSchool","DeleteSchool","InputSchool","searchParams","urlTournamentName","get","navigate","PageTransition","url","Schools","isCheckBoxMode","setIsCheckBoxMode","ref","isEditMode","setIsEditMode","handleClick","current","value","handleCheckBox","EorDcheckBox","setEorDCheckbox"],"sources":["C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project/frontend/src/AllPage/InputAll/PreInput/InputSchoolPage/InputSchool.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Hyoji } from './comInputSchool/Hyoji';\r\nimport { CheckBoxList } from './comInputSchool/CheckBoxList1';\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { TitleBar } from \"../../../OtherPage/TitleBar/TitleBar\";\r\nimport { OptionButton } from \"../../../OtherPage/optionFunc/OptionButton\"\r\n\r\nimport EditSchoolPopup from \"./comInputSchool/EditSchoolPopup/EditSchoolPopup\"\r\n\r\nimport './InputSchool.css';\r\n\r\n//バックエンドのurlを取得\r\nconst backendUrl = require(\"../../../../DB/communication\").backendUrl;\r\n\r\n//次回追加ボタン押した後に、高校再表示させるのをやる\r\n\r\n//データを送る\r\nconst sendSchool = (useSchools, urlTournamentId, setUseSchools) => {\r\n  let toSendSchool = []\r\n  //チェックされているものだけの配列を作る\r\n  useSchools.map((school) => {\r\n    if (school.IsCheck) {\r\n      toSendSchool = [...toSendSchool,\r\n      {\r\n        tournament_id: urlTournamentId,\r\n        school_name: school.school_name,\r\n        school_id: school.school_id,\r\n        seed: school.seed\r\n      }]\r\n    }\r\n\r\n  })\r\n\r\n  fetch(backendUrl + \"/school/school_call_p\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ tournament_id: urlTournamentId }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((receivedResistered) => {\r\n\r\n      //既に登録されているものと被っていないかチェック\r\n      let toSendSchool2 = []\r\n      toSendSchool.map((v) => {\r\n        if (receivedResistered.some((u) => v.school_name === u.school_name))\r\n          console.log(\"「\" + v.school_name + \"」は名前が被っています\")\r\n        else { toSendSchool2 = [...toSendSchool2, v]; }\r\n      })\r\n      console.log(toSendSchool2)\r\n\r\n      //空っぽの配列は送れないように対策\r\n      if (toSendSchool2.length !== 0) {\r\n        fetch(backendUrl + \"/school/participants_register\", {\r\n          method: \"POST\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          //body: JSON.stringify({ email:login_id , password:login_ps }),\r\n          body: JSON.stringify(toSendSchool2),\r\n        })\r\n          .then((response) => response.text())\r\n          .then((data) => {\r\n            if (data === \"OK\") {\r\n              readSchool(setUseSchools, urlTournamentId)\r\n            }\r\n          })\r\n      }\r\n\r\n    })\r\n}\r\n\r\n\r\n//データベースから初期項目を読み出し\r\nconst readSchool = (setUseSchools, urlTournamentId) => {\r\n  fetch(backendUrl + \"/school/school_call\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((receivedAllSchool) => {\r\n\r\n      // enchantCheck(receivedAllSchool, setUseSchools);\r\n      loadRegisteredSchool(urlTournamentId, receivedAllSchool, setUseSchools)\r\n    })\r\n}\r\n\r\n\r\n//対象の大会の学校情報呼び出し\r\nconst loadRegisteredSchool = (urlTournamentId, receivedAllSchool, setUseSchools) => {\r\n\r\n\r\n  fetch(backendUrl + \"/school/school_call_p\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ tournament_id: urlTournamentId }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.length === 0) {\r\n        console.log(\"登録されていません\")\r\n        enchantCheck(receivedAllSchool, setUseSchools, [])\r\n      }\r\n      else {\r\n        console.log(data);\r\n        enchantCheck(receivedAllSchool, setUseSchools, data)\r\n      }\r\n    })\r\n}\r\n\r\n\r\n//checkを付与\r\nconst enchantCheck = (receivedAllSchool, setUseSchools, data) => {\r\n  let setUseSchools3 = []\r\n  receivedAllSchool.map((school) => {\r\n    if (data.some((u) => u.school_id === school.school_id)) {\r\n      setUseSchools3 = (\r\n        [...setUseSchools3, {\r\n          school_name: school.school_name,\r\n          school_id: school.school_id,\r\n          IsCheck: true,\r\n          seed: 0\r\n        }])\r\n    }\r\n    else {\r\n      setUseSchools3 = (\r\n        [...setUseSchools3, {\r\n          school_name: school.school_name,\r\n          school_id: school.school_id,\r\n          IsCheck: false,\r\n          seed: 0\r\n        }])\r\n    }\r\n\r\n  })\r\n  setUseSchools(setUseSchools3)\r\n}\r\n\r\n\r\n//１つの高校を追加する\r\nconst addSchool = (setUseSchools, addSchoolName, urlTournamentId, useSchools) => {\r\n  if (useSchools.some((v) => v.school_name === addSchoolName)) console.log(\"高校名がかぶっています\")\r\n  else {\r\n    fetch(backendUrl + \"/school/school_register\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ school_name: addSchoolName }),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        if (data === \"OK\") {\r\n          readSchool(setUseSchools, urlTournamentId)\r\n        }\r\n      })\r\n  }\r\n\r\n}\r\n\r\n//高校を編集する\r\nconst EditSchool = (school_id, school_name, setUseSchools, urlTournamentId) => {\r\n  fetch(backendUrl + \"/school/school_edit\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ school_id: school_id, school_name: school_name }),\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => {\r\n      if (data === \"OK\") {\r\n        readSchool(setUseSchools, urlTournamentId)\r\n      }\r\n    })\r\n}\r\n\r\n// 学校情報を削除\r\nconst DeleteSchool = (school_id, school_name, setUseSchools, urlTournamentId) => {\r\n  fetch(backendUrl + \"/school/school_delete\", {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ school_id: school_id, school_name: school_name }),\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => {\r\n      if (data === \"OK\") {\r\n        readSchool(setUseSchools, urlTournamentId)\r\n      }\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport const InputSchool = () => {\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const urlTournamentName = searchParams.get(\"urlTournamentName\")\r\n  const urlTournamentId = searchParams.get(\"urlTournamentId\")\r\n\r\n  //ページ遷移用\r\n  const navigate = useNavigate()\r\n  const PageTransition = (url) => {\r\n    navigate(url)\r\n  }\r\n\r\n  //const { Schools } = require(\"../../../../DB/Schools\"); //分割代入\r\n  let Schools = []\r\n\r\n  // const [receivedResistered, setReeceivedResistered] = useState([])\r\n\r\n  const [isCheckBoxMode, setIsCheckBoxMode] = useState(!true)\r\n  const ref = useRef()\r\n  const [useSchools, setUseSchools] = useState([])\r\n\r\n  //編集モードかそうでないか\r\n  const [isEditMode, setIsEditMode] = useState(false)\r\n\r\n  //\r\n\r\n  useEffect(() => {\r\n    //全学校読み出し\r\n    readSchool(setUseSchools, urlTournamentId);\r\n    //既に登録されている学校読み出し\r\n    // loadRegisteredSchool(urlTournamentId)\r\n  }, [])\r\n\r\n  const handleClick = () => {\r\n    setUseSchools([...useSchools,\r\n    { school_name: ref.current.value, school_id: null, IsCheck: true, seed: 0 }\r\n    ])\r\n  }\r\n\r\n  const handleCheckBox = () => {\r\n    setIsCheckBoxMode(!isCheckBoxMode)\r\n    return (\r\n      <button>aa</button>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <TitleBar\r\n        TitleText={\"高校入力選択画面\"}\r\n        PageTransition={PageTransition}\r\n        valueUrl={-1}\r\n      />\r\n      <OptionButton />\r\n\r\n      <div className=\"top\">\r\n        <button className=\"BackButton\"><Link to={'/home/input_mode/'} className=\"BackButton\">＜戻る</Link> </button>\r\n      </div>\r\n\r\n      <div className=\"tournamentName\">\r\n        <h3>{urlTournamentName}</h3>\r\n      </div>\r\n      <div className=\"InputSchool\">\r\n        学校・チーム名 <input ref={ref} ></input>\r\n        <button onClick={() => addSchool(setUseSchools, ref.current.value, urlTournamentId, useSchools)}>追加</button>\r\n      </div>\r\n      <br />\r\n\r\n      {/* <button onClick={handleCheckBox}>チェックボックス入力</button>\r\n      <button onClick={() => sendSchool(useSchools, urlTournamentId, Schools, setUseSchools)}>高校名登録</button> */}\r\n\r\n      {/* 編集モードでないとき */}\r\n      {!isEditMode &&\r\n        <>\r\n          {/* 高校選択ボタン */}\r\n          <div className=\"ButtonArea\">\r\n            <button id=\"checkButton\" onClick={handleCheckBox}>高校選択</button>\r\n          </div>\r\n\r\n          {/* 編集モード切り替えボタン */}\r\n          <div className=\"ButtonArea\">\r\n            <button id=\"checkButton\" onClick={() => { setIsEditMode(!isEditMode) }}>編集モード</button>\r\n          </div>\r\n\r\n          <hr></hr>\r\n\r\n          {!isCheckBoxMode && Hyoji(useSchools, navigate, urlTournamentName, urlTournamentId, isEditMode, EditSchoolPopup,\r\n            EorDcheckBox,setEorDCheckbox, EditSchool, DeleteSchool, readSchool, setUseSchools)}\r\n          {isCheckBoxMode && CheckBoxList(useSchools, setUseSchools)}<br />\r\n\r\n          {/* 登録ボタン */}\r\n          <div className=\"ButtonArea\">\r\n            <button className=\"decisionButton\" onClick={() => sendSchool(useSchools, urlTournamentId, setUseSchools)}>高校名登録</button>\r\n          </div>\r\n        </>\r\n      }\r\n\r\n      {/* 編集モード中 */}\r\n      {isEditMode &&\r\n        <>\r\n          {/* 編集モード切り替えボタン */}\r\n          <div className=\"ButtonArea\">\r\n            <button id=\"checkButton\" onClick={() => { setIsEditMode(!isEditMode) }}>編集モード</button>\r\n          </div>\r\n\r\n          <hr></hr>\r\n          {Hyoji(useSchools, navigate, urlTournamentName, urlTournamentId, isEditMode, EditSchoolPopup,\r\n            EorDcheckBox,setEorDCheckbox, EditSchool, DeleteSchool, readSchool, setUseSchools\r\n            )}\r\n        </>\r\n      }\r\n\r\n      <hr></hr>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default InputSchool;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
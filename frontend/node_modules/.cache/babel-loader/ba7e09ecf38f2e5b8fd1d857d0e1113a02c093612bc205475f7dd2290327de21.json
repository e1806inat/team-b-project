{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morim\\\\Desktop\\\\my_folder\\\\school\\\\lesson\\\\ensyu\\\\code\\\\team-b-project\\\\frontend\\\\src\\\\AllPage\\\\InputAll\\\\PreInput\\\\InputMemberPage\\\\functions\\\\MemberPopup\\\\MemberPopup.jsx\";\nimport React from \"react\";\n\n//メインのDOMの中で配置するサブ部品のような要素\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Popup extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup_field\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup_inner_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: this.props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u60C5\\u5831\\u304C\\u66F4\\u65B0\\u3055\\u308C\\u307E\\u3059\\u304C\\u3088\\u308D\\u3057\\u3044\\u3067\\u3057\\u3087\\u3046\\u304B\\uFF1F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button_style\",\n          onClick: this.props.closePopup,\n          children: \"\\u3044\\u3044\\u3048\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nbsp\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button_style\",\n          onClick: () => {\n            // this.props.closePopup()\n            this.props.selectedMembers.map(() => {});\n\n            // this.props.handleSousin(\n            //   this.props.copyMember,\n            //   this.props.selectedMember,\n            //   this.props.urlTournamentId,\n            //   this.props.uniformNumberArray\n            // )\n            this.props.PageTransition(-1);\n          },\n          children: \"\\u306F\\u3044\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n//コンポーネントの内部に別のコンポーネントを持つことができる　ここではPopupというコンポ―ネントがある\nclass MemberPopup extends React.Component {\n  //初期設定の要素をconstructorに記述する\n  //bind(this)をしないと呼び出し先のthisがundefinedになってしまう\n  constructor(props, context) {\n    super();\n    this.state = {\n      showPopup: false\n    };\n    this.togglePopup = this.togglePopup.bind(this); //重要\n  }\n  //togglePopupによってthis.state.showPopupの値を反転させる\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n  //renderの中に設置したいメインのDOM(部品）を記述していく\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.togglePopup();\n        },\n        className: \"sendButton\",\n        children: \"\\u767B\\u9332\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }, this), this.state.showPopup ? /*#__PURE__*/_jsxDEV(Popup, {\n        text: \"\\u78BA\\u8A8D\\u753B\\u9762\",\n        closePopup: this.togglePopup,\n        handleSousin: this.props.handleSousin,\n        copyMember: this.props.copyMember,\n        selectedMember: this.props.selectedMember,\n        urlTournamentId: this.props.urlTournamentId,\n        uniformNumberArray: this.props.uniformNumberArray,\n        PageTransition: this.props.PageTransition,\n        selectedMembers: this.props.selectedMembers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n//配置する部品の決まり文句\nexport default MemberPopup;","map":{"version":3,"names":["React","Popup","Component","render","props","text","closePopup","selectedMembers","map","PageTransition","MemberPopup","constructor","context","state","showPopup","togglePopup","bind","setState","handleSousin","copyMember","selectedMember","urlTournamentId","uniformNumberArray"],"sources":["C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project/frontend/src/AllPage/InputAll/PreInput/InputMemberPage/functions/MemberPopup/MemberPopup.jsx"],"sourcesContent":["import React from \"react\";\n\n//メインのDOMの中で配置するサブ部品のような要素\nclass Popup extends React.Component {\n  render() {\n    return (\n      <div className=\"popup_field\">\n        <div className=\"popup_inner_field\">\n          <div className=\"title\">{this.props.text}</div>\n          <p>情報が更新されますがよろしいでしょうか？</p>\n          <button className=\"button_style\" onClick={this.props.closePopup}>いいえ</button>\n          <nbsp></nbsp>\n          <button className=\"button_style\" onClick={() => {\n            // this.props.closePopup()\n            this.props.selectedMembers.map(()=> {\n              \n            })\n            \n\n            // this.props.handleSousin(\n            //   this.props.copyMember,\n            //   this.props.selectedMember,\n            //   this.props.urlTournamentId,\n            //   this.props.uniformNumberArray\n            // )\n            this.props.PageTransition(-1)\n          }\n          }>はい</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n//コンポーネントの内部に別のコンポーネントを持つことができる　ここではPopupというコンポ―ネントがある\nclass MemberPopup extends React.Component {\n  //初期設定の要素をconstructorに記述する\n  //bind(this)をしないと呼び出し先のthisがundefinedになってしまう\n  constructor(props, context) {\n    super();\n    this.state = { showPopup: false };\n    this.togglePopup = this.togglePopup.bind(this);//重要\n  }\n  //togglePopupによってthis.state.showPopupの値を反転させる\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup,\n    });\n  }\n  //renderの中に設置したいメインのDOM(部品）を記述していく\n  render() {\n    return (\n      <div>\n\n        {<button\n          onClick={() => { this.togglePopup() }}\n          className=\"sendButton\"\n        >登録\n        </button>}\n\n        {/* this.state.PopupがtrueであればPopupウィンドウを開く */}\n        {this.state.showPopup ? (\n          <Popup text=\"確認画面\" closePopup={this.togglePopup}\n            handleSousin={this.props.handleSousin}\n            copyMember={this.props.copyMember}\n            selectedMember={this.props.selectedMember}\n            urlTournamentId={this.props.urlTournamentId}\n            uniformNumberArray={this.props.uniformNumberArray} \n            PageTransition = {this.props.PageTransition}\n            selectedMembers = {this.props.selectedMembers}\n            />\n        ) : null}\n      </div>\n    );\n  }\n}\n\n//配置する部品の決まり文句\nexport default MemberPopup;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA;AACA,MAAMC,KAAK,SAASD,KAAK,CAACE,SAAS,CAAC;EAClCC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,aAAa;MAAA,uBAC1B;QAAK,SAAS,EAAC,mBAAmB;QAAA,wBAChC;UAAK,SAAS,EAAC,OAAO;UAAA,UAAE,IAAI,CAACC,KAAK,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAO,eAC9C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA2B,eAC3B;UAAQ,SAAS,EAAC,cAAc;UAAC,OAAO,EAAE,IAAI,CAACD,KAAK,CAACE,UAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eAC7E;UAAA;UAAA;UAAA;QAAA,QAAa,eACb;UAAQ,SAAS,EAAC,cAAc;UAAC,OAAO,EAAE,MAAM;YAC9C;YACA,IAAI,CAACF,KAAK,CAACG,eAAe,CAACC,GAAG,CAAC,MAAK,CAEpC,CAAC,CAAC;;YAGF;YACA;YACA;YACA;YACA;YACA;YACA,IAAI,CAACJ,KAAK,CAACK,cAAc,CAAC,CAAC,CAAC,CAAC;UAC/B,CACC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA;IACT;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;;AAEA;AACA,MAAMC,WAAW,SAASV,KAAK,CAACE,SAAS,CAAC;EACxC;EACA;EACAS,WAAW,CAACP,KAAK,EAAEQ,OAAO,EAAE;IAC1B,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MAAEC,SAAS,EAAE;IAAM,CAAC;IACjC,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACjD;EACA;EACAD,WAAW,GAAG;IACZ,IAAI,CAACE,QAAQ,CAAC;MACZH,SAAS,EAAE,CAAC,IAAI,CAACD,KAAK,CAACC;IACzB,CAAC,CAAC;EACJ;EACA;EACAX,MAAM,GAAG;IACP,oBACE;MAAA,wBAEG;QACC,OAAO,EAAE,MAAM;UAAE,IAAI,CAACY,WAAW,EAAE;QAAC,CAAE;QACtC,SAAS,EAAC,YAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEf,EAGR,IAAI,CAACF,KAAK,CAACC,SAAS,gBACnB,QAAC,KAAK;QAAC,IAAI,EAAC,0BAAM;QAAC,UAAU,EAAE,IAAI,CAACC,WAAY;QAC9C,YAAY,EAAE,IAAI,CAACX,KAAK,CAACc,YAAa;QACtC,UAAU,EAAE,IAAI,CAACd,KAAK,CAACe,UAAW;QAClC,cAAc,EAAE,IAAI,CAACf,KAAK,CAACgB,cAAe;QAC1C,eAAe,EAAE,IAAI,CAAChB,KAAK,CAACiB,eAAgB;QAC5C,kBAAkB,EAAE,IAAI,CAACjB,KAAK,CAACkB,kBAAmB;QAClD,cAAc,EAAI,IAAI,CAAClB,KAAK,CAACK,cAAe;QAC5C,eAAe,EAAI,IAAI,CAACL,KAAK,CAACG;MAAgB;QAAA;QAAA;QAAA;MAAA,QAC5C,GACF,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAEV;AACF;;AAEA;AACA,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
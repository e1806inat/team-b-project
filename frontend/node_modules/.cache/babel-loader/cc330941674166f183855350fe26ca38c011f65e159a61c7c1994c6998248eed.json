{"ast":null,"code":"export const battedBall = (context, canvasX1, canvasY1, flag) => {\n  const homebase = 520;\n  const h = 70;\n  const l = -110;\n  context.beginPath();\n  context.moveTo(homebase + l, homebase + h);\n\n  //１が直線、２がフライ、3がゴロ、４がヒット\n  if (flag === 1) {\n    console.log(\"flag1\");\n    context.lineTo(canvasX1, canvasY1);\n  }\n  if (flag === 2) {\n    let cp1 = {\n      x: homebase,\n      y: homebase / 5 * 3\n    };\n    let cp2 = {\n      x: (homebase + l) * 11 / 10,\n      y: canvasY1 + l\n    };\n    let cp3 = {\n      x: (homebase + l) * 9 / 10,\n      y: canvasY1 + l\n    };\n    if (canvasY1 > 0.7 * homebase) {\n      context.quadraticCurveTo(cp1.x + l, cp1.y + h, canvasX1, canvasY1);\n    } else if (canvasX1 < homebase + l) {\n      context.quadraticCurveTo(cp2.x, cp2.y, canvasX1, canvasY1);\n    } else {\n      context.quadraticCurveTo(cp3.x, cp3.y, canvasX1, canvasY1);\n    }\n    console.log(\"flag2\");\n  }\n  if (flag === 3) {\n    console.log(\"flag3\");\n    drawWaveLine(homebase + l, homebase + h, canvasX1, canvasY1, 20, 20, \"red\", context);\n  }\n  if (flag === 4) {\n    console.log(\"flag4\");\n    //第一着地点Y座標計算用\n    let a = (homebase + h - canvasY1) / (homebase + l - canvasX1);\n    let b = homebase * (1 - a) + h - l * a;\n    //第一着地点X座標\n    let q1 = canvasX1 + (homebase + l - canvasX1) / 4;\n    let q2 = canvasX1 - (canvasX1 - homebase - l) / 4;\n    //第一着地点カーブ計算用\n    let cp1 = {\n      x: homebase * 11 / 10 + l,\n      y: a * q1 + b\n    };\n    let cp2 = {\n      x: homebase * 9 / 10 + l,\n      y: a * q2 + b\n    };\n    //第二着地点カーブ計算用\n    let cp3 = {\n      x: canvasX1 * 22 / 20,\n      y: canvasY1\n    };\n    let cp4 = {\n      x: canvasX1 * 19 / 20,\n      y: canvasY1\n    };\n    if (canvasX1 < homebase + l) {\n      context.quadraticCurveTo(cp1.x, cp1.y, q1, a * q1 + b);\n      context.quadraticCurveTo(cp3.x, cp3.y, canvasX1, canvasY1);\n    } else {\n      context.quadraticCurveTo(cp2.x, cp2.y, q2, a * q2 + b);\n      context.quadraticCurveTo(cp4.x, cp4.y, canvasX1, canvasY1);\n    }\n  } else {\n    console.log(flag);\n    drawWaveLine(homebase + l, homebase + h, canvasX1, canvasY1, 20, 20, \"red\", context);\n  }\n  context.strokeStyle = \"red\";\n  context.lineWidth = 5;\n  context.stroke();\n\n  // 波線描画\n  // 0度状態でキャンバス中心〜マウス座標までの距離分の波線を描画して、マウス座標との角度分、回転する\n\n  function drawWaveLine(x, y, mx, my, amplitude, waveLen, color, ctx) {\n    const BEGIN = 0,\n      CTRL = 1,\n      END = 2;\n    const x1 = 0,\n      y1 = 1;\n    console.log(\"関数内\");\n    var distance = calcDistance(x, y, mx, my);\n    var cycle = Math.floor(distance / waveLen);\n    var ps = [[x, y], [0, 0], [x, y]];\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(ps[BEGIN][x1], ps[BEGIN][y1]);\n    var rad = calcRadian(x, y, mx, my);\n    if (0 !== rad) {\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.translate(-x, -y);\n    }\n    for (var i = 0; i < cycle; i++) {\n      ps[END][x1] += waveLen;\n      ps[CTRL][x1] = ps[BEGIN][x1] + (ps[END][x1] - ps[BEGIN][x1]) * 0.5;\n      ps[CTRL][y1] = ps[BEGIN][y1] + (i % 2 !== 0 ? -amplitude : amplitude);\n      ctx.quadraticCurveTo(ps[CTRL][x1], ps[CTRL][y1], ps[END][x1], ps[END][y1]);\n      ps[BEGIN][x1] = ps[END][x1];\n      ps[BEGIN][y1] = ps[END][y1];\n    }\n    ps[END][x1] += distance - calcDistance(x, y, ps[END][x1], ps[END][y1]);\n    ps[CTRL][x1] = ps[BEGIN][x1] + (ps[END][x1] - ps[BEGIN][x1]) * 0.5;\n    ps[CTRL][y1] = ps[BEGIN][y1] + (cycle % 2 !== 0 ? -amplitude : amplitude);\n    ctx.quadraticCurveTo(ps[CTRL][x1], ps[CTRL][y1], ps[END][x1], ps[END][y1]);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  // 2点間座標からラジアン算出\n  function calcRadian(x, y, mx, my) {\n    return Math.atan2(my - y, mx - x);\n  }\n\n  // 2点間座標の距離算出\n  function calcDistance(x, y, mx, my) {\n    return Math.hypot(my - y, mx - x);\n  }\n};","map":{"version":3,"names":["battedBall","context","canvasX1","canvasY1","flag","homebase","h","l","beginPath","moveTo","console","log","lineTo","cp1","x","y","cp2","cp3","quadraticCurveTo","drawWaveLine","a","b","q1","q2","cp4","strokeStyle","lineWidth","stroke","mx","my","amplitude","waveLen","color","ctx","BEGIN","CTRL","END","x1","y1","distance","calcDistance","cycle","Math","floor","ps","save","rad","calcRadian","translate","rotate","i","restore","atan2","hypot"],"sources":["C:/Users/morim/Desktop/my_folder/school/lesson/ensyu/code/team-b-project/frontend/src/AllPage/InputAll/Sokuho/SokuhoPlaygame/comSokuho/comCanvas/battedBall.jsx"],"sourcesContent":["export const battedBall = (context,canvasX1,canvasY1,flag) => {\r\n\r\n    const homebase=520;\r\n    const h=70;\r\n    const l=-110;\r\n\r\n    context.beginPath();\r\n    context.moveTo(homebase+l,homebase+h);\r\n\r\n   //１が直線、２がフライ、3がゴロ、４がヒット\r\n    if (flag === 1) {\r\n        console.log(\"flag1\")\r\n        context.lineTo(canvasX1, canvasY1)\r\n    }\r\n    if (flag === 2) {\r\n        let cp1 = { x: homebase, y: homebase / 5 * 3 };\r\n        let cp2 = { x: (homebase+l)*11/10, y: canvasY1+l };\r\n        let cp3 = { x: (homebase+l)*9/10, y: canvasY1+l };\r\n        if(canvasY1>0.7*homebase){\r\n            context.quadraticCurveTo(cp1.x+l, cp1.y+h, canvasX1, canvasY1);\r\n        }\r\n        else if(canvasX1<homebase+l){\r\n            context.quadraticCurveTo(cp2.x, cp2.y, canvasX1, canvasY1);\r\n        }\r\n        else{\r\n            context.quadraticCurveTo(cp3.x, cp3.y, canvasX1, canvasY1);\r\n        }\r\n        console.log(\"flag2\")\r\n        \r\n    }\r\n    if (flag === 3) {\r\n        console.log(\"flag3\")\r\n        drawWaveLine(homebase+l, homebase+h, canvasX1, canvasY1, 20, 20, \"red\", context);\r\n    }\r\n    if (flag === 4) {\r\n        console.log(\"flag4\")\r\n        //第一着地点Y座標計算用\r\n        let a=(homebase+h-canvasY1)/(homebase+l-canvasX1)\r\n        let b=homebase*(1-a)+h-l*a\r\n        //第一着地点X座標\r\n        let q1=canvasX1+(homebase+l-canvasX1)/4\r\n        let q2=canvasX1-(canvasX1-homebase-l)/4\r\n        //第一着地点カーブ計算用\r\n        let cp1 = { x: homebase*11/10+l, y: a*q1+b };\r\n        let cp2 = { x: homebase*9/10+l, y: a*q2+b };\r\n        //第二着地点カーブ計算用\r\n        let cp3 = { x: canvasX1*22/20, y: canvasY1 };\r\n        let cp4 = { x: canvasX1*19/20, y: canvasY1 };\r\n        if(canvasX1<homebase+l){\r\n            context.quadraticCurveTo(cp1.x, cp1.y, q1, a*q1+b)\r\n            context.quadraticCurveTo(cp3.x, cp3.y, canvasX1, canvasY1)\r\n        }\r\n        else{\r\n            context.quadraticCurveTo(cp2.x, cp2.y, q2, a*q2+b)\r\n            context.quadraticCurveTo(cp4.x, cp4.y, canvasX1, canvasY1)\r\n        }\r\n        \r\n    }\r\n    else {\r\n        console.log(flag)\r\n        drawWaveLine(homebase+l, homebase+h, canvasX1, canvasY1, 20, 20, \"red\", context);\r\n    }\r\n\r\n    \r\n    context.strokeStyle = \"red\";\r\n    context.lineWidth = 5;\r\n    context.stroke();\r\n\r\n\r\n    // 波線描画\r\n    // 0度状態でキャンバス中心〜マウス座標までの距離分の波線を描画して、マウス座標との角度分、回転する\r\n    \r\n    function drawWaveLine(x, y, mx, my, amplitude, waveLen, color, ctx) {\r\n        const BEGIN = 0, CTRL = 1, END = 2;\r\n        const x1 = 0, y1 = 1;\r\n        console.log(\"関数内\")\r\n        var distance = calcDistance(x, y, mx, my);\r\n        var cycle = Math.floor(distance / waveLen);\r\n        var ps = [[x, y], [0, 0], [x, y]];\r\n\r\n        ctx.save();\r\n        ctx.strokeStyle = color;\r\n        ctx.beginPath();\r\n\r\n        ctx.moveTo(ps[BEGIN][x1], ps[BEGIN][y1]);\r\n\r\n        var rad = calcRadian(x, y, mx, my);\r\n        if (0 !== rad) {\r\n            ctx.translate(x, y);\r\n            ctx.rotate(rad);\r\n            ctx.translate(-x, -y);\r\n        }\r\n\r\n        for (var i = 0; i < cycle; i++) {\r\n            ps[END][x1] += waveLen;\r\n            ps[CTRL][x1] = ps[BEGIN][x1] + ((ps[END][x1] - ps[BEGIN][x1]) * 0.5);\r\n            ps[CTRL][y1] = ps[BEGIN][y1] + ((i % 2 !== 0) ? -amplitude : amplitude);\r\n\r\n            ctx.quadraticCurveTo(ps[CTRL][x1], ps[CTRL][y1], ps[END][x1], ps[END][y1]);\r\n\r\n            ps[BEGIN][x1] = ps[END][x1];\r\n            ps[BEGIN][y1] = ps[END][y1];\r\n        }\r\n\r\n        ps[END][x1] += distance - calcDistance(x, y, ps[END][x1], ps[END][y1]);\r\n        ps[CTRL][x1] = ps[BEGIN][x1] + ((ps[END][x1] - ps[BEGIN][x1]) * 0.5);\r\n        ps[CTRL][y1] = ps[BEGIN][y1] + (((cycle) % 2 !== 0) ? -amplitude : amplitude);\r\n\r\n        ctx.quadraticCurveTo(ps[CTRL][x1], ps[CTRL][y1], ps[END][x1], ps[END][y1]);\r\n\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n\r\n    // 2点間座標からラジアン算出\r\n    function calcRadian(x, y, mx, my) {\r\n        return Math.atan2(my - y, mx - x);\r\n    }\r\n\r\n    // 2点間座標の距離算出\r\n    function calcDistance(x, y, mx, my) {\r\n        return Math.hypot(my - y, mx - x);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}